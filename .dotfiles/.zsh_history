    1  sudo git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $ZSH/themes/powerlevel10k
    2  dpkg
    3  sudo pacman -S lsd
    4  sudo pacman -S dpkg
    5  /bin/bash postInstallation.sh
    6  stInstallation.sh
    7  kill 1
    8  cd Documents/bui/ter
    9  postInstallation.sh
   10  cat lspLanguageServers.sh
   11  chmod+x lspLanguageServers.sh
   12  sudo chmod +x lspLanguageServers.sh
   13  p10k
   14  ls ~/.oh-my-zsh/custom/themes/
   15  cat postInstallation.sh
   16  ./postInstallation.sh
   17  sudo pacman zsh powerlevel
   18  sudo pacman -Ss zsh powerlevel
   19  sudo pacman -S zsh-theme-powerlevel10k
   20  whereis powerlevel
   21  sudo pacman -S yay
   22  sudo pacman -R zsh-theme-powerlevel10k
   23  cht.sh archlinux yay
   24  sudo pacman -S yay-bin
   25  sudo pacman -S --needed git base-devel\ncd /tmp && git clone https://aur.archlinux.org/yay.git\ncd yay\nmakepkg -si
   26  yay -S --noconfirm zsh-theme-powerlevel10k-git\necho 'source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
   27  echo 'source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
   28  p10 configure
   29  sudo pacman -S z
   30  x
   31  cd ~/Documents/builds/terminalConfigs
   32  man z
   33  set $LANG=us_US.UTF-8 $LC_ALL= $LC_CTYPE=
   34  less ~/.zshrc
   35  ln -s .zshrc ~/.zshrc
   36  sudo pacman -S fzf
   37  c tmux invalid LC_all LC_TYPE or LANG
   38  source .zshrc
   39  nvim /etc/locale.gen
   40  rm ~/.zshrc
   41  ln -s ~/Documents/builds/terminalConfigs/.zshrc ~/.zshrc
   42  c change konsole font
   43  cat init.vim
   44  cat keybindings.vim
   45  cat nerdtree.vim
   46  nvim nvimSettings
   47  cat lua.lua
   48  cd lua/plugins
   49  nvim ~/.config/nvim/init.vim
   50  nvim ~/.config/nvim/configs/plugins/keybindings.vim
   51  nvim ~/.config/nvim/configs/plugins/nerdtree.vim
   52  cd plugged
   53  ./lspLanguageServers.sh
   54  sudo pacman -S fzf alsa
   55  sudo pacman -S mixer
   56  sudo pacman -S alsamixer
   57  ps aux|grep pulseaudio
   58  sudo pacman -S alza-utils
   59  aplay 
   60  lspci -nn | grep -i audio
   61  sudo nvim /etc/modprobe.d/alsa-base.conf
   62  ls /etc/modules-load.d
   63  alsactl store
   64  sudo pacman -S alsa-utils
   65  sudo alsactl store
   66  sudo pacman -S pulseaudio pavucontrol
   67  alsamixer -c 0
   68  amixer -D pulse sset Master toggle
   69  pacmd list-sink-inputs
   70  pacmd set-sink-input-mute 23 false
   71  pulseaudio -k
   72  sudo pacman -S morse
   73  cd  Documents/builds
   74  cd configs/
   75  cd ../plugins
   76  sudo pacman -S ripgrep 
   77  cd Doc
   78  z doc
   79  cd configs/lua/plugins
   80  cat telescope.vim
   81  cd /usr/share/fonts
   82  ls newfonts
   83  mkdir nerdfonts
   84  sudo mkdir nerdfonts
   85  ls ~/Downloads/devicons-master
   86  cp ~/Downloads/devicons-master/fonts/* 
   87  cp ~/Downloads/devicons-master/fonts/ nerdfonts
   88  cp -r ~/Downloads/devicons-master/fonts/ nerdfonts
   89  cp -r ~/Downloads/devicons-master/fonts/.* nerdfonts
   90  cp -r ~/Downloads/devicons-master/fonts/* nerdfonts
   91  sudo cp -r ~/Downloads/devicons-master/fonts/* nerdfonts
   92  c archlinux activate fonts
   93  c linux fonts
   94  c linux fcfonts
   95  less ~/Documents/builds/terminalConfigs/install.sh
   96  fc-cache -f -v
   97  ls ~/Downloads/devicons-master/fonts
   98  c remove ln
   99  rm ~/.config/nvim/init.vim
  100  ln -s ~/Documents/builds/terminalConfigs/init.lua ~/.config/nvim
  101  bat install.sh
  102  ls ~/.config/nvim
  103  tree ~/.config/nvim
  104  ls ~/.config/nvim/autoload
  105  rm -rf ~/.config/nvim/autoload
  106  rm -rf ~/.config/nvim/plugged
  107  ls ~/.config/nvim/
  108  bat init.lua
  109  ln -s .tmux.conf ~
  110  cat .tmux.conf
  111  :x
  112  ::x:
  113  nvim ~/Documents/builds/terminalConfigs
  114  whereis $TERM
  115  c where $TERM is set
  116  tmux show-option -qvgs default-terminal
  117  ln -s .tmux.conf ~/.tmux.conf
  118  rm ~/.tmux.conf
  119  ln -s ~/Documents/builds/terminalConfigs/.tmux.conf ~/.tmux.conf
  120  lla ~
  121  tmux show-option -qvg default-terminal
  122  sudo nvim /etc/locale.gen
  123  locale-gen
  124  sudo locale-gen
  125  python2 -m pip install --user --upgrade pynvim
  126  c archlinux python2 pip
  127  pacman -S python2-pynvim
  128  sudo pacman -S python2-pynvim
  129  sudo pacman -S python2-pip
  130  yay -s python2-pip
  131  c test truecolor
  132  ^[[200~awk 'BEGIN{\n    s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;\n    for (colnum = 0; colnum<77; colnum++) {\n        r = 255-(colnum*255/76);\n        g = (colnum*510/76);\n        b = (colnum*255/76);\n        if (g>255) g = 510-g;\n        printf "\033[48;2;%d;%d;%dm", r,g,b;\n        printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;\n        printf "%s\033[0m", substr(s,colnum+1,1);\n    }\n    printf "\n";\n}'~
  133  ./tc.sh
  134  nvim tc2.sh
  135  chmod +x tc2.sh;./tc2.sh
  136  chmod +x tc2.sh
  137  ./tc2.sh
  138  ^[[200~printf "\x1b[38;2;255;100;0mTRUECOLOR\x1b[0m\n"~
  139  printf "\x1b[38;2;255;100;0mTRUECOLOR\x1b[0m\n"~
  140  c lua print
  141  cat plugins
  142  wget google.fr
  143  pacman -S pavucontrol
  144  sudo pacman -S pavucontrol
  145  c autoload neovim
  146  mkdir autoload
  147  cd ..;ls
  148  cd plugins;
  149  cleqr
  150  clear 
  151  apropos copy
  152  apropos man
  153  pacman -Ss gtk
  154  pacman -Ss ripgrep
  155  pacman -Ss grep
  156  pacman -S ripgrep
  157  ls | grep install
  158  ls | grep install | tee
  159  ls | grep install | echo lol
  160  pacman -S vi
  161  sudo pacman -S vi
  162  ls ~ | bat 
  163  ls -la ~ | bat 
  164  pavucontrol
  165  nohup pavucontrol
  166  speaker-test -D default:PCH -c 8 
  167  speaker-test -c 2
  168  sudo pacman -S pulse-alsa
  169  cat /proc/asound/cards
  170  less /etc/asound.conf
  171  less /etc/asound/
  172  less /etc/asou
  173  alsactl restore
  174  sudo alsactl restore
  175  aplay -D plughw:2,1 /usr/share/sounds/alsa/Front_Center.wav
  176  post 'lspci -vnn | grep -A 1 -i audio'.
  177  lspci -vnn | grep -A 1 -i audio
  178  aplay -lL;\nfor i in /proc/asound/card[0-9]*; do echo "--- $i ---";amixer -c $(cat $i/id); done;
  179  cat /procc/asound/modules
  180  lsmod | grep snd
  181  cat /proc/asound/modules
  182  asound -l 
  183  lspci | grep -i audio
  184  pavucontrol&
  185  alsactl -l
  186  alsactl
  187  speaker-test -D default:Generic -c2
  188  speaker-test -D default:Generic -c 8 
  189  speaker-test -Dplug:ALC1220
  190  speaker-test -Dplug:alc1220
  191  speaker-test -Dplug:0
  192  speaker-test -Dplug:2,0
  193  5~
  194  $ lsmod | grep snd
  195  rm ~/.asoundrc
  196  ALSA_CARD=Generic
  197  speaker-test
  198  sudo pacman -R alsa 
  199  pulseaudio --stop
  200  man pulseaudio
  201  pulseaudio --kill
  202  aplay -l
  203  aplay -D plughw:2,0 /usr/share/sounds/alsa/Front_Center.wav
  204  aplay -D plughw:2,0 /usr/share/sounds/alsa/Front_Left.wav
  205  aplay -D plughw:2,0 /usr/share/sounds/alsa/Front_Right.wav
  206  alsamixer set
  207  sudo pacman -R pulseaudio
  208  nvim ~/.asoundrc
  209  c tmux new session
  210  surf nvim autoload
  211  surf google.fr
  212  c surf vim commands
  213  ls configs/lua/
  214  mv configs/lua/pugins configs/lua/config
  215  ls configs/lua/plugins
  216  mv configs/lua/plugins configs/lua/config
  217  ls /configs/lua
  218  ls configs
  219  ls configs/lu/config
  220  ls configs/lu/
  221  ls configs/la
  222  ls configs/lua
  223  rm configs
  224  ln -s ~/Documents/builds/terminalConfigs/configs ~/.config/nvim/configs
  225  rmdir  plugin
  226  cp configs/lua/config/* plugin
  227  mv plugin ~/Documents/builds/terminalConfigs
  228  ln -s plugin ~/.config/nvim/plugin
  229  cd configs/lua
  230  nvim configs/lua/plugins.lua
  231  less keybindings.lua
  232  rm plugin
  233  ls configs/lua/config
  234  less  configs/lua/config/init.lua
  235  ls lua
  236  mkdir lua/config
  237  cp configs/lua/config/* lua/config
  238  less plugins.lua
  239  ln -s ~/Documents/builds/terminalConfigs/lua ~/.config/nvim/lua
  240  ls autoload
  241  ls config
  242  pacman -R telegram-desktop
  243  sudo pacman -s telegram-deskto-binp
  244  sudo pacman -S telegram-deskto-binp
  245  sudo pacman -S telegram-deskto-bin
  246  sudo pacman -S telegram-desktop-bin
  247  where telegram
  248  where telegra-desktop
  249  where telegra-deskto-bin
  250  pacman -S telegram-desktop
  251  sudo pacman -R telegram-desktop
  252  yay -R telegram-desktop-bin
  253  yay -clean
  254  grep -Ri telegram
  255  cd /usr/local/share
  256  cd ~/.local/share/TelegramDesktop
  257  bat log.txt
  258  less log.txt
  259  rm -rf TelegramDesktop
  260  yay -s telegram-desktop-bin
  261  sudo pacman -S element-web
  262  sudo pacman -S element-desktop
  263  tmux attach a -t 0
  264  cd terminalConfigs/lua/config
  265  cd ~/.config/nvim/lua/config
  266  less telescope.lua
  267  nvim telescope.vim
  268  nvim autocommands.vim
  269  nvim autocommands.lua
  270  less gruvbox.vim
  271  less nvim-tree.vim
  272  nvim nerdtree.vim
  273  nvim nvim-tree.vim
  274  cd ../../lua/config
  275  cd ../../configs/plugins
  276  nvim vim-snip.vim
  277  nvim vim-snip.lua
  278  nvim lsp.vim
  279  nvim lsp.lua
  280  cp lsp ../lua
  281  cp -r lsp ../lua
  282  cd lua/
  283  cp -r lsp ../lua/lsp
  284  ls lsp
  285  rmdir lsp
  286  cp -r lsp ../lua/
  287  cd la
  288  nvim lua.lua
  289  chmod +x lua-language-server
  290  lswd
  291  less init.lua
  292  cd configs/plugins
  293  chmod -R +x lua-language-server
  294  git clone https://github.com/sumneko/lua-language-server
  295  git submodule update --init --recursive
  296  less lsp.vim
  297  tmux attach -t 0
  298  c lua multiline comments
  299  c vim subsitute on specific lines
  300  nvim nvimSettings.lua
  301  nvim ../plugins.lua
  302  sudo pacman -S --needed nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loader
  303  pacman -S upgrade
  304  sudo pacman -S upgrade
  305  sudo pacman upgrade
  306  sudo pacman --upgrade
  307  sudo pacman -U
  308  man pacman.conf
  309  sudo nvim /etc/pacman.conf
  310  sudo pacman -S --needed nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loader\n
  311  sudo pacman -R wine
  312  sudo pacman -S wine-staging
  313  mkdir games ~/Documents/games
  314  z tele
  315  wine.log
  316  find wine.log
  317  find -R wine.log
  318  find -t wine.log
  319  find -r wine.log
  320  sudo lutris > lutris.log
  321  sudo lutris > sudo lutris.log
  322  sudo pacman -S python-magic
  323  lutris > lutris.log
  324  cd /usr/bin/wine
  325  cd /usr/bin/
  326  cat wine.inf
  327  cd /usr/share/wine
  328  sudo pacman -FS winealsa.drv.so
  329  sudo pacman -Fs winealsa.drv.so
  330  sudo pacman -F winealsa.drv.so
  331  sudo pacman -Fy winealsa.drv.so
  332  sudo pacman -Syu winealsa.drv
  333  sudo pacman -Syu winealsa
  334  rmdir prefix32
  335  sudo pacman -Syu lib32-libpulse
  336  shglxinfo
  337  glxinfo
  338  sudo pacman -S nvidia-smi
  339  nvidia-smi
  340  ksysguard 
  341  sudo pacman -S ksysguard
  342  nohup ksysguard
  343  nohup ksysguard&
  344  sudo pacman -Ss nvidia
  345  sudo pacman -S nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loader
  346  lutris vuvax
  347  sudo pacman -S playonlinux
  348  c top gpu usage
  349  sudo pacman -Syu nvidia-all
  350  0134:fixme:vulkan:X11DRV_vkCreateWin32SurfaceKHR Application requires child window rendering, which is not implemented yet!
  351  winetricks 
  352  sudo pacman -S winetrikcs
  353  sudo pacman -S winetricks
  354  bash winetricks d3dx10_43
  355  env WINEPREFIX=~/prefix12 sh winetricks d3dx10_43
  356  cd prefix32
  357  env WINEPREFIX=/hone/oxhart/prefix32 sh winetricks d3dx10_43
  358  env $HOME/prefix32 sh winetricks d3dx10_43
  359  sudo env $HOME/prefix32 sh winetricks d3dx10_43
  360  sudo env /home/oxhart/prefix32 sh winetricks d3dx10_43
  361  env WINEPREFIX=~/prefix32 sh winetricks d3dx10_43
  362  sudo env WINEPREFIX=/home/oxhart/prefix32 sh winetricks d3dx10_43
  363  sudo pacman -S dxvkhud
  364  sudo pacman -S mangohud
  365  pacman -F magohud
  366  pacman -Fs magohud
  367  pacman -Fy magohud
  368  sudo pacman -Fy magohud
  369  yay -S mangohud
  370  yay -S lib32-mangohud
  371  mangohud
  372  mangohud wine vuvax
  373  sudo pacman -S wine
  374  env WINEPREFIX=/home/oxhart/prefix32 sh winetricks d3dx10_43
  375  pacman -F nvidia
  376  pacman -S nvidia
  377  sudo pacman -S nvidia
  378  sudo pacman -S gstreamer
  379  sudo pacman -S openvr
  380  sudo pacman -S xcomposite
  381  sudo pacman -F xcomposite
  382  sudo pacman -S libxcomposite
  383  nvidia-xconfig --composite
  384  sudo nvidia-xconfig --composite
  385  cat /etc/X11/xorg.conf
  386  \su
  387  c restart x 
  388  sudo pacman -S dxvk
  389  yay -R dxvk-bin
  390  sudo nvim /etc/X11/xorg.conf
  391  less /var/log/Xorg.0.log
  392  sudo pacman -S --needed nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loader\n~
  393  sudo pacman -S lib32-nvidia-utils
  394  cat wine.log
  395  less wine.log
  396  sudo pacman -S steam
  397  sudo pacman -S sddm-kdm
  398  sudo pacman -R playonlinux
  399  nvim /etc/X11/xorg.conf
  400  nvim lua/plugins.lua
  401  less configs/index.html
  402  less configs/index.html.1
  403  rm configs/index.html configs/index.html.1 
  404  git commit -m "luaTransition finished, major changes, just need to polish some details"
  405  git status 
  406  nvim test.py
  407  nvim test.ht;l
  408  sudo pacman -S red-app
  409  pacman -F red-app
  410  sudo snap install red-app
  411  nvim -c CheckHealth
  412  nvim .local/share/RecentDocuments/client.php.desktop
  413  nvim Downloads/wine.log
  414  rm -rf .PlayOnLinux
  415  sudo pacman -S lutris
  416  rm -rf .config/lutris
  417  nvim .config/katerc
  418  rm -rf .local/share/lutris
  419  nvim .local/share/recently-used.xbel
  420  nvim .local/share/konqueror/QtWebEngine/Default/Network\ Persistent\ State
  421  nvim .local/share/krunnerstaterc
  422  cp .local/share/krunnerstaterc .local/share/krunnerstaterc.bak
  423  rm .local/share/krunnerstaterc.bak
  424  git commit -m "fixing errors"
  425  git push origin 
  426  pacman -Syu tor
  427  sudo pacman -Syu tor
  428  tor
  429  sudo -u tor /usr/bin/tor
  430  apropos tor
  431  pacman -Qs pacman
  432  pacman -Qs tor
  433  cht.sh pacman search package
  434  pacman -Ss tor
  435  pacman -Ss tor browser
  436  sudo pacman -Syu torbrowser
  437  sudo pacman -Syu torbrowser-launcher
  438  sudo lol
  439  sudo pacman -Qs tor
  440  sudoedit lol
  441  sudo pacman -Syu update-alternatives
  442  sudo pacman -Syu alternatives
  443  sudo update-alternatives --config editor
  444  sudo -E nvim /etc/default/grub
  445  visudo /etc/default/grub
  446  man sudoedit
  447  sudoedit -E /etc/default/grub
  448  sudoedit -E nvim /etc/default/grub
  449  sudoedit -e /etc/default/grub
  450  edit /etc/sddm.conf.d/kde_settings.conf
  451  tmux new-session sddm
  452  export SUDO_EDITOR=/usr/bin/nvim
  453  sudoedit /usr/share/sddm/scripts/Xsetup
  454  sudoedit /etc/sddm.conf.d/kde_settings.conf
  455  grub-update 
  456  sudo update-grub
  457  cht.sh moving around shell
  458  less 30_os-prober
  459  nvim 99_quiet
  460  sudo mv ~/99_quiet .
  461  chmod +x 99_quiet
  462  git commit -m "adding neovim to sudoedit"
  463  nvim 30_os-prober
  464  su oxhart
  465  sudo -E nvim 30_os-prober
  466  z grub
  467  sudoedit 30_os-prober
  468  less 00_header
  469  cd /etc/grub.d
  470  less 41_custom
  471  cd /boot/grub
  472  cd .
  473  fzf -i
  474  rm 99_quiet
  475  sudo rm 99_quiet
  476  sudoedit /boot/grub/grub.cfg
  477  sudoedit /etc/grub.d/31_hold_shift
  478  chmod a+x /etc/grub.d/31_hold_shift
  479  cht.sh tmux new session
  480  tmux new-session nvim
  481  tmux new-session test
  482  tmux new-session lol
  483  tmux new-session allo
  484  less material.lua
  485  less hop.lua
  486  whereis cht.sh
  487  cht
  488  cht lol
  489  cht javascript for loop
  490  cht pacman uninstall
  491  pacman -Rs red
  492  sudo pacman -Rs red
  493  sudo pacman -Rs redtube
  494  whereis red
  495  snap -r red
  496  cht snap uninstall
  497  sudo snap remove red-app
  498  snap connections
  499  sudo pacman -Syu freetube
  500  yay
  501  yay -S freetube-bin
  502  cht kde task manager
  503  yay -S plasma-hud-git
  504  \n\nkwriteconfig5 --file ~/.config/kwinrc --group ModifierOnlyShortcuts --key Alt "com.github.zren.PlasmaHUD,/PlasmaHUD,com.github.zren.PlasmaHUD,toggleHUD"\nqdbus org.kde.KWin /KWin reconfigure
  505  pacman -Syu surf
  506  sudo pacman -Syu surf
  507  surf http://www.google.fr
  508  wget https://framabook.org/docs/onlysql/onlysql-Lozano-Georges-ArtLibre-juin2019.pdf
  509  wget https://framabook.org/docs/latex/framabook5_latex_v1_art-libre.pdf
  510  wget https://thermodynamique.fr/thermodynamique-livre-gratuit.pdf
  511  wget https://fr.eloquentjavascript.net/print.html
  512  wget https://framabook.org/docs/c20h/C20H_integrale_creative-commons-by-saV2_AOUT2013.pdf
  513  git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d\n\n\n
  514  yay -Syu emacs
  515  ar
  516  firejail
  517  yay -Syu firejail
  518  firejail --noprofile --hosts-file="~/adblockhosts" surf "www.youtube.com"
  519  man firejail
  520  yay -Syu sty
  521  sudo pacman -Syu st
  522  yay -Syu st
  523  pacman -Syu brave
  524  grep -Ri cable
  525  grep -Ri cable.jpg
  526  klipper
  527  yay -Syu brave
  528  tmux ?
  529  tmux kill test
  530  tmux kill-session test
  531  tmux kill-session -t test
  532  yay -Rs brave
  533  yay -Qs surf
  534  yay -Syu morse
  535  yay -Syu telepathy-morse
  536  yay -Ss morse
  537  whereis firefox
  538  yay -Rs firefox
  539  pip check
  540  pip install mach
  541  export MACH_USE_SYSTEM_PYTHON=0
  542  yay -Syu firefox-appmenu
  543  yay -Syu firefox-appmenu-bin
  544  llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll
  545  typeset -g POWERLEVEL9K_INSTANT_PROMPT=off\n
  546  echo typeset -g POWERLEVEL9K_INSTANT_PROMPT=off >> ~/.zshrc
  547  sudo pacman -Syu ssh-askpass
  548  sudoedit ~/.zshrc
  549  nvim grub
  550  patch
  551  yay -Rs surf
  552  mkdir -p builds/suckless; cd builds/suckless
  553  sudo pacman -Syu qute
  554  yay -Syu qute
  555  yay -Qs qute
  556  yay -Ss qute
  557  yay -Ss qutebrowser
  558  sudo pacman -S qutebrowser
  559  cht gpu usage
  560  cht top gpu usage
  561  curl ipinfo.io -h
  562  ping localhost
  563  curl ipinfo,io
  564  curl ipinfo.io
  565  curl -h
  566  man wget
  567  pip3 install updog
  568  sudo pip3 install updog
  569  file Moe.tar.gz
  570  ilspycmd
  571  sudo pacman -S ilspycmd
  572  yay -S ilspycmd
  573  nc http://192.168.0.201:9090/
  574  nc 192.168.0.201:9090/
  575  nc 192.168.0.201:9090
  576  updog
  577  nc 192.168.0.201 9090
  578  man netcat
  579  sudo pacman -Syu tabbed
  580  yay n -Syu tabbed
  581  cd ../builds
  582  cd suckless
  583  nvim  config.mk
  584  sudo pacman -Syu libglib2.0-dev
  585  sudo pacman -Syu libglib
  586  sudo pacman -Ss libglib
  587  sudo pacman -S glib2
  588  man shell
  589  man shortcuts
  590  man shortcut
  591  man zsh
  592  compgen -c
  593  cht where to find all shell shortcuts
  594  $ binkey
  595  $ bindkey
  596  bindkey | grep search
  597  useful 
  598  $bindkey
  599  bindkey | grep blah
  600  ls bindkey | grep blah
  601  ls bindkey | grep !
  602  tail -f
  603  echo grosse > mabite
  604  cat mabite
  605  cat mabite | tail -f
  606  man tail
  607  tail -f mabite
  608  echo tres >> mabite
  609  echo tres >> ohouisalope
  610  rm ohouisalope
  611  echo ohouisalope >> mabite
  612  rm mabite
  613  mkdir surf
  614  rm rf surf
  615  cd surf
  616  whereis glib
  617  sudo pacman -Qs glib
  618  sudo pacman -Ss glib
  619  sudo pacman -S gli
  620  sudo pacman -S glib
  621  git clone https://git.suckless.org/surf
  622  rm -rf surf
  623  pacman -Ss glib
  624  pacman -S glibc
  625  sudo pacman -S glibc
  626  yay -S surf
  627  yay -R surf
  628  surf www.google.fr
  629  make clean install
  630  surf
  631  tabbed 
  632  git clone https://git.suckless.org/tabbed
  633  cd tabbed; sudo make clean install
  634  man tabbed
  635  man -c surf www.goog.fr
  636  tabbed -c surf www.goog.fr
  637  tabbed -c surf www.google.fr
  638  tabbed
  639  tabbed&
  640  ksysguard
  641  sudo pacman -Ss  mpd
  642  yay -Ss mpd
  643  head lutris.log
  644  sed 1q lutris.log
  645  sed 1q lutris.log 
  646  sed 1 lutris.log 
  647  cht bash parse file
  648  pactl
  649  echo pactl subscribe
  650  pactl subscribe
  651  man pactl
  652  pactl subscribe | grep --line-buffered "sink" | ./prog
  653  smu 
  654  cht c ;;
  655  cht c ';;'
  656  man surf 
  657  chmod +x zerohosts
  658  ./zerohosts
  659  ./zerohosts myhosts.txt
  660  ./zerohosts -a  myhosts.txt
  661  firejail --noprofile --hosts-file="~/adblockhosts" surf "example.com"
  662  ./zerohosts -a 
  663  touch myhosts
  664  sudo ./zerohosts -a
  665  ./zerohosts -a
  666  nvim zerohosts
  667  wget http://someonewhocares.org/hosts/hosts myhosts
  668  less myhosts
  669  less hosts
  670  firejail --noprofile --hosts-file="~/hosts" surf "example.com"
  671  firejail --noprofile --hosts-file="~/hosts" surf "google.fr"
  672  firefox www.google.fr
  673  cht surf zoom
  674  sudo pacman -Syu lf
  675  yay -Syu lf
  676  kwin 
  677  cd aurorae
  678  cd themes
  679  cd moe
  680  cd Moe
  681  nvim Moerc
  682  ls | grep kwin
  683  nvim kwinrulesrc
  684  cht kde restart kwin
  685  kwin_x11 --replace
  686  cht kde logout from terminal
  687  cht logout from terminal
  688  "DISPLAY=:0 su oxhart -c "kwin --replace""
  689  kde-session quit
  690  latte-dock&
  691  kwin_x11 --replace&
  692  nohup kwin_x11 --replace
  693  inxi -Gxx | grep compositor
  694  mv ~/.config/kwinrc ~
  695  mv ~/.config/kwinrulesrc ~
  696  nvim ~/.config/kwinrc
  697  cht delete from history
  698  nvim ~/.bash_history
  699  grep -Ri jM ~/.zsh_history
  700  nvim ~/.zsh_history
  701  grep -Ri kde ~/.zsh
  702  grep -Ri kde ~/.zsh_history
  703  grep -Ri confi ~/.zsh_history
  704  less bindkey
  705  less $bindkey
  706  bindkey | grep !
  707  bindkey | grep delete
  708  bindkey | grep word
  709  grep -Ri kwrit ~/.zsh_history
  710  kwriteconfig5 --file ~/.config/kdeglobals --group WM --key frame 199,36,177
  711  cht terminal test rgb color code
  712  khelpcenter
  713  nvim /usr/share/color-schemes/BreezeLight.colors
  714  nvim /usr/share/color-schemes/Oxygen.colors
  715  cp BreezeLight.colors BreezeLight.colors.bak
  716  sudo cp BreezeLight.colors BreezeLight.colors.bak
  717  sudoedit BreezeLight.colors
  718  nvim BreezeLight.colors.bak
  719  c 
  720  fzf auro
  721  cd home/oxhart
  722  cd color-schemes
  723  nvim Moe.colors
  724  c vuejs/:learn
  725  c
  726  c ..
  727  man c
  728  man cht
  729  c --help
  730  c vue/:learn
  731  c js/:learn
  732  c docker/:learn
  733  head -10
  734  head 10
  735  awk -f
  736  tree | fzf
  737  xargs ls -l
  738  fzf | xargs ls -l
  739  pacman -Qs fzf
  740  pacman -Si fzf
  741  sudo pacman -S zsh
  742  cd -- builds/suckless
  743  cd surf/
  744  ls /us/li/ssh
  745  ls /usr/lib/ssh
  746  pacman -Qs askpass
  747  apropos askpass
  748  ksshaskpass
  749  ssh **
  750  z terinal
  751  git commit -m "Minor fixes"
  752  sudo pacman -Syu docker
  753  pacman -Qs freetube
  754  pacman -Ss freetube
  755  pacman -Ss freetube-bin
  756  yay -Ss freetube
  757  yay -Qs redtube
  758  yay -Rs retube
  759  yay -Ss retube
  760  yay -Ss redtube
  761  docker image
  762  docker pull node
  763  pacman -Ss docker
  764  pacman -Qs docker
  765  kate | fzf
  766  kate 'fzf'
  767  nvim ~/**
  768  nvim /home/oxhart/builds/suckless/surf/surf.c 
  769  mkdir codes; cd codes
  770  c bash go to dir afted create
  771  mcd 
  772  mkdir lol then cd 
  773  mkcd lol
  774  rmdir .
  775  cd .. then rmdir lol
  776  cd .. && rmdir lol
  777  mkdir lol && $_
  778  cd .. ; rmdir $_
  779  rmdir lol; cd builds
  780  cd codes 
  781  take lol
  782  cd ..; rmdir $_
  783  cd ..; rmdir $!
  784  cd lol
  785  cd ..; rmdir 
  786  mkdir lol && cd $_
  787  cd .. && rmdir $_
  788  rmdir lol
  789  who 
  790  who | awk '{print &1,&5}'
  791  who | awk '{print $1,$5}'
  792  who | awk '{print $1,$4}'
  793  man awk 
  794  cat /etc/passwd
  795  whereis nvim
  796  whereis nvim | awk -F " " '{print $3}'
  797  whereis nvim | awk -F " " '{print $5}'
  798  whereis nvim | awk -F 'print $5'
  799  whereis nvim | awk -F '{print $5}'
  800  whereis nvim | awk 'print $5'
  801  whereis nvim | awk {print $5}
  802  whereis nvim | awk '{print $5}'
  803  sed 11q
  804  sed 11q lutris.log
  805  sed 11q README.md
  806  gawk
  807  ark -W version
  808  ark -v version
  809  ark -v 
  810  whereis nvim | awk '{print $5}' | echo > lol.lol
  811  rmdir lol.lol
  812  whereis nvim | awk '{print $5}' | > lol.lol
  813  whereis nvim | awk '{print $5}' > lol.lol
  814  cat lol.lol
  815  rm lol.lol
  816  pacman -Ss mdp
  817  pacman -S mdp
  818  sudo pacman -S mdp
  819  mdp
  820  man mdp
  821  blablablabla
  822  c awk begin
  823  je vais te niquer ta mere fait gaffe je ne rigole pas avec les glands de ton genre grosse merde que t'es vaaaaaaaaaaaaaaa
  824  echo "lol lol lol lol \n lal lal lal lal \n lol lol lol lol \n lal lal lal lal" > test
  825  echo test | awk '{tab[$0]++} END {for (line in tab); print line}'
  826  cat test | awk '{tab[$0]++} END {for (line in tab); print line}'
  827  cat test | awk '{tab[$0]++} END {for (line in tab) print line}'
  828  cat test | awk '{tab[$0]++} END {for (line in tab) print line}'\n: 1646943592:0;cat test | awk '{tab[$0]++} END {for (line in tab) print line}'
  829  awk -h
  830  awk '{tab[$0]++} END {for (line in tab) print line}' test
  831  awk 'print $0'
  832  awk 'print $0' test
  833  awk '{print $0}' test
  834  run-help awk
  835  awk '{print "lol " $0}' test
  836  awk '{print "lol " $1}' test
  837  mkcd cheatsheets
  838  mkcd awk
  839  cd presentations-scripting
  840  cp -r ../..
  841  cp -r presentations-scripting ../..
  842  rm -rf cheatsheets
  843  mv presentations-scripting lesson
  844  cd awk
  845  cd 14-process-sup-2
  846  nvim script.sh
  847  git https://gitlab.com/xavki/presentations_docker.git
  848  git clone https://gitlab.com/xavki/presentations_docker.git
  849  mv presentations_docker lesson
  850  rm -rf shell awk cas-1-cmdb cas-2
  851  git clone https://gitlab.com/xavki/presentations-scripting.git
  852  git clone https://gitlab.com/xavki/presentations-regexp.git
  853  git clone https://gitlab.com/xavki/presentations-docker-swarm.git
  854  git clone https://gitlab.com/xavki/presentations-kvm-libvirt-fr.git
  855  git clone https://gitlab.com/xavki/presentations-netcat.git
  856  git clone https://gitlab.com/xavki/presentations-tcpdump.git
  857  git clone https://gitlab.com/xavki/pipeline-saison-1.git
  858  git clone https://gitlab.com/xavki/presentations-jenkins.git
  859  git clone https://gitlab.com/xavki/docker-generator.git
  860  git clone https://gitlab.com/xavki/tutoriels-keycloak.git
  861  git clone https://gitlab.com/xavki/presentations-terraform-fr.git
  862  git clone https://gitlab.com/xavki/presentations-consul.git
  863  git clone https://gitlab.com/xavki/presentations-kubernetes.git
  864  git clone https://gitlab.com/xavki/presentation-ansible-fr.git
  865  git clone https://gitlab.com/xavki/tutoriels-microk8s.git
  866  git clone https://gitlab.com/xavki/tutoriels-k0s.git
  867  git clone https://gitlab.com/xavki/presentation-traefik-fr.git
  868  git clone https://gitlab.com/xavki/presentation-prometheus-grafana.git
  869  git clone https://gitlab.com/xavki/vagrant-k8s.git
  870  git clone https://gitlab.com/xavki/presentations-elk.git
  871  git clone https://gitlab.com/xavki/installation-mesh.git
  872  git clone https://gitlab.com/xavki/presentations-lxd.git
  873  ls | grep lxd
  874  git clone https://gitlab.com/xavki/tutoriels-saltstack.git
  875  git clone https://gitlab.com/xavki/tutorials-argo-events.git
  876  ls | grep flask
  877  git clone https://gitlab.com/xavki/presentations-flask
  878  git clone https://gitlab.com/xavki/raspberry-tricks
  879  ls | grep cassandra
  880  git clone https://gitlab.com/xavki/presentations-cassandra
  881  git clone https://gitlab.com/xavki/ansible-haproxy
  882  git clone https://gitlab.com/xavki/myhome
  883  git clone https://gitlab.com/xavki/entretiens
  884  git clone https://gitlab.com/xavki/presentations-netdata
  885  st
  886  ssh github.com 
  887  man krunner
  888  krunner -h
  889  cp BreezeDark.colors BreezeDark.colors.bak1
  890  sudo cp BreezeDark.colors.bak1 BreezeDark.colors
  891  sudo cp BreezeDark.colors BreezeDark.colors.bak1
  892  sudo mv ~/BreezeDark.colors .
  893  sudo cp BreezeDark.colors.bak BreezeDark.colors
  894  cd plasma
  895  cd desktoptheme
  896  nvim metadata.desktop
  897  nvim colors
  898  man colors
  899  nvim BreezeDark.colors
  900  nvim ~/.config/kdeglobals
  901  tmux new -s color
  902  tmux attach -t color
  903  cp BreezeDark.colors BreezeDark.colors.bak
  904  nvim /usr/share/plasma/desktoptheme/oxygen/colors
  905  cd /usr/share/plasma/desktoptheme
  906  cd breeze-dark
  907  sudo cp colors colors.bak
  908  sudoedit colors
  909  sudo cp BreezeDark.colors.bak 
  910  sudo cp BreezeDark.colors.bak BreezeDark.colors 
  911  sudo cp BreezeDark.colors BreezeDark.colors.bak
  912  sudo edit BreezeDark.colors
  913  sudoedit BreezeDark.colors
  914  cd /usr/share/color-schemes
  915  sudo nvim BreezeDark.colors
  916  sudo pacman -S tok
  917  yay  -S tok
  918  sudo pacman -S neofetch
  919  sudo pacman -S packagekit-qt5
  920  pacman -Qs lutris
  921  whereis winetricks
  922  winetricks -v
  923  man winetricks
  924  winetricks -V
  925  pacman -Qs telepathy
  926  yay -Qs telepathy-morse-git
  927  yay -S telegram-tdlib-purple
  928  sudo pacman -S telegram-haze
  929  yay -S telepathy-haze
  930  yay -Rs telepathy-haze
  931  yay -Rs telegram-tdlib-purple-git
  932  yay -Qs telegram
  933  yay -Rs telepathy-morse
  934  pacman -S telepathy
  935  sudo pacman -S telepathy
  936  sudo pacman -S telepathy-kde-meta
  937  sudo pacman -S telepathy-kde
  938  yay -S telegram-tdlib-purple-git
  939  yay -S telepathy-morse
  940  c lf hidden files
  941  mount /dev/nvme1n1p1 /boot/EFI
  942  sudo mount /dev/nvme1n1p1 /boot/EFI
  943  ls /boot
  944  ls /boot/EFI
  945  ls /boot/EFI/grub
  946  ls /boot/EFI/EFI
  947  yay -S heroic-games-launcher-bin
  948  ps aux | steam
  949  z lesson
  950  cd aw
  951  ls | grep awk
  952  awk '{print "lol " $1 $3}' test
  953  c awk:/learn
  954  c awk/:learn
  955  c awk/:docker
  956  awk '{$2 = lol; print $2}' test
  957  awk '{print $2}' test
  958  awk '{$2 = lol}' test
  959  less test
  960  awk '{$2 = lol} {print $2}' test
  961  awk '{$2 = lol} {print $3}' test
  962  awk '{$2 = "lol"} {print $2}' test
  963  c python decorators
  964  c kotlin/:learn
  965  sudo pacman -S netflix
  966  neofetct
  967  clr
  968  c mkinitcipio
  969  c mkinitcpio
  970  sudo pacman -Ss netflix
  971  yay -S netflix-bin
  972  yay -Rs netflix-bin
  973  sudo 
  974  sudo echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen
  975  sudoedit /etc/locale.gen
  976  sudo pacman -S ntfs-3g
  977  nvim Oxygen.colors
  978  systemctl --system daemon-reload
  979  sudo systemctl --system daemon-reload
  980  grep -Ri docker ~/.zsh_history
  981  sudo systemctl --start docker.service
  982  docker info
  983  sudo docker run -it ubuntu bash
  984  neofect
  985  c nodejs callback
  986  eix 
  987  df 
  988  free -m
  989  nvim config
  990  ssh pi 
  991  ssh-keygen -t rsa -b 4096 -f ~/.ssh/pi-key
  992  ssh-copy-id -i ~/.ssh/pi-key pi@192.168.0.202 -p 2710
  993  ssh-copy-id -i ~/.ssh/pi-key pi@192.168.0.202
  994  ssh-copy-id -i ~/.ssh/pi-key pi@192.168.0.202:2710
  995  ssh-copy-id -i ~/.ssh/pi-key pi@192.168.0.202 -P 2710
  996  man ssh-copy-id
  997  ssh-copy-id -p 2710 -i ~/.ssh/pi-key pi@192.168.0.202
  998  cd ~/.ssh
  999  ssh-add -l
 1000  ssh-add ~/.ssh/pi-key
 1001  ping 192.168.0.2:80
 1002  ping 192.168.0.202:80
 1003  ping 192.168.0.202
 1004  nvim /dev/urandom
 1005  nvim /dev/random
 1006  nvim /dev/sda1
 1007  cd /dev/man dd
 1008  man dd
 1009  man df
 1010  ssh-keygen -t rsa -b 4096 -f ~/.ssh/cent
 1011  cat ~/.ssh/cent
 1012  cat ~/.ssh/cent.pub
 1013  nvim test.yaml
 1014  grep -Ri pi ~/.zsh_history
 1015  nvim .ssh/cent.pub
 1016  ssh nebj@192.168.0.105\n: 1647538812:0;ssh nebj@192.168.0.105
 1017  cd /boot
 1018  cd EFI
 1019  cd Recovery
 1020  sudo mv Microsoft ~
 1021  nvim nvimSettings.lua\n: 1638796926:0;nvim nvimSettings.lua
 1022  ssh -p 2710 pi@192.268.0.2
 1023  ssh -p 2710 pi@192.268.0.202
 1024  ssh -p 2710 pi@192.168.0.202
 1025  sudo pacman -R steam
 1026  sudo pacman -Sy steam
 1027  ping orcagamingstudio.com
 1028  man directory
 1029  man dir
 1030  apropos directory
 1031  apropos directory | grep "change"
 1032  apropos cd
 1033  man apropos
 1034  whatis cd
 1035  cd -h
 1036  man change-directory
 1037  man change
 1038  man cd
 1039  man CD
 1040  man chdir
 1041  echo "ceci est un test" > letest.txt
 1042  grep -Ri "ceci"
 1043  grep -Ri "ceci est"
 1044  grep -Ri "ceci est test"
 1045  grep -i "ceci est test"
 1046  grep -i "ceci est un test"
 1047  head letest.txt
 1048  ls | grep "ceci"
 1049  ls | grep "le"
 1050  grep -i "ceci est un test" .
 1051  grep -Ri "ceci est un test" 
 1052  grep -Ri "ceci est un test" .
 1053  cht grep don t read hide folder
 1054  grep -ri "ceci est un test" .
 1055  grep -ri --exclude-dir='>*' "ceci est un test" .
 1056  grep -ri --exclude-dir='.*' "ceci est un test" .
 1057  grep -r --exclude-dir='.*' "ceci est un test" .
 1058  cat letest.txt
 1059  grep -r --exclude-dir='.*' "ceci est un test"
 1060  man grep | grep exclude > grep.txt; cat grep.txt
 1061  man grep | grep exclude > grep.txt; cat grep.txt; rm grep.txt
 1062  man grep | grep exclude > grep.txt; ls; cat grep.txt; rm grep.txt
 1063  echo lol && echo lal
 1064  man grep | grep exclude > grep.txt; ls; cat grep.txt; rm grep.txt; ls
 1065  pacman -Syu
 1066  awk
 1067  ps aux | awk 'firefox'
 1068  ps aux | awk 'firefox'{kill -KILL $2}
 1069  ps aux | awk 'firefox'{'kill -KILL $2'}
 1070  ps aux | awk 'firefox'{'print $2'}
 1071  ps aux | awk 'firefox' '{print $2}'
 1072  ps aux | awk 'firefox' {print $2}'
 1073  ps aux | awk '/firefox/' {print $2}'\n
 1074  ps aux | awk '/a/' {print $2}'\n
 1075  ps aux | awk '/a/ {print $2}'\n
 1076  ps aux | kill -KILL awk '/firefox/ {print $2}' \n
 1077  ps aux | awk '/firefox/ {print $2}' | kill\n
 1078  ps aux | awk '/firefox/ {print $2}' | kill -KILL\n
 1079  ps aux | awk '/firefox/ {print $2}' | kill -KILL $?\n
 1080  ps aux | awk '/firefox/ {print $2}' | sudo kill -KILL $?\n
 1081  ps aux | awk '/firefox/ {print $2}'
 1082  ps aux | awk '/firefox/ {print $2}' ; cat $?
 1083  ps aux | awk '/firefox/ {print $2}' ; cat #?
 1084  ps aux | awk '/firefox/ {echo $2}' 
 1085  ps aux | awk '/firefox/ {kill -KILL $2}' 
 1086  ps aux | awk '/firefox/ {print $2}' 
 1087  kill -KILL $(ps aux | awk '/firefox/ print$2')
 1088  kill -KILL $(ps aux | awk '/firefox/ print $2')
 1089  kill -KILL $(ps aux | awk '/firefox/ {print $2}')
 1090  jobs 
 1091  ps aux | firefox
 1092  ps aux | grep firefox
 1093  kill -KILL 9436
 1094  nohup firefox&
 1095  man gawk
 1096  man signal.7
 1097  man kill.7
 1098  grep -r "signal" /usr/share/man
 1099  man grep | grep "-r"
 1100  man grep | grep -r "-r"
 1101  man grep | grep -r "\-r"
 1102  man kill | grep -i "-KILL"
 1103  man kill | grep -i "/-KILL"
 1104  man kill | grep -Ri "KILL"
 1105  man kill | grep -i "KILL"
 1106  man signal(7)
 1107  man signal 7
 1108  sudo pacman -S man-pages
 1109  sudo pacman -S man-db
 1110  man 7 signal
 1111  kill -kill
 1112  kill
 1113  kill -kill $(ps aux | awk '/firefox/ {print $2}')
 1114  kill -kill $(ps aux | awk '/konsole/ {print $2}')
 1115  kill -kill $(ps aux | awk '/konsole/ {print $2}') > kill.log; cat kill.log
 1116  kill -kill $(ps aux | awk '/dolphin/ {print $2}') > kill.log; cat kill.log
 1117  kill -kill $(ps aux | awk '/dolphin/ {print $2}') | echo > kill.log; cat kill.log
 1118  rm kill.log
 1119  kill -killv $(ps aux | awk '/dolphin/ {print $2}') > kill.log; cat kill.log
 1120  kill -V -kill $(ps aux | awk '/dolphin/ {print $2}') > kill.log; cat kill.log
 1121  kill -v -kill $(ps aux | awk '/dolphin/ {print $2}') > kill.log; cat kill.log
 1122  kill --verbose -kill $(ps aux | awk '/dolphin/ {print $2}') > kill.log; cat kill.log
 1123  kill --verbose -KILL $(ps aux | awk '/dolphin/ {print $2}') > kill.log; cat kill.log
 1124  kill --verbose --KILL $(ps aux | awk '/dolphin/ {print $2}') > kill.log; cat kill.log
 1125  kill  -KILL $(ps aux | awk '/dolphin/ {print $2}') > kill.log; cat kill.log
 1126  kill  -KILL $(ps aux | awk '/dolphin/ {print $2}') --verbose > kill.log; cat kill.log
 1127  man kill | grep verbose
 1128  ps -e
 1129  pgrep firefox
 1130  kill  --verbose -s KILL $(ps aux | awk '/dolphin/ {print $2}')  > kill.log; cat kill.log
 1131  kill --verbose -s 9 $(ps aux | awk '/dolphin/ {print $2}')  > kill.log; cat kill.log
 1132  kill -s 9 $(ps aux | awk '/dolphin/ {print $2}')  > kill.log; cat kill.log
 1133  kill -s kill $(ps aux | awk '/dolphin/ {print $2}')  > kill.log; cat kill.log
 1134  kill -sv kill $(ps aux | awk '/dolphin/ {print $2}')  > kill.log; cat kill.log
 1135  kill --vervise --signal kill $(ps aux | awk '/dolphin/ {print $2}')  > kill.log; cat kill.log
 1136  kill --verbose --signal kill $(ps aux | awk '/dolphin/ {print $2}')  > kill.log; cat kill.log
 1137  man kill
 1138  kill --verbose  kill $(ps aux | awk '/dolphin/ {print $2}')  > kill.log; cat kill.log
 1139  kill -L
 1140  c awk delete
 1141  awk '/uii/ {$1=""}' ls.log 
 1142  awk '!/uii/ {$1=""}' ls.log 
 1143  awk '/uii./ {print $1}' ls.log 
 1144  awk '/uii/ {print $1}' ls.log 
 1145  awk '/uii./ {$1=""}' ls.log 
 1146  awk '/uii./ {$1=""}' ls.log > ls1.log
 1147  cat ls1.log
 1148  rm ls1.log
 1149  c awk save modification
 1150  awk -i inplace '/uii./ {$1=""}' ls.log
 1151  echo "uiiiiiii" >> ls.log
 1152  ls > ls.log
 1153  echo "uiiiiiii" >> ls.log; cat ls.log
 1154  ls /log.log;echo "uiiiiiii" >> ls.log; cat ls.log
 1155  ls > log.log;echo "uiiiiiii" >> ls.log; cat ls.log
 1156  rm log.log
 1157  awk -i inplace '/uii./ {$1="loool"}' ls.log; cat ls.log
 1158  awk '/uii./ {$1="loool"}' ls.log; cat ls.log > tmp; mv tmp ls.log
 1159  awk '/uii./ {$1="loool"}' ls.log; cat ls.log > tmp && mv tmp ls.log
 1160  awk '/uii./ {$1="loool"}' ls.log > tmp && mv tmp ls.log
 1161  awk '/uii./ {$1="loool"}' ls.log > ls.log;cat ls.log
 1162  awk '/uii./ {print $1"}'
 1163  awk '/uii./ {print $1}'
 1164  awk '/uii./ {print $1}' ls.log
 1165  awk '/uii./ {$1=""}' ls.log
 1166  awk '/uii./ {$1="lool"}' ls.log
 1167  awk '/uii./ {$1="lool";print}' ls.log
 1168  awk '/uii./ {$1="lool";print$1}' ls.log
 1169  awk '/uii./ {$1="lool"}' ls.log > tmp && mv tmp ls.log;cat ls.log
 1170  awk '/uii./ {$1="lool";print}' ls.log > tmp && mv tmp ls.log;cat ls.log
 1171  awk '{$1="lool";print}' ls.log > tmp && mv tmp ls.log;cat ls.log
 1172  awk '!/ui./ {$1="lool";print}' ls.log > tmp && mv tmp ls.log;cat ls.log
 1173  awk '/ui./ {$1="lool";print}' ls.log > tmp && mv tmp ls.log;cat ls.log
 1174  awk '/uiiii./ {$1="lool";print}' ls.log > tmp && mv tmp ls.log;cat ls.log
 1175  awk '/uiiii./ {$1="lool";print} /!uiiii./ {print}' ls.log > tmp && mv tmp ls.log;cat ls.log
 1176  awk '/uiiii./ {$1="lool";print} !/uiiii./ {print}' ls.log > tmp && mv tmp ls.log;cat ls.log
 1177  ls > ls.log;echo "uiiiiiii" >> ls.log; cat ls.log
 1178  cat ls.log
 1179  man awk
 1180  nvim .zsh_history
 1181  echo "/usr/bin/kill --verbose --signal kill $(ps aux | awk '/dolphin/ {print $2}') > kill.log" > .local/bin/dkiller.sh
 1182  chmod +x .local/bin/dkiller.sh
 1183  dkiller.sh 
 1184  /bin/bash dkiller.sh 
 1185  .local/bin/dkiller.sh
 1186  rm .local/bin/dkiller.sh
 1187  echo "/usr/bin/kill --verbose --signal kill $(ps aux | awk '/dolphin/ {print $2}') > kill.log" > .local/bin/dkiller
 1188  rm .local/bin/dkiller
 1189  echo '/usr/bin/kill --verbose --signal kill $(ps aux | awk '/dolphin/ {print $2}') > kill.log' > .local/bin/dkiller
 1190  ls .local/bin/
 1191  ls .local/share/nvim/swap
 1192  rm .local/share/nvim/swap/%home%oxhart%.local%bin%dkiller.swp
 1193  dkiller firefox
 1194  cat plugins.lua
 1195  nvim .local/bin/dkiller
 1196  ps aux | grep 24157
 1197  dkiller dolphin
 1198  su root
 1199  man systemctl | grep file service
 1200  man systemctl | grep service
 1201  man systemctl | grep file
 1202  man systemd.generator
 1203  ls /srv
 1204  ls /usr/lib/systemd
 1205  ls /usr/lib/systemd/system
 1206  less /usr/lib/systemd/system/sddm.service
 1207  sudoedit /usr/lib/systemd/system/sddm.service
 1208  apropos service
 1209  man cron
 1210  crond 
 1211  sudo crond
 1212  man crond 
 1213  ls .local/bin 
 1214  chmod +x .local/bin/dkiller
 1215  cd;ll
 1216  nvim /usr/lib/systemd/system/sddm.service
 1217  apropos monitor
 1218  apropos monitoring
 1219  ip monitor
 1220  man ip-monitor
 1221  apropos sound
 1222  alsabat
 1223  apropos graphics
 1224  apropos nvidia
 1225  nvidia-smi -l 1
 1226  pacman -Ss nvidia
 1227  ls /etc/ | grep nvidia
 1228  ls /etc/ | grep sddm
 1229  sudoedit /etc/sddm.conf
 1230  sudoedit /etc/sddm.conf.d
 1231  cat kde_settings.conf
 1232  less sudo.conf
 1233  less sudoers
 1234  sudo less sudoers
 1235  cd;ls
 1236  cd /;ls
 1237  ls sbin
 1238  cd sbin
 1239  qls
 1240  cd usr
 1241  dkiller
 1242  ls -all
 1243  apropos process
 1244  apropos process kill
 1245  pkill dolphin
 1246  apropos process | grep kill
 1247  killall dolphin
 1248  ls /etc/apache
 1249  ls /etc | grep apache
 1250  cat /etc/pacman.conf
 1251  systemctl start docker
 1252  sudo dockerd --debug
 1253  sudoedit /etc/fstab
 1254  sudo cp /etc/fstab /etc/fstab.bak
 1255  cat /proc/mounts
 1256  cat /proc/mounts | grep nvme
 1257  mount -l
 1258  mount -l | grep nvme
 1259  df -aTh
 1260  systemctl status docker.service
 1261  docker run hello-world
 1262  sudo docker run hello-world
 1263  sudo docker stop hello-world
 1264  docker ls
 1265  docker --help
 1266  man docker.run
 1267  man docker | grep run
 1268  ls --
 1269  c man use original language
 1270  man --local=en
 1271  man --locale=en
 1272  man man
 1273  nvim /etc/man_db.conf
 1274  LANG=en_US.utf8 man man
 1275  cat $LANG
 1276  man -Len man
 1277  pip install rich
 1278  python
 1279  sudo pacman -Syy gimp
 1280  cat /usr/lib/systemd/system/docker.service
 1281  docker image inspect
 1282  docker image inspect hello-world
 1283  sudo docker image inspect hello-world
 1284  docker image ls
 1285  sudo docker image ls
 1286  man hello-world
 1287  man docker-hello-world
 1288  cd D
 1289  mkdir dockertest && cd $!
 1290  mkdir dockertest && dockertest
 1291  cd dockertest
 1292  mkdir app && cd app
 1293  c php info
 1294  c php print info
 1295  git commit -m "pret a prod :3"
 1296  docker build -t myapp
 1297  docker build -t myapp .
 1298  pwd 
 1299  sudo docker build -t myapp .
 1300  docker run -d --name my-running-app myapp
 1301  sudo docker run -d --name my-running-app myapp
 1302  nohup surf& http://localhost/index.php
 1303  man docker-run
 1304  man docker-run | grep -t
 1305  man docker-run | grep \-t
 1306  man docker-run | grep "\-t"
 1307  docker kill myapp
 1308  sudo docker kill myapp
 1309  sudo docker kill my-running-app
 1310  docker run --help
 1311  sudo docker run --rm my-running-app
 1312  sudo docker run --rm 0ef3a26513b2eb357c5f8132e
 1313  sudo docker ps -a
 1314  docker rm my-running-app
 1315  sudo docker run -p 127.0.0.1:8080:80 -d --name my-running-app myapp
 1316  sudo docker restart -p 127.0.0.1:8080:80 -d --name my-running-app myapp
 1317  sudo docker run --restart unless-stopped -p 127.0.0.1:8080:80 -d --name my-running-app myapp
 1318  ps aux| docker
 1319  kill -KILL 12796
 1320  sudo kill -KILL 12796
 1321  sudo docker run --restart always -p 127.0.0.1:8080:80 -d --name my-running-app myapp
 1322  sudo kill -KILL 13394
 1323  sudo docker stop my-running-app
 1324  sudo docker rm my-running-app
 1325  sudo docker run --always -p 127.0.0.1:8080:80 -d --name my-running-app myapp
 1326  sudo kill -KILL 13932
 1327  sudo systemctl enable docker
 1328  killall docker
 1329  ps aux | grep docker
 1330  z dockertest
 1331  echo 'sudo docker run --restart=always -p 127.0.0.1:8080:80 -d --name my-running-app myapp' > create && chmod +x create
 1332  cat create
 1333  create
 1334  ./create
 1335  echo 'sudo docker stop my-running-app && sudo docker rm my-running-app' > kill && chmod +x kill
 1336  ./kill
 1337  echo 'sudo docker build -t myapp .' > build && chmod +x build
 1338  ./build && ./create
 1339  git commit -m "passage php 7.4"
 1340  c php fetch database
 1341  c php read database
 1342  docker version
 1343  sudo docker version
 1344  mkdir compose; cd compose
 1345  rm compose
 1346  rmdir compose
 1347  mkcd compose
 1348  mkcd src
 1349  git clone git@github.com:S0mbr3/websitecooker.git
 1350  cd src/websitecooker/apps/matchMaking/public
 1351  mkdir php; cd php
 1352  sudo pacman -Syy docker-compose
 1353  cd src/websitecooker/apps/matchMakin
 1354  ../
 1355  cd websitecooker
 1356  mv websitecooker matchmaking
 1357  cd ../../../..
 1358  sudo docker-compose --help
 1359  cat Autoloader.php
 1360  cat index.php
 1361  cd src/websitecooker/apps/matchMaking
 1362  cd src/matchmaking/apps/matchMaking
 1363  ls | grep -i Autoloder.php
 1364  ls | grep -i "Autoloder.php"
 1365  ls | grep -i "Autoloder\.php"
 1366  ls | grep -i "Autoloder
 1367  ls | grep -i "Autoloder"
 1368  ls | grep  "Autoloder"
 1369  ls | grep  Au
 1370  ls | grep  Auto
 1371  ls | grep  Autoload
 1372  ls | grep  Autoloader
 1373  ls | grep  Autoloader.
 1374  ls | grep  Autoloader.php
 1375  nvim Autoloader.php
 1376  nvim index.php
 1377  scp -p 2710 php.ini pi@192.168.0.202:/etc/php7/cli/php.ini
 1378  scp -P 2710 php.ini pi@192.168.0.202:/etc/php7/cli/php.ini
 1379  scp -P 2710 /home/oxhart/php.ini pi@192.168.0.202:/etc/php7/cli/php.ini
 1380  scp -P 2710 pi@192.168.0.202:/etc/php7/cli/php.ini .\n: 1648222496:0;scp -P 2710 pi@192.168.0.202:/etc/php7/cli/php.ini .
 1381  mv php.ini php
 1382  cd php
 1383  sudo docker-compose make test
 1384  nvim php.ini
 1385  sudo docker-compose up 
 1386  sudo docker-compose exec zf php -m
 1387  sudo docker-compose exec php -m
 1388  sudo docker-compose build
 1389  sudo docker-compose exec php-apache-environement php -m
 1390  sudo docker-compose exec php-apache-environment php -m
 1391  docker compose remove
 1392  docker compose rm
 1393  docker compose build
 1394  cht.sh javascript for
 1395  c javascritp for
 1396  kill -KILL 6302
 1397  kill -KILL 93668
 1398  dkiller 
 1399  export PATH="$HOME/.local/bin:$PATH"
 1400  sudoedit $PATH
 1401  ps aux | grep dolphin
 1402  nvim .cshrc
 1403  man tsh
 1404  man tcsh
 1405  man .zshrc
 1406  ps aux | awk -F";"
 1407  ps aux | awk -F";" '/dolphin/ {print $1}'
 1408  ps aux | awk -F ";" '/dolphin/ {print $1}'
 1409  ps aux | awk -F ; '/dolphin/ {print $1}'
 1410  ps aux | awk -F: '/dolphin/ {print $1}'
 1411  /usr/bin/kill --verbose --signal kill $(ps aux | awk '/dolphin/ {print $2}') > kill.log
 1412  /usr/bin/kill --verbose --signal kill $(ps aux | awk '/dolphin/ {print $2}') >> kill.log
 1413  man signal
 1414  kill -h
 1415  kill --help
 1416  echo $(ps aux | awk 'dolphin {print $2}')
 1417  echo $HISTSIZE
 1418  wc -l
 1419  cat .zsh_history | wc -l
 1420  sudo ls /root
 1421  sudo cd /root
 1422  sudo cd /root/
 1423  cd root
 1424  sudo cd root
 1425  sudo chdir root
 1426  echo $HISTFILE
 1427  sudo echo $HISTFILE
 1428  bindkey
 1429  bindkey | grep end
 1430  sudo pacman -Syy bindkey
 1431  tmux new -s docker
 1432  tmux attach -t docker
 1433  man crond
 1434  z system
 1435  z systemd
 1436  which systemd
 1437  which system
 1438  whereis systemc
 1439  whereis systemd
 1440  cd system
 1441  cat docker.service
 1442  cat sddm.service
 1443  nvim sddm.service
 1444  ;r
 1445  sudoedit sddm.service
 1446  sudo mv dkiller.service /usr/lib/systemd/system/dkiller.service
 1447  ls /usr/local
 1448  ls /usr/bin
 1449  ls bin
 1450  systemctl start dkiller
 1451  systemctl stop dkiller.service
 1452  systemctl start dkiller.service
 1453  man systemd | grep run
 1454  man systemd | grep start
 1455  man systemd
 1456  man system.unit
 1457  cd /usr/local
 1458  rmdir -p systemd/system
 1459  sudo rmdir -p systemd/system
 1460  mkdir -p systemd/system
 1461  sudo mkdir -p systemd/system
 1462  mv /usr/lib/systemd/system/dkiller.service /usr/lib/systemd/system/dkiller.service
 1463  mv /usr/lib/systemd/system/dkiller.service /usr/local/lib/systemd/system/dkiller.service
 1464  sudo mv /usr/lib/systemd/system/dkiller.service /usr/local/lib/systemd/system/dkiller.service
 1465  cd systemd/system
 1466  man systemd.unit | grep type
 1467  man systemd.unit
 1468  sudoedit dkiller.service
 1469  sudo systemctl status dkiller
 1470  systemctl daemon-reload
 1471  sudo systemctl enable dkiller
 1472  /home/oxhart/.local/bin/dkiller
 1473  tmux new -s systemd
 1474  nvim dkiller
 1475  sudo systemctl daemon-reload
 1476  systemctl enable dkiller
 1477  sudo systemctl start dkiller
 1478  systemctl status dkiller
 1479  sudo systemctl enable dkiller.service
 1480  sudo systemctl status dkiller.service
 1481  man docker-compose
 1482  man docker
 1483  c linux ip
 1484  c monitor net
 1485  sudo docker-compose rmi
 1486  sudo docker-compose close
 1487  sudo docker-compose rm
 1488  sudo docker compose build
 1489  docker logs mysql
 1490  sudo docker logs mysql
 1491  sudo docker 5996e38af0c1
 1492  sudo docker logs 5996e38af0c1
 1493  sudo systemctl disable dkiller
 1494  cd sysemd
 1495  cd systemd
 1496  grep systemd
 1497  echo "lol" > lol
 1498  echo "lal" > lal
 1499  cp lol lel > log
 1500  cat log
 1501  cp -v lol lil > lag
 1502  cat lag
 1503  cp x v 
 1504  cp x v > 2>&1
 1505  cp \\nif
 1506  ps aux | awk '!/\[/ {print "INSERT INTO process values ('\''"$1"'\'','\''"$2"'\'', '\''"$11"'\'');"}'
 1507  $(ps aux) > a.txt
 1508  ls $(cd)
 1509  ls $(ps aux)
 1510  cat $(ps aux) > a.txt
 1511  echo $(ps aux) a.txt
 1512  echo $(ps aux) > a.txt
 1513  cat a.txt
 1514  ssh pi
 1515  cat php
 1516  tree php
 1517  tree src
 1518  sudo docker run --restart=always -p 127.0.0.1:8080:80 -d --name my-running-app myapp
 1519  sudo docker compose rm
 1520  sudo docker stop my-running-app && sudo docker rm my-running-app
 1521  sudo pacman -S zip
 1522  tree dockertest
 1523  c zip folder linux
 1524  zip -r compose.zip compose
 1525  tree compose.zip
 1526  cat compose.zip
 1527  1;2c1;2c1;2c1;2c1;1;112;112;1;0x1;2c1;2c1;2c1;2c1;2c1;2c1;2c1;2c
 1528  z coding
 1529  cp compose.zip /run/media/oxhart/BigData/multimedia/
 1530  sudo docker compose stop
 1531  sudo pacman -S yaourt
 1532  yaourt 
 1533  yaourt -Syu
 1534  sudo pacman-mirrors 
 1535  git commit -m "preparing lsp servers"
 1536  cd powerlevel10kPolices
 1537  cd ../terminalConfigs
 1538  cd lesson
 1539  ssh nebj@192.168.0.105
 1540  ssh nebj@192.168.0.105 -5045
 1541  ssh nebj@192.168.0.105 -p 5045
 1542  ssh nebj@192.168.0.50 -p 5045
 1543  journalctl -u sddm
 1544  sudo pacman -Syu xorg
 1545  sudo Xorg -version
 1546  sudo startX
 1547  sudo X
 1548  sudo pacman -S nvidia nvidia-utils lib32-nvidia-utils 
 1549  sudo modprobe nvidia
 1550  systemctl restart ssdm
 1551  sudo systemctl restart ssdm
 1552  run-help ¹²³¤€‘˛˛˛˛̛̛\^¹
 1553  ¹²³¤€‘˛˛˛˛̛̛ls^¹
 1554  nvim lutris.log
 1555  sudo pacman -S emacs
 1556  mv ~/.emacs.d ~/spacemacs
 1557  find / -iname init.el
 1558  sudo find / -iname init.el
 1559  nvim ~/.config/nvim/lua/config/lsp
 1560  nvim ~/.config/nvim/lua/config/lsp.lua
 1561  cd /run/media/oxhart/BigData
 1562  nvim cnofigs
 1563  nvim configs
 1564  nvim init.vim
 1565  sudo chmod +rx configs
 1566  cd docker/compose/src
 1567  cd Documents/builds/terminalConfigs
 1568  ls -ls
 1569  nvim plugins.lua
 1570  sudo pacman -S php
 1571  php
 1572  yay -S phpactor
 1573  phpactor status -vvv
 1574  yay -Rs phpactor
 1575  cd phpactor
 1576  composer
 1577  sudo pacman -S composer
 1578  composer install
 1579  sudo ln -s ~/Documents/builds/phpactor/bin/phpactor phpactor
 1580  chmod +x phpactor
 1581  phpactor -status
 1582  phpactor status
 1583  sudo npm install -g emmet-ls
 1584  npm install -g vscode-html-languageserver-extracted
 1585  echo "sudo npm install -g vscode-html-languageserver-bin" > lspLanguageServers.sh
 1586  nvim lspLanguageServers.sh
 1587  cd compo
 1588  cd docker/compose
 1589  npm install -g bash-language-server
 1590  sudo npm install -g bash-language-server
 1591  sudo npm update -g bash-language-server
 1592  sudo npm install -g browser-sync
 1593  lw
 1594  cd bazinfo
 1595  cd compatdata
 1596  cd Program\ Files/
 1597  cd 1887720
 1598  cat system.reg
 1599  cat system.reg | grep modern
 1600  cd 14
 1601  cd 1493710
 1602  cat system.reg | grep iw
 1603  cat system.reg | grep mp
 1604  kill steam
 1605  kill 37882
 1606  kill 37892
 1607  killall -f steam
 1608  man killall | grep force
 1609  man killall |
 1610  man killall
 1611  pkill steam
 1612  pkill -f steam
 1613  cd 794
 1614  cd 7940
 1615  cd pfx
 1616  cd Steam
 1617  cd steamapps
 1618  touch codfolder
 1619  cd Public
 1620  cd steamuser
 1621  cd App
 1622  cd AppData
 1623  cd Local
 1624  cd Roaming
 1625  wine
 1626  wine cmd.exe /C install.cmd
 1627  sudo wine cmd.exe /C install.cmd
 1628  cd Application\ Data/
 1629  find / -iname wallpaper 2>/dev/null
 1630  bindkey | grep backward
 1631  sadfj bal;baskl;d 
 1632  bindkey | grep forward
 1633  sudo pacman -Syu brave
 1634  sudo pacman -Syu wine-staging
 1635  sudo pacman -Syu wine-gecko
 1636  sudo pacman -Syu wine-mono
 1637  sudo ./BraveBrowserSetup.exe
 1638  which wine
 1639  sudo pacman -S libgnutls
 1640  sudo pacman -Ss libgnutls
 1641  sudo pacman -Ss gnutls
 1642  sudo pacman -S gnutls
 1643  sudo pacman -S lib32-gnutls
 1644  sudo wine BraveBrowserSetup.exe
 1645  cd BraveSoftware
 1646  cd temps
 1647  cd temp
 1648  cd Temp
 1649  cd CrashReports
 1650  pacman -Qs nvidia
 1651  pacman -Ss wine-staging
 1652  sudo pacman -Ss kitty
 1653  man kitty | grep background
 1654  z /home/oxhart/Documents/builds/terminalConfigs share
 1655  cd /usr/share/wallpapers/MilkyWay/contents/images/
 1656  man kitty
 1657  man kitty | grep restart
 1658  man kitty | grep "restart" 2>/dev/null
 1659  man kitty | grep "restart" 1>/dev/null
 1660  man kitty | grep "restart" | 1>/dev/null
 1661  man kitty | grep reload
 1662  man kitty | session
 1663  man kitty | grep session
 1664  cd /usr/share/wallpapers/
 1665  cd canopee
 1666  cd Canopee
 1667  cd contents
 1668  man lf
 1669  man lf | grep preview
 1670  man lf | grep image
 1671  kitty +kitten themes
 1672  asdfasdf
 1673  asdfexit
 1674  a
 1675  nvim tc.sh
 1676  chmod +X tc.sh
 1677  ./Templates
 1678  ls.sh
 1679  chmod +x tc.sh
 1680  ./tc.sh 
 1681  [[ $COLORTERM =~ ^(truecolor|24bit)$ ]]
 1682  echo [[ $COLORTERM =~ ^(truecolor|24bit)$ ]]
 1683  é
 1684  b22exit
 1685  sudo pacman -S chafa
 1686  sudo pacman -S unzip
 1687  sudo pacman -S 7z
 1688  sudo pacman -S p7zip
 1689  sudo pacman -S unrar
 1690  sudo pacman -S catdoc
 1691  sudo pacman -S docx2txt
 1692  sudo pacman -S odt2txt
 1693  sudo pacman -S gnumeric
 1694  sudo pacman -S exiftool
 1695  pacman -Fy exiftools
 1696  sudo pacman -Fy exiftools
 1697  sudo pacman -Qs exiftools
 1698  cp ~/Downloads/Image-ExifTool-12.44.tar.gz ~/builds
 1699  cd Image-ExifTool-12.44
 1700  perl Makefile.PL
 1701  make test
 1702  !
 1703  sudo pacman -Qs iso-info
 1704  sudo pacman -S iso-info
 1705  sudo pacman -S libcdio
 1706  echo "sudo pacman -S libcdio" >> 
 1707  echo "sudo pacman -S transmission-cli" >> lf-preview.sh
 1708  echo "sudo pacman -S gnumeric" >> lf-preview.sh
 1709  echo "sudo pacman -S odt2txt" >> lf-preview.sh
 1710  echo "sudo pacman -S docx2txt" >> lf-preview.sh
 1711  echo "sudo pacman -S catdoc" >> lf-preview.sh
 1712  echo "sudo pacman -S unrar" >> lf-preview.sh
 1713  echo "sudo pacman -S p7zip" >> lf-preview.sh
 1714  echo "sudo pacman -S unzip" >> lf-preview.sh
 1715  echo "sudo pacman -S chafa" >> lf-preview.sh
 1716  echo "sudo pacman -S wkhtmltopdf" >>lf-preview.sh
 1717  echo sudo pacman -S imagemagick"
 1718  echo "sudo pacman -S libcdio" >> lf-preview.sh
 1719  echo "sudo pacman -S poppler" >> lf-preview.sh
 1720  echo "sudo pacman -S imagemagick" >> lf-preview.sh
 1721  echo "sudo pacman -S ffmpegthumbnailer" >> lf-preview.sh
 1722  sudo pacman -S mcomix
 1723  echo "yay -S mcomix" >> lf-preview.sh
 1724  pacman -Qs mcomix
 1725  pip install ueberwug
 1726  echo "pip install ueberzug" >> lf-preview.sh
 1727  git clone git@github.com:phpactor/phpactor
 1728  echo "touch ~/.config/lf/lfrc" >> ~/lf-preview.sh
 1729  lf -h
 1730  nvim lf-preview.sh
 1731  find . -iname terminalConfigs 2>/dev/null
 1732  mv lf-preview.sh Documents/builds/terminalConfigs
 1733  ls Documents/builds/terminalConfigs
 1734  sudo pacman -S htop
 1735  xkill
 1736  z docker
 1737  nvim Dockerfile
 1738  1b2
 1739  [Cll
 1740  time tree /
 1741  z music
 1742  z media
 1743  ls op
 1744  ls opt
 1745  ls proc
 1746  cd /run/media/oxhart/Demon maste/multimedia/Music Bonne Qualiter/
 1747  cd run/media/oxhart/Demon\ maste/multimedia/Music\ Bonne\ Qualiter
 1748  cd flac
 1749  z flac
 1750  cd Musi
 1751  cd Musique
 1752  cd Music\ basse\ qualité
 1753  cd Rohff
 1754  cd Rohff-Freestyle.d\'Anthologie
 1755  vlc Freestyle-Au\ delà\ de\ mes\ limites.mp3&
 1756  z musique
 1757  man pcman
 1758  man pacman | grep update
 1759  sudo pacman -S
 1760  sudo pacman -Ss
 1761  run-help Ch
 1762  yay -S bsdmainutils
 1763  sudo pacman -S gettext man-db procps psmisc nano tree bsdmainutils x11-apps wget
 1764  sudo pacman -S xorg-apps
 1765  mkcd gameshell && wget https://github.com/phyver/GameShell/releases/download/latest/gameshell.sh 
 1766  chmod +x gameshell.sh
 1767  ./gameshell.sh
 1768  sudo pacman -S nano
 1769  sudo pacman -S gettext-base man-db procps psmisc nano tree
 1770  sudo pacman -S gettext man-db procps psmisc nano tree
 1771  sudo pacman -S xeyes
 1772  yay -S xeyes
 1773  sudo pacman -S xorg-xeyes
 1774  kill xeyes
 1775  killall xeyes
 1776  z game
 1777  expr 1 + 1
 1778  ./gameshell-save.sh
 1779  ls games
 1780  ls Games
 1781  cd Games/call-of-duty-4-modern-warfare
 1782  $$
 1783  ls $$
 1784  ps -p
 1785  ps -p zsh
 1786  ps -p $
 1787  ps -p $$
 1788  ps aux | awk 'lutris'
 1789  ps aux | awk 'lutris {print $2}'
 1790  $(ps aux | awk 'lutris {print $2}')
 1791  echo $(ps aux | awk 'lutris {print $2}')
 1792  echo $(ps aux | awk '/lutris/ {print $2}')
 1793  $(ps aux | awk '/lutris/ {print $2}')
 1794  kill -s 9 $(ps aux | awk '/lutris/ {print $2}') > kill.log && cat kill.lol
 1795  kill -l
 1796  kill -s kill $(ps aux | awk '/lutris/ {print $2}') > kill.log && cat kill.lol
 1797  ps aux | grep lutris
 1798  cat kill.log
 1799  rm -rf call-of-duty-4-modern-warfare
 1800  rm -rf Call Call\ of\ Duty\ 4\ -\ Modern\ Warfare\ Repack\ By\ R.G\ Catalyst\ -\ MonstersBugle
 1801  nvim cod4x.sh
 1802  chmod +x cod4x.sh
 1803  ./cod4x.sh
 1804  bc 
 1805  expr 5*5
 1806  sudo pacman -S bc
 1807  bc 1+1
 1808  bc -h
 1809  cht bc 
 1810  echo "1*2" | bc
 1811  bc -m
 1812  bc -l
 1813  xrandr | grep ' connected'
 1814  xrandr -outpout DVI-D-0 -rate 144
 1815  xrandr -output DVI-D-0 -rate 144
 1816  xrandr --output DVI-D-0 --rate 144
 1817  xrandr --output DVI-D-0 --mode 1920x1080 --rate 144
 1818  sudo pacman -S libnvidia-egl-wayland1
 1819  sudo pacman -Qs egl
 1820  sudo pacman -Ss egl
 1821  sudo pacman -S xwayland
 1822  sudo pacman -S xorg-xwayland
 1823  sudo pacman -S qt6-wayland
 1824  sudo pacman -S eglstreams
 1825  sudo pacman -S eglstream
 1826  sudo pacman -S gbm
 1827  sudo pacman -Ss gbm
 1828  sudo pacman -S plasma-wayland-session
 1829  sudo pacman -S wayland-utils
 1830  XDG_SESSION_TYPE=wayland startplasmacompositor
 1831  sudo pacman -S plasma-desktop
 1832  pacman -Ss plasmacompositor
 1833  sudo pacman -Ss plasmacompositor
 1834  sudo pacman -Ss plasma
 1835  sudo pacman -Ss compositor
 1836  apropos compositor
 1837  sudo pacman -S kinit
 1838  sudo pacman -S kwim
 1839  sudo pacman -S kwin
 1840  sudo pacman -S plasma-workspace
 1841  XDG_SESSION_TYPE=wayland startplasma-wayland
 1842  lspci | grep -E 'VGA|3D'
 1843  sudo pacman -R sddm
 1844  yay -S ssdm-git
 1845  yay -S ssdm
 1846  yay -S sddm-git
 1847  cd sddm.conf.d
 1848  sudo nvim 10-wayland.conf
 1849  nvim kde_settings.conf
 1850  history | grep bus
 1851  cd /etc/sddm.conf.d
 1852  cat 10-wayland.conf
 1853  tail .local/share/sddm/wayland-session.log
 1854  cat .local/share/sddm/wayland-session.log
 1855  ls -l .local/share/sddm
 1856  cat .local/share/sddm/xorg-session.log
 1857  cd /etc/modprobe.d
 1858  dbus-run-session startplasma-wayland
 1859  sudo pacman -Qs kdeinit
 1860  sudo pacman -Qs kdeinit5
 1861  sudo pacman -Ss kdeinit5
 1862  sudo pacman -Ss kdeinit
 1863  sudo pacman -S kdeinit
 1864  sudo pacman -S kdeinit5
 1865  sudo pacman -R pipewire-asla piprewire-jack pipewire-pulse
 1866  sudo pacman -R pipewire-alsa pipewire-jack pipewire-pulse
 1867  sudo pacman -R pipewire-alsa pipewire-pulse
 1868  sudo pacman -R pipewire-alsa
 1869  sudo pacman -R pipewire-media-session
 1870  sudo pacman -R pipewire-media-sessions
 1871  sudo pacman -S pipewire-media-session
 1872  pulseaudio --start
 1873  pipewire 
 1874  pipewire -start
 1875  man pipewire
 1876  pipewire-pulse 
 1877  pipewire-pulse -start
 1878  pipewire-pulse --start
 1879  man pipewire-pulse
 1880  sudo pacman -S pipewire-audio-client-libraries 
 1881  sudo wireplumber 
 1882  wireplumber 
 1883  sudo pacman -S qpwgraph
 1884  pipewire-alsamixer 
 1885  pipewire-alsa 
 1886  alsamixer 
 1887  qdbus org.kde.Shutdown /Shutdown logoutandshutdown
 1888  journalctl -u sddm.service
 1889  history | grep x
 1890  history | grep sddm
 1891  xinit 
 1892  startplasmacompositor 
 1893  systemctl start kdm
 1894  sudo systemctl start kdm
 1895  sudo pacman -S xcb
 1896  sudo pacman -S eglfs
 1897  sudo pacman -S wayland-egl
 1898  sudo pacman -S qt
 1899  kstart x
 1900  sudo pacman -S x
 1901  sudo pacman -S xorg
 1902  history | startplasmacompositor
 1903  history | grep startplasmacompositor
 1904  $XDG_SESSION_TYPE = X11
 1905  XDG_SESSION_TYPE=X11
 1906  XDG_SESSION_TYPE=x11
 1907  cat /var/log/sddm.log
 1908  sddm
 1909  ldd
 1910  ldd /usr/lib/qt/plugins/platforms/libqxcb.so
 1911  sudo pacman -S alsa
 1912  sudo pacman -S jack2
 1913  sudo pacman -S pulseaudio
 1914  sudo pacman -S wayland
 1915  sudo pacman -S pulseaudio-alsa
 1916  export DISPLAY=:1
 1917  sudo Xorg start
 1918  cat /var/log/Xorg.0.log
 1919  xrandr 
 1920  nvim /usr/share/X11/xorg.conf.d
 1921  sudo Xorg -configure
 1922  sudo nvim /root/xorg.conf.new
 1923  sudo X -configure
 1924  start X
 1925  X
 1926  sudo systemctl info 
 1927  sudo systemctl sddm
 1928  sudo systemctl journal
 1929  sudo systemctl show sddm
 1930  sudo systemctl status sddm
 1931  sudo systemctl status X
 1932  sudo systemctl status plasma-desktop
 1933  sudo pacman -s libxcb
 1934  sudo pacman -S libxcb
 1935  sudo pacman -Ss xcb
 1936  kstart plasma-desktop
 1937  sudo /etc/sddm.conf.d/kde_settings.conf
 1938  export DISPLAY=:0
 1939  kstart5 plasma-desktop
 1940  xrandr --listmonitors
 1941  startplasma-wayland 
 1942  sudo systemctl stop dkiller.service
 1943  sudo systemctl start dkiller.service
 1944  sudo systemctl restart sddm
 1945  startplasma-x11
 1946  yay -R sddm.git
 1947  yay -R sddm
 1948  man yay | grep "-R"
 1949  yay -P
 1950  sudo pacman -Qs sddm
 1951  sudo pacman -R sddm-kcm
 1952  sudo pacman -R sddm-git
 1953  sudo pacman -S sddm
 1954  sudo pacman -S sddm-kcm
 1955  sudo nvim /etc/sddm.conf.d/kde_settings.conf
 1956  sudo pacman -Qs jack
 1957  sudo pacman -Qs alsa
 1958  mount /dev/nvme1n1p1 /boot/efi
 1959  sudo mount /dev/nvme1n1p1 /boot/efi
 1960  ls | grep call
 1961  ls | grep Call
 1962  ls | grep -i Call
 1963  ls | find -iname Call
 1964  ls | grep -i warfare
 1965  ls | grep -i modern
 1966  ls | grep -i "Call of Duty 4: Modern Warfare"
 1967  cd .local/share
 1968  cp Call\ of\ Duty\ 4\ Modern\ Warfare.desktop iw3mp
 1969  nvim iw3mp
 1970  mv iw3mp iw3mp.desktop
 1971  rm iw3mp.desktop
 1972  cd /home/oxhart
 1973  cat dxvk.conf
 1974  pacman -Qs latte-dock
 1975  pacman -S latte-dock
 1976  sudo pacman -Sy st
 1977  sudo make clean install
 1978  ./st
 1979  surf 
 1980  cd ~/.local/share/lutris
 1981  cd runners
 1982  ☺☺☺☺☺☺☺
 1983  ⛔⛔
 1984  sudo pacman -S gnome
 1985  sudo pacman -S pipewire
 1986  sudo pacman -S pipewire-pulse
 1987  sudo pacman -S pipewire-alsa
 1988  sudo pacman -S pipewire-jack
 1989  cd opt;ls
 1990  cd ../proc;ls
 1991  cd run/media/oxhart/BigData
 1992  find . -iname matchmaking
 1993  nvim Queries.php
 1994  neoetch
 1995  ss
 1996  sudo pacman -S iftop
 1997  man iftop
 1998  sudo iftop -i wlan0
 1999  sudo iftop -i wan0
 2000  lshw -class network
 2001  ip a
 2002  sudo pacman -S hwinfo
 2003  sudo hwinfo --network --short
 2004  sudo pacman -S ifconfig
 2005  sudo pacman -S ifstat
 2006  wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg\ncat signal-desktop-keyring.gpg | sudo tee -a /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
 2007  sudo pacman -S cosmic
 2008  yay -Rs pop
 2009  yay -Ss pop
 2010  yay -Ss pop-
 2011  man latte-dock
 2012  man latte
 2013  cht start command using history
 2014  strg-r
 2015  'echo $XDG_SESSION_TYPE'
 2016  history |
 2017  history | grep wayland
 2018  gnome-shell --wayland
 2019  ls /etc/pacman.d/hooks/
 2020  mv nvidia.hook /etc/pacman.d/hooks/
 2021  sudo mv nvidia.hook /etc/pacman.d/hooks/
 2022  sudoedit /etc/gdm3/custom.conf
 2023  nvim custom.conf
 2024  sudo edit custom.conf
 2025  cd /etc/gdm
 2026  sudoedit custom.conf
 2027  journalctl -u wayland
 2028  journalctl -b wayland
 2029  sudo journalctl -b wayland
 2030  sudo journalctl -b | grep wayland
 2031  XDG_SESSION_TYPE=wayland dbus-run-session gnome-session
 2032  echo $XDG_SESSION_TYPE=wayland
 2033  XDG_SESSION_TYPE=wayland
 2034  find / -iname XDG_SESSIOM_TYPE
 2035  find / -iname XDG_SESSIOM_TYPE 2>/dev/null
 2036  sudo find / -iname XDG_SESSIOM_TYPE 2>/dev/null
 2037  sudo find / -iname XDG_SESSION_TYPE 2>/dev/null
 2038  sudo pacman -Qs nvidia
 2039  journalctl -b | grep wayland
 2040  sudo pacman -Qs gdm
 2041  sudo  touch /etc/modpobe.d/nvidia-power-management.conf
 2042  sudo touch /etc/modprobe.d/nvidia-power-management.conf
 2043  sudoedit /etc/modpobe.d/nvidia-power-management.conf
 2044  sudoedit nvidia-power-management.conf
 2045  cd /var/tmp
 2046  systemctl 
 2047  systemctl | grep nvidia
 2048  nvidia-smi --query-gpu=memory.total --format=csv,noheader,nounits
 2049  gnome-session --session gnome-wayland 2> err.log
 2050  cat err.log
 2051  rm err.log
 2052  echo $NVreg_PreserveVideoMemoryAllocations
 2053  cd /etc/modprobe.d/
 2054  cat nvidia-power-management.conf
 2055  sudo systemctl show nvidia-suspend
 2056  sudo systemctl show nvidia-suspend.service
 2057  sudo systemctl enable nvidia-suspend.service
 2058  sudo systemctl enable nvidia-hibernate.service
 2059  sudo systemctl start nvidia-hibernate.service
 2060  sudo systemctl status nvidia-suspend.service
 2061  sudo systemctl status nvidia-hibernate.service
 2062  journalctl -b 
 2063  gnome-session --session gnome-wayland
 2064  journalctl -b | grep modeset
 2065  sudoedit /etc/pacman.d/hooks/nvidia.hook
 2066  cd /etc/gdm/
 2067  cat custom.conf
 2068  history | grep gdm
 2069  sudoedit /lib/udev/rules.d/61-gdm.rules
 2070  ls | grep nvidia
 2071  cd /usr/lib/systemd
 2072  cd system-sleep
 2073  echo ENV{NVIDIA_PRESERVE_VIDEO_MEMORY_ALLOCATIONS}
 2074  echo $(ENV{NVIDIA_PRESERVE_VIDEO_MEMORY_ALLOCATIONS})
 2075  printenv | grep nvidia
 2076  printenv | grep NVIDIA
 2077  printenv 
 2078  sed -e 's/: /=/g' -e 's/\([^[:upper:]]\)\([[:upper:]]\)/\1_\2/g' -e 's/[[:lower:]]/\U&/g' -e 's/^/NVIDIA_/' /proc/driver/nvidia/params
 2079  sudo systemctl enable nvidia-resume.service
 2080  systemctl status nvidia-suspend
 2081  systemctl status nvidia-resume
 2082  systemctl status nvidia-hibernate
 2083  sudo systemctl enable gdm.service
 2084  sudo systemctl start sddm.service
 2085  sudo pacman -S git typescript make
 2086  git clone https://github.com/pop-os/shell.git
 2087  cd shell
 2088  make local-install
 2089  cd builds/shell
 2090  yay -Ss pop-shell
 2091  yay -S gnome-shell-extension-pop-shell-git
 2092  ps-aux
 2093  kill -s kill 1768
 2094  kill -s kill 5054
 2095  kill -s kill 5058
 2096  killall -s kill baloo
 2097  killall -s 9 baloo
 2098  ps aux | grep baloo
 2099  sudo systemctl | grep baloo
 2100  sudo systemctl 
 2101  sudo pacman -S gnome-tweaks
 2102  sudo pacman -S kscreen
 2103  gnome-randr 
 2104  sudo pacman -S gnome-randr
 2105  yay -S gnome-randr
 2106  gnome-randr --outputs DP-1 --primary
 2107  gnome-randr -h
 2108  gnome-randr --output DP-1 -h
 2109  sudo gnome-randr --output DP-1 --primary
 2110  history | grep dbus
 2111  history | grep qdbus
 2112  qdbus org.kde.Shutdown /Shutdown logout
 2113  kscreen 
 2114  a propos
 2115  mv ~/Downloads/instantworkspaceswitcheramalantony.net.v6.shell-extension ~/.local/share/gnome-shell/extensions
 2116  cd .local/share/gnome-shell/extensions
 2117  cd instantworkspaceswitcheramalantony.net.v6.shell-extension
 2118  mv instantworkspaceswitcheramalantony.net.v6.shell-extension instantworkspaceswitcher@amalantony.net
 2119  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-5 '["<Alt>5"]'
 2120  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-6 '["<Alt>6"]'
 2121  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-7 '["<Alt>7"]'
 2122  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-8 '["<Alt>8"]'
 2123  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-9 '["<Alt>9"]'
 2124  ping google.fr
 2125  kill -s kill $(ps aux | awk '/telegram/ {print $2}') > kill.log && cat kill.lol
 2126  kill -s kill $(ps aux | awk '/duty/ {print $2}') > kill.log && cat kill.lol
 2127  brave 
 2128  reboot 
 2129  steam&
 2130  sudo pacman -Syu
 2131  export QT_QPA_PLATFORM=wayland
 2132  latte-dock -d -plateforme wayland
 2133  latte-dock -d -plateform wayland
 2134  sudo pacman -S qt5-qtwayland
 2135  sudo pacman -S qt5-wayland
 2136  latte-dock -d
 2137  sudo pacman -S plasma-wayland-protocols
 2138  latte-dock -r
 2139  sudo pacman -S latte-dock
 2140  cd builds 
 2141  git clone https://github.com/gonzaarcr/Fildem.git
 2142  cd fildemGMenu@gonza.com
 2143  cat settings.
 2144  cat settings.js
 2145  cat extension.js
 2146  cat metadata.json
 2147  cp ~/builds/Fildem/fildemGMenu@gonza.com ~/.local/share/gnome-shell/extensions
 2148  cp -r ~/builds/Fildem/fildemGMenu@gonza.com ~/.local/share/gnome-shell/extensions
 2149  sudo pacman -U ~/Downloads/python3-fildem-0.6.7-1-x86_64.pkg.tar.zst
 2150  echo 'gtk-modules="appmenu-gtk-module"' > ~/.gtkrc-2.0
 2151  ls ~/.config/gtk3-0
 2152  ls ~/.config/gtk3.0
 2153  ls ~/.config/gtk-3.0
 2154  cd ~/.config/gtk-3.0
 2155  nvim settings.ini
 2156  sudo find / -iname fildem
 2157  ls | grep fildem
 2158  cd ~/.local/share
 2159  sudo find / -iname inithud
 2160  cd Fildem
 2161  chmod +x inithud.py
 2162  sudo ln -s /usr/lib/python3.9/site-packages/fildem /usr/lib/python3.10/site-packages \nsudo ln -s /usr/lib/python3.9/site-packages/fildem-0.6.7-py3.9.egg-info/ /usr/lib/python3.10/site-packages
 2163  cp -r fildem ~/.local/lib/python3.9/site-packages
 2164  cp fildem-hud.desktop ~/.local/share/applications
 2165  cp fildem-hud.desktop ~/.local/share/applications/fildem.desktop
 2166  cd ~/.local/share/applications
 2167  nvim fildem.desktop
 2168  cd builds/Fildem
 2169  cp -r fildem ~/.local/lib/python3.10/site-packages
 2170  fildem
 2171  cd ~/.local/lib/python3.9/site-packages
 2172  cd fildem
 2173  ./inithud.py
 2174  history | grep alt
 2175  history | grep -i alt
 2176  chmod +x short.sh
 2177  ./short.sh
 2178  gsettings list-recursively
 2179  gsettings list-recursively | grep dollar
 2180  nvim short.sh
 2181  sudo pacman -S gnome-session
 2182  sudo pacman -S gnome-themes-extra
 2183  kill -s kill $(ps aux | awk '/kitty/ {print $2}') > kill.log && cat kill.lol
 2184  kill -s kill $(ps aux | awk '/akonadi/ {print $2}') > kill.log && cat kill.lol
 2185  kill -s kill 27866
 2186  gsettings list-recursively | grep mutter
 2187  dbus-send --session --print-reply --dest="org.freedesktop.PowerManagement" \\n/org/freedesktop/PowerManagement/Backlight org.freedesktop.PowerManagement.Backlight.GetBrightness
 2188  man doudou
 2189  man xrandr  | grep primary
 2190  set org.gnome.desktop.interface color-scheme 'prefer-dark'
 2191  gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
 2192  sudo pacman -S libadwaita
 2193  sudo pacman -S xdg-desktop-portal-gnome
 2194  mv dconf dconf.bak
 2195  kill -s kill $(ps aux | awk '/latte/ {print $2}') > kill.log && cat kill.lol
 2196  kill -s kill $(ps aux | awk '/baloo/ {print $2}') > kill.log && cat kill.lol
 2197  ls | grep dconf
 2198  rm dconf
 2199  rm -rf dconf
 2200  mv dconf.bak dconf
 2201  sudo pacman -S tor
 2202  find . -iname knaps
 2203  cd Desktop
 2204  cp knaps ~
 2205  cp -r knaps ~
 2206  kill -s kill 55121
 2207  killall steam
 2208  ps aux | grep iw
 2209  xrandr --output XWAYLAND0 --primary
 2210  gnome-randr --output DP-1 --primary
 2211  gnome-randr --output DVI-D-1 --primary
 2212  gnome-randr
 2213  cd ../Downloads
 2214  chmod +x gnome-randr.py
 2215  ./gnome-randr.py -h
 2216  ./gnome-randr.py
 2217  ./gnome-randr.py --output DVI-D-1 --primary
 2218  xrandr --output XWAYLAND1 --primary
 2219  xrandr -h
 2220  xrandr -help
 2221  locale -a
 2222  eval `dbus-launch --auto-syntax`
 2223  sudo gnome-randr --output DVI-D-1 --primary --rate 144
 2224  export $(dbus-launch)
 2225  gnome-randr --output DVI-D-1 --primary --rate 144
 2226  video=DVI-D-1:1920x1080@144
 2227  z steam
 2228  cat libraryfolders.vdf
 2229  cd ../config
 2230  nvim libraryfolders.vdf
 2231  echo "xrandr --output XWAYLAND1 --primary --rate 144" > primary.sh
 2232  echo "xrandr --output XWAYLAND0 --primary --rate 160" >> primary.sh
 2233  nvim priN
 2234  awk '/primary/ {print $1}'
 2235  xrandr | grep awk '/primary/ {print $1}'
 2236  xrandr | awk '/primary/ {print $1}'
 2237  echo "xrandr | awk '/primary/ {print $1}'" >> primary.sh
 2238  nvim primary.sh
 2239  c bash if
 2240  apropos column
 2241  column -h
 2242  lt
 2243  man lt
 2244  lt -h
 2245  wc
 2246  man wc
 2247  xrandr | grep primary | wc
 2248  xrandr | grep primary | wc -l
 2249  xrandr | grep primary | echo $!
 2250  xrandr | grep primary | echo $1
 2251  xrandr | grep primary | print $1
 2252  xrandr | grep primary
 2253  xrandr | grep primary | grep -c $1
 2254  xrandr | grep primary | grep -x $1
 2255  xrandr | grep primary | grep -w $1
 2256  xrandr | grep -c primary
 2257  xrandr | grep -c primary | cut -d " "
 2258  xrandr | grep -c primary 
 2259  xrandr | grep primary 
 2260  xrandr | grep primary | cut -d " "
 2261  xrandr | grep primary | cut -d
 2262  cut --help
 2263  xrandr | grep primary | cut -f
 2264  xrandr | grep primary | cut -f $1
 2265  xrandr | grep primary | cut -d ' '
 2266  xrandr | grep primary | cut -d '|'
 2267  xrandr | grep primary | cut -c 
 2268  xrandr | grep primary | cut -c ' '
 2269  FG
 2270  notify-send -t 3000 "The First Notification" "Hello <b>World</b>"
 2271  notify-send -t 30000 "The First Notification" "Hello <b>World</b>"
 2272  notify-send -t 3000 "The First Notification" "Hello World"
 2273  sudo -u X_user DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/X_userid/bus notify-send 'Hello world!' 'This is an example notification.'
 2274  sudo -u oxhart DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/oxhart/X_userid/bus notify-send 'Hello world!' 'This is an example notification.'
 2275  sudo pacman -S libnotify
 2276  \nnotify-send -u critical -t 0 "You are now accessing the Internet via PrivateTunnel VPN"
 2277  \nnotify-send -u critical -t 1000 "You are now accessing the Internet via PrivateTunnel VPN"
 2278  chmod +x primary.sh
 2279  mv primary.sh primary
 2280  man notify-send
 2281  ./primary
 2282  mv primary ..
 2283  ls .local/bin
 2284  mv primary .local/bin
 2285  nvim .local/bin/primary
 2286  mv ~/.local/bin/primary /usr/local/bin
 2287  sudo mv ~/.local/bin/primary /usr/local/bin
 2288  ps aux | grep steam
 2289  sudo pacman -S gamemode lib32-gamemode
 2290  man gamescope
 2291  gamescope -h
 2292  gamescope --help
 2293  kill -s kill $(ps aux | awk '/steam/ {print $2}') > kill.log && cat kill.lol
 2294  xrandr --output DVI-D-1 --primary --rate 144
 2295  xrandr --output DVI-D-0 --primary --rate 144
 2296  ps aux | grep iw3mp.exe
 2297  kill -s kill $(ps aux | awk '/iw3mp.exe/ {print $2}') > kill.log && cat kill.lol
 2298  cd .local/share/Steam/steamapps
 2299  cd com
 2300  cd common
 2301  cd Call\ of\ Duty\ 4
 2302  sudo setcap 'cap_sys_nice=eip' gamescope
 2303  whereis gamescope
 2304  sudo pacman -S gamescope
 2305  sudo setcap 'cap_sys_nice=eip' /usr/bin/gamescope
 2306  gamescope -w 1920 -h 1080 iw3mp.exe
 2307  gamescope iw3mp.exe
 2308  gamescope -Y --glxgears
 2309  gamescope -r -- glxgears
 2310  pacman -Ss gamescope-git
 2311  ENABLE_VKBASALT=1 gamescope -h 1058 -H 1800 -U vkcube
 2312  z exten
 2313  cd tiling-assistantleleat-on-github.v36.shell-extension
 2314  grep -i uuid
 2315  grep -ri uuid
 2316  grep -ri uuid | awk /'uuid {print $3}'/
 2317  grep -ri uuid | awk '/uuid {print $3}/'
 2318  awk '/uiiii./ {$1="";print} !/uiiii./ {print}' ls.log > tmp && mv tmp ls.log;cat ls.log
 2319  grep -ri uuid | awk '/uuid {print $1}/'
 2320  grep -ri uuid | awk '/uuid {print}/'
 2321  grep -ri uuid | awk '/uuid/ {print $3}'
 2322  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr ",
 2323  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | xargs tr ",
 2324  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | xargs ",
 2325  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr [",] []
 2326  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr [:lower:] [:upper:]
 2327  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | xargs tr [:lower:] [::upper]
 2328  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | xargs tr [:lower:] [:upper:]
 2329  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1
 2330  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr ['",'] [""]
 2331  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr ['\"\,'] [""]
 2332  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr [\"\,] [""]
 2333  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr [""] ['",']
 2334  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr [""] ['t']
 2335  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr ["t"] ['']
 2336  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | xargs tr ["t"] ['']
 2337  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | xargs tr "t" ''
 2338  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr "t"
 2339  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr "t" ''
 2340  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr '",' ''
 2341  awk '/uuid/ {print $3}'
 2342  awk -r '/uuid/ {print $3}'
 2343  man awk | grep recursive
 2344  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",'
 2345  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",' | tail -n 1
 2346  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",' 2>/dev/null
 2347  grep -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",' && tail -n 1
 2348  grep --binary-files=text -ri uuid | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",'
 2349  grep --binary-files=text -ri uuid tiling-assistantleleat-on-github.v36.shell-extension | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",'
 2350  mv tiling-assistantleleat-on-github.v36.shell-extension ~/.local/share/gnome-shell/extensions/$(grep --binary-files=text -ri uuid tiling-assistantleleat-on-github.v36.shell-extension | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",')
 2351  rm ~/.local/share/gnome-shell/extensions
 2352  rm tiling*v36*.zip
 2353  ls | tiling
 2354  ls | grep tiling
 2355  grep -ri tiling
 2356  find . -iname tilin
 2357  find . -iname "tilin"
 2358  find . -iname v33
 2359  find -iname v33
 2360  cd tiling-assistantleleat-on-github.v33.shell-extension
 2361  rm -rf tiling-assistantleleat-on-github.v33.shell-extension
 2362  find -iname media
 2363  find -iname tiling-
 2364  find -iname *.zip
 2365  find -iname . *.zip
 2366  find -iname . \*\.zip
 2367  find -iname . *\.zip
 2368  find . -iname *\.zip
 2369  find . -iname "*\.zip"
 2370  find . -iname "tiling"
 2371  find . -iname "assistant"
 2372  find .  "assistant"
 2373  find .  "tiling"
 2374  rm -rf locale media src schemas
 2375  ls -L
 2376  ls -tr
 2377  ls -la -tr
 2378  cd locale
 2379  cd schemas
 2380  ls -latr
 2381  rm -rf src
 2382  unzip tiling-assistantleleat-on-github.v33.shell-extension.zip
 2383  rm -rf src locale stylesheet.css prefs.js media extension.js schemas metadata.json
 2384  unzip tiling-assistantleleat-on-github.v33.shell-extension.zip tiling
 2385  man unzip
 2386  man unzip | grep "-d"
 2387  grep --binary-files=text -ri uuid tiling-assistantleleat-on-github.v33.shell-extension | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",'
 2388  grep --binary-files=text -ri uuid tiling | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",'
 2389  mv tiling ~/.local/share/gnome-shell/extensions/$(grep --binary-files=text -ri uuid tiling-assistantleleat-on-github.v33.shell-extension | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",')
 2390  cd tiling
 2391  cd ~/.local/share/gnome-shell/extensions
 2392  rm -rf tiling
 2393  mkdir tiling
 2394  unzip tiling-assistantleleat-on-github.v33.shell-extension.zip -d tiling
 2395  mv tiling ~/.local/share/gnome-shell/extensions/$(grep --binary-files=text -ri uuid tiling | awk '/uuid/ {print $3}' | tail -n 1 | tr -d '",')
 2396  z ext
 2397  ls tiling
 2398  run-help slsj
 2399  slsjsssls
 2400  git clone https://github.com/Leleat/Tiling-Assistant.git
 2401  cd Tiling-Assistant/scripts
 2402  chmod +x build.sh
 2403  ./build.sh -i
 2404  run-help 9u
 2405  3C3D1D1C
 2406  latte-dock replace
 2407  ps aux | latte
 2408  ps aux | grep latte
 2409  latte-dock
 2410  latte-dock --help
 2411  latte-dock --layout default
 2412  latte-dock --layout Default
 2413  primary
 2414  nvim /usr/bin/primary
 2415  whereis primary
 2416  cd local/bin
 2417  nvim primary
 2418  latte-dock  broke on wayland
 2419  xrandr | grep primary | cut -d " " -f 1
 2420  xrandr --output XWAYLAND1 --primary --rate 144
 2421  xrandr --output XWAYLAND0 --primary --rate 60
 2422  kill -s kill $(ps aux | awk '/latte-dock/ {print $2}') > kill.log && cat kill.lol
 2423  kill -s kill $(ps aux | awk '/latte-dock/ {print $2}')
 2424  nohup latte-dock&
 2425  run-help 11u
 2426  \n6;11uls
 2427  history | grep gsettings
 2428  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-10 '["<Alt>0"]'
 2429  cat tc.sh
 2430  grep -ri "gsettings"
 2431  grep -ri "gsettings" --binary-files=text
 2432  grep -ri "workspace" --binary-files=text
 2433  grep -ri "workspace"
 2434  cat short.sh
 2435  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-10 "['<Shift><Alt>)']"
 2436  history | grep workspace
 2437  sudo pacman -S ripcord
 2438  yay -S ripcord
 2439  whereis discord-canary
 2440  sudo /usr/bin/discord-canary --enable-features=UseOzonePlatform --ozone-platform=wayland
 2441  sudo pacman -S electron
 2442  sudo pacman -S discord
 2443  whereis discord
 2444  kill -s kill $(ps aux | awk '/discord/ {print $2}')
 2445  kill -s kill 14284
 2446  ps aux | grep discord
 2447  killall discord
 2448  /usr/bin/discord-canary --enable-features=UseOzonePlatform --ozone-platform=wayland
 2449  /usr/bin/discord --enable-features=UseOzonePlatform --ozone-platform=wayland
 2450  man pacman | grep "\-y"
 2451  /usr/bin/discord-canary discord-canary --enable-features=UseOzonePlatform,WebRTCPipeWireCapturer --ozone-platform=wayland
 2452  nohup /usr/bin/discord-canary discord-canary --enable-features=UseOzonePlatform,WebRTCPipeWireCapturer --ozone-platform=wayland&
 2453  /usr/bin/discord-canary discord-canary --enable-features=UseOzonePlatform,WebRTCPipeWireCapturer --ozone-platform=wayland&
 2454  $ electron --enable-features=UseOzonePlatform --ozone-platform=wayland /usr/lib/discord/app.asar
 2455  electron
 2456  $ electron --enable-features=UseOzonePlatform --ozone-platform=wayland /usr/bin/discord-canary
 2457  $ electron --enable-features=UseOzonePlatform --ozone-platform=wayland
 2458  man pacman | grep -R
 2459  man pacman | grep "\-R"
 2460  pacman -R discord
 2461  sudo pacman -R discord
 2462  yay -S discord
 2463  yay -S discord_arch
 2464  yay -S discord_arch-electron
 2465  yay -Ss discord
 2466  discord 
 2467  sudo pacman -S gn
 2468  sudo pacman -S gperf
 2469  sudo pacman -S java-runtime-common
 2470  sudo pacman -S libnet jre-openjdk-headless lld llvm python-httplib2 yarn asar
 2471  sudo pacman -S libnet
 2472  sudo pacman -S jre-openjdk-headless
 2473  sudo pacman -S lld
 2474  sudo pacman -S llvm
 2475  sudo pacman -S python-httplib2
 2476  sudo pacman -S asar
 2477  sudo pacman -R yarn
 2478  rm /usr/bin/yarn
 2479  sudo rm /usr/bin/yarn
 2480  sudo rm /usr/bin/yarnpkg
 2481  sudo rm -rf /usr/lib/node_modules/yarn
 2482  sudo pacman -S yarn
 2483  z mult
 2484  z multi
 2485  z vid
 2486  cd /run/media/oxhart/Demon maste/multimedia
 2487  cd /run/media/oxhart/Demon\ maste/multimedia
 2488  cd mes\ 
 2489  cd mes\ videos
 2490  cd x
 2491  cd X
 2492  ./Katsumi.A.L.Ecole.Des.Infirmieres.FRENCH.XXX.DVDRip.REPACK.1CD.XViD.avi
 2493  vlc Katsumi.A.L.Ecole.Des.Infirmieres.FRENCH.XXX.DVDRip.REPACK.1CD.XViD.avi
 2494  z X
 2495  fildem-hud
 2496  bc 5*5
 2497  man bc
 2498  man bc -i 5*5
 2499  c bc usage
 2500  echo 3*3 |
 2501  echo 3+3 | bc
 2502  bc 3+3
 2503  echo 3/3 | bc
 2504  echo 3*3 | bc
 2505  echo 3 * 3 | bc
 2506  echo 3*3 | bc -s
 2507  echo 3*3 | bc -i
 2508  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-10 "['<Shift><Alt>0']"
 2509  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-9 "['<Shift><Alt>9']"
 2510  whereis electron_node
 2511  yay -S discord_arch_electron
 2512  yay -R discord-canary
 2513  tmux new -s nvim
 2514  man yay | grep cache
 2515  df -h
 2516  find . "kitty"
 2517  mkcd scripts
 2518  nvim fz.sh
 2519  chmod fz
 2520  fz kitty.conf
 2521  fzf -r
 2522  fzf --hiden
 2523  fzf --hidden
 2524  man fzf | grep hide
 2525  ./scripts/fz kitty.conf
 2526  fzf kitty.conf
 2527  fzf | nvim
 2528  man yes
 2529  yes 
 2530  yes | head -100 | awk '{ print NR, NR % 2 == 0 ? "even" : "odd" }'
 2531  yes | head -10 | awk '{ print NR, NR % 2 == 0 ? "even" : "odd" }'
 2532  find . -iname "kitty.conf" | nvim
 2533  export FZF_DEFAULT_COMMAND='rg --hidden -l ""'
 2534  fzf ~
 2535  man fzf | grep path
 2536  fzf --path ~
 2537  mv ~/fz .
 2538  sudo mv ~/fz .
 2539  chmod +x fz 
 2540  mv +x ~
 2541  sudoedit fz
 2542  fz ahahah
 2543  sudo nvim fz
 2544  fz lol
 2545  mv fz ~ && cd ~
 2546  sudo mv fz ~ && cd ~
 2547  ./fz lol
 2548  fd 
 2549  man fzf
 2550  ./zh
 2551  ./fz lol lol lol aaa asdf asdf 
 2552  grep -ri "FZF"
 2553  grep -ri "FZF" --binary-files=text
 2554  grep -riI "FZF" 
 2555  grep -riI "FZF_DEFAULT" 
 2556  grep -riI "FZF\_DEFAULT" 
 2557  grep -riI "FZF\_DEFAULT_COMMAND" 
 2558  export FZF_DEFAULT_COMMAND='fd --type f --hidden --exclude .git'
 2559  find . -iname "kitty.conf" | xargs nvim
 2560  ./fz --help
 2561  ./fz -h
 2562  ./fz -i kitty.conf
 2563  gedit
 2564  dos2unix 
 2565  sudo pacman -S dos2unix
 2566  dos2unix fz fz
 2567  chmod +x tete.sh
 2568  ./tete.sh kitty.conf
 2569  cat fz | sed 's/\r/<CR>/'\n
 2570  cat tete.sh | sed 's/\r/<CR>/'\n
 2571  bash fz
 2572  bash fz kitty.conf
 2573  sudo bash fz kitty.conf
 2574  od -xcb fz
 2575  sudo bash -x fz kitty.conf
 2576  bash -x fz.sh kitty.conf
 2577  bash -x fz -r
 2578  bash -x fz kitty.conf
 2579  bash -x fz -e
 2580  fzf 
 2581  fz -e 
 2582  export FZF_DEFAULT_COMMAND="fd --type f"~
 2583  export FZF_DEFAULT_COMMAND="fd --type f"
 2584  ls&
 2585  fzf&
 2586  ./fz -r
 2587  ./fz -e -i test.lol
 2588  ./fz -e -i
 2589  ./fz -e -i -r 
 2590  ./fz -e -i -r test.lol
 2591  nvim ./zf
 2592  nvim ./fz
 2593  ./fz -er
 2594  ./fz -e
 2595  ./fz -re | bat
 2596  less .zshrc
 2597  ./fz -re
 2598  ./fz
 2599  chmod u+x fz
 2600  rm /usr/local/bin/fz
 2601  rm scripts/fz
 2602  chmod u+x zf
 2603  ./zf kitty.conf
 2604  dos2unix fz
 2605  ./fz kitty.conf
 2606  ./fz / kitty.conf
 2607  ./fz scripts kitty.conf
 2608  ./fz /home/oxhart/scripts kitty.conf
 2609  ./../fz /home/oxhart/scripts kitty.conf
 2610  man find
 2611  man find | grep path
 2612  fd test
 2613  fd ~
 2614  fd --full-path '/home/oxhart' kitty
 2615  fd kitty ~
 2616  fd kitty.conf ~
 2617  fd . ~
 2618  ./../fz ~ fz
 2619  ./../fz ~ kitty.conf
 2620  ./../fz kitty.conf
 2621  ./../fz / kitty.conf
 2622  ls /etc
 2623  ./../fz / fuse.conf
 2624  ./../fz /etc fuse.conf
 2625  mv fz scripts
 2626  fz /
 2627  fz /home/oxhart
 2628  fz /home/oxhart/
 2629  sudo rm /usr/local/bin/fz
 2630  chmod +x fz
 2631  cat zf
 2632  ./fz /home/oxhart/
 2633  export FZF_DEFAULT_COMMAND="fd . $HOME"
 2634  export FZF_DEFAULT_COMMAND=""
 2635  export FZF_DEFAULT_COMMAND="fd . "/""
 2636  export FZF_DEFAULT_COMMAND="fd . '/'"
 2637  export FZF_DEFAULT_COMMAND="fd . ~"
 2638  export FZF_DEFAULT_COMMAND="fd . /etc"
 2639  export FZF_DEFAULT_COMMAND=fd . /"\nexport FZF_DEFAULT_COMMAND="fd . /etc"
 2640  ./fz .
 2641  ./fz $HOME
 2642  sudo ./fz /etc
 2643  ./fz /etc
 2644  ./fz ~/.config
 2645  sudo ./fz / -e
 2646  sudo ./fz /
 2647  sudo export FZF_DEFAULT_COMMAND="fd . /"
 2648  sudo fzf
 2649  cd /root
 2650  nvim fw
 2651  export FZF_DEFAULT_COMMAND="fd . /"
 2652  ./fz /
 2653  ./fz ~
 2654  ./fz -s /etc
 2655  sudo cp scripts/fz /usr/local/bin
 2656  sudo cp fz /usr/local/bin
 2657  sudo chmod +x fz
 2658  fz 
 2659  fz ~
 2660  ./fz -s ~
 2661  fz -s /etc
 2662  fz -S /etc
 2663  sudo
 2664  fz -h
 2665  sudo cp ~/scripts/fz /usr/local/bin
 2666  fz -er ~
 2667  git commit -m "Script to automate search and opening files via fzf bat fd or find"
 2668  fz ~ kitty.conf
 2669  ./fz ~ kitty.conf
 2670  ./fz ~ -ei kitty.conf
 2671  ./fz ~ -er kitty.conf
 2672  fz ~ init.lua
 2673  fz init.lua
 2674  fzf | xargs nvim
 2675  \ls
 2676  nvim ~/.config/nvim/lua/config/keybindings.lua
 2677  vscode-html-language-server --stdio
 2678  whereis vscode-html-language-server
 2679  sudo npm install -g vscode-html-languageserver-bin
 2680  vscode-html-language-server-bin --stdio
 2681  find / -iname vscode-html-language-server
 2682  sudo find / -iname vscode-html-language-server
 2683  sudo find / -iname vscode-html-language-server-bin
 2684  sudo find / -iname vscode
 2685  sudo npm i -g vscode-langservers-extracted
 2686  nvim keybindings.lua
 2687  :qa!
 2688  jskjdhfksjdf
 2689  akakakaka
 2690  sudo pacman -S transmission-cli
 2691  transmission-cli 
 2692  transmission-cli 'https://rarbgway.org/download.php?id=8r6f4ij&h=461&f=UFC.Fight.Night.209.Gane.vs.Tuivasa.1080p.WEB-DL.H264.Fight-BB%5Brartv%5D-[rarbg.to].torrent'
 2693  ./fz -h -e
 2694  ./fz -h -e -i
 2695  ./fz -i-h
 2696  ./fz -i -h
 2697  c bash and operator
 2698  ./fz -h -i
 2699  ./fz -hi
 2700  find ~ -iname Gane
 2701  c grep get file name
 2702  cd ~/.config/transmission
 2703  cd torrents
 2704  vlc f3c31e21df851f60ce96be9e6899f879-17133750.webp
 2705  find . -iname UFC
 2706  find . UFC
 2707  man find 
 2708  nohup fzf | xargs vlc&
 2709  nohup fzf | xargs
 2710  fzf | xargs&
 2711  c bash kill jobs
 2712  kill %%
 2713  fzf | xargs 
 2714  find . -iname "\*\.webp"
 2715  find . -iname "*.webp"
 2716  find Downloads -iname "*.webp"
 2717  fzf | xargs vlc
 2718  fd -i UFC*.mp4
 2719  fd -i UFC
 2720  fd -i UFC\*.mp4
 2721  fd -i "UFC*.mp4"
 2722  fd -i "UFC[]*.mp4"
 2723  fd -i "UFC[*].mp4"
 2724  fd  "UFC[*].mp4"
 2725  fd  "UFC[.].mp4"
 2726  fd  "UFC[.]
 2727  fd  "UFC[.]"
 2728  fd  "UFC[.]\.mp4"
 2729  fd  "UFC[.]mp4
 2730  fd  "UFC[.]mp4"
 2731  fd  "UFC*mp4" -g
 2732  fd  "UFC*mp4" -g | vlc
 2733  fd  "UFC*mp4" -g | xargs vlc
 2734  man fd | path
 2735  man fd | grep path
 2736  fd  -p /home/oxhart "ufc*mp4" -g | xargs vlc
 2737  fd --help
 2738  fd  -p ~ "ufc*mp4" -g | xargs vlc
 2739  fd "ufc*mp4" ~ -g | xargs vlc
 2740  fz
 2741  fd "ufc"
 2742  fd "ufc" | xargs vlc
 2743  fd "ufc*mp4" -g 
 2744  fd "ufc*mp4" -g | vlc
 2745  vlc Downloads/UFC.Fight.Night.209.Gane.vs.Tuivasa.1080p.WEB-DL.H264.Fight-BB\[rartv\]/UFC.Fight.Night.209.Gane.vs.Tuivasa.1080p.WEB-DL.H264.Fight-BB.mp4
 2746  vim 
 2747  vi 
 2748  vi test.c
 2749  c c main
 2750  echo "3*3" | bc
 2751  sudo pacman -S lazygit
 2752  cd lf
 2753  sudo pacman -S ImageMagick
 2754  yay -S ImageMagick
 2755  yay -S imagemagick
 2756  yay -S poppler
 2757  yay -S epub-thumbnailer
 2758  yay -S epub-thumbnailer-git
 2759  yay -S wkhtmltopdf
 2760  yay -S chafa
 2761  yay -S 7z
 2762  yay -S p7zip
 2763  yay -S unrar
 2764  yay -S catdoc
 2765  yay -S docx2txt
 2766  yay -S odt2txt
 2767  yay -S gnumeric
 2768  yay -S exiftool
 2769  yay -S perl-image-exiftool
 2770  yay -S iso-info
 2771  yay -S isoinfo
 2772  sudo pacman -S isoinfo
 2773  yay -S mcomix
 2774  set previewer ~/.config/lf/preview\nset cleaner ~/.config/lf/cleaner
 2775  z multimedia
 2776  sudo pacman -S ranger
 2777  fd rc.conf ~ | xargs nvim
 2778  fd ~ "rc.conf" | xargs nvim
 2779  fd ~/.config "rc.conf" | xargs nvim
 2780  fd "rc.conf" ~ | xargs nvim
 2781  $ ranger --copy-config=all\n
 2782  ranger --copy-config=all\n
 2783  fd "rc.conf" ~ --hidden | xargs nvim
 2784  transmission-cli 'https://skidrowrepack.com/index.php?do=download&id=3849'
 2785  man transmission-cli
 2786  cd Black\ Ops\ \(Rekt\ T5\)\ \(2010\)\ Repack\ by\ Canek77
 2787  cd Black\ Ops\ \(Rekt\ T5\)
 2788  grep -ri language
 2789  nvim steam_emu.ini
 2790  cat \(Language\ English\).cmd
 2791  cat localization.txt
 2792  nvim localization.txt
 2793  sudo winetricks --self-updateaaaAsl
 2794  kill -s kill $(ps aux | wine '/discord/ {print $2}')
 2795  kill -s kill $(ps aux | wine '/wineserver/ {print $2}')
 2796  transmission-cli https://plutonium.pw/iw5m_dlcs.torrent
 2797  sudo pacman -S libstrangle
 2798  yay -S libstrangle
 2799  cd iw5m_dlcs
 2800  cat ReadMe.txt
 2801  rm -rf iw5m_dlcs
 2802  transmission-cli https://plutonium.pw/pluto_t5_full_game.torrent
 2803  winetricks -q vcrun2005
 2804  winetricks -q d3dcompiler_43 d3dx11_42 d3dx11_43
 2805  sudo pacman -S vulkan-icd-loader lib32-vulkan-icd-loader
 2806  sudo pacman -S dxvk-bin
 2807  yay -S dxvk-bin
 2808  iftop -i wlan0
 2809  iftop -i eth0
 2810  iftop -i
 2811  lspci | egrep -i --color 'network|ethernet'
 2812  iftop -i lo
 2813  sudo iftop -i wlp8s0
 2814  sudo iftop -i enp7s0
 2815  sudo iftop -i eth0
 2816  iftop
 2817  sudo iftop
 2818  sudo iftop -i lo
 2819  z dow
 2820  wine plutonium.exe
 2821  WINEPREFIX="$HOME/prefix32" WINEARCH=win32 winecfg
 2822  WINEARCH=win32 WINEPREFIX=path_to_wineprefix winecfg
 2823  history | grep uninstaller
 2824  wine unisntaller
 2825  cd ../.wine
 2826  rm -rf .wine
 2827  rm prefix32
 2828  rm -rf prefix32
 2829  WINEARCH=win32 WINEPREFIX="$HOME/prefix32" winecfg
 2830  winetricks -q --force dotnet48
 2831  winetricks -q d3dcompiler_47 corefonts
 2832  winetricks -q gfw msasn1 physx
 2833  history | grep winetricks
 2834  winetricks -q xact_x64 xact xinput
 2835  WINEPREFIX=~/.wine setup_dxvk install
 2836  wine uninstaller
 2837  transmission-cli https://plutonium.pw/t5_dlcs.torrent
 2838  cd users
 2839  cd Saved\ Games
 2840  cp -r ~/Downloads/Games/ .
 2841  cp -r ~/Downloads/t5_all_dlcs/* Games/pluto_t5_full_game
 2842  c main
 2843  cd main
 2844  cd Games
 2845  cd pluto_t5_full_game
 2846  wine plutonium.Ex
 2847  Use QT_QPA_PLATFORM=wayland 
 2848  QT_QPA_PLATFORM=wayland 
 2849  latte-dock --disable-autostart
 2850  sudo systemctl start gdm.service
 2851  kitty +kitten icat
 2852  tmux a -t nvim
 2853  nvim honneur.jpg
 2854  nvim med.png
 2855  fd "kitty.conf" ~ --hidden | xargs nvim
 2856  chmod test.sh
 2857  chmod +x test.sh
 2858  ./test.sh
 2859  jM4ng3P4s20x
 2860  fd "init.lua" ~ --hidden | xargs nvim
 2861  nvim image.lua
 2862  xrandr --output DVI-D-0 on
 2863  xrandr --output DVI-D-0 --ff
 2864  xrandr --output DVI-D-0 --on
 2865  man xrandr 
 2866  xrandr --output DVI-D-0 --auto
 2867  xrandr --output DP-0 --off
 2868  z Games
 2869  wine plutonium.exe 
 2870  xrandr --output DP-1 --auto
 2871  xrandr --output DP-0 --auto
 2872  xrandr --output DVI-D-0 --off
 2873  wine GoogleChromePortable.exe
 2874  wget 'https://go.microsoft.com/fwlink/?linkid=2108834&Channel=Stable&language=en&consent=0'
 2875  lz
 2876  lx
 2877  wget https://dl.google.com/tag/s/appguid%3D%7B8A69D345-D564-463C-AFF1-A69D9E530F96%7D%26iid%3D%7B65051582-EA61-574F-A30F-E3A0891C169C%7D%26lang%3Dfr%26browser%3D5%26usagestats%3D0%26appname%3DGoogle%2520Chrome%26needsadmin%3Dprefers%26ap%3Dx64-stable-statsdef_1%26brand%3DONGR%26installdataindex%3Dempty/update2/installers/ChromeSetup.exe
 2878  nvim widewine
 2879  chmod +x widewine
 2880  ./widewine
 2881  mkdir widewine
 2882  mkdir widewineFO
 2883  mv manifest.json LICENSE.txt libwidevinecdm.so widewineFO
 2884  cd /usr/lib/firefox
 2885  sudo cp libwidevinecdm.so /usr/lib/firefox
 2886  ls /usr/bin/brave
 2887  sudo cp libwidevinecdm.so /usr/lib/brave
 2888  whereis brave
 2889  cd /usr/lib/brave
 2890  cd widewineFO
 2891  sudo cp libwidevinecdm.so /usr/bin/brave
 2892  ./usr/bin/brave
 2893  cd /usr/bin/brave
 2894  ./brave 
 2895  ls ~/Downlads
 2896  ls ~/Downloads
 2897  ls ~/wineFO
 2898  ls ~/widewineFO
 2899  ls | grep libwidevinecdm.so
 2900  sudo pacman -S brave
 2901  yay -S brave
 2902  yay -Qs brave
 2903  yay -S brave-bin
 2904  cd .local/share/Trash
 2905  transmission-cli magnet:?xt=urn:btih:75d1a614a3087641168b23f2ec6c3f81f0474163&dn=Game of Thrones -Saison 8 HD 1080p VOSTFR
 2906  transmission-cli "magnet:?xt=urn:btih:75d1a614a3087641168b23f2ec6c3f81f0474163&dn=Game of Thrones -Saison 8 HD 1080p VOSTFR"
 2907  sudo pacman -S qbitorrent
 2908  yay -S qbitorrent
 2909  sudo pacman -S transmission
 2910  yay -S transmission
 2911  sudo pacman -S qbittorrent
 2912  sudo pacman -S iplist
 2913  yay -S iplist
 2914  yay -S peerguardian
 2915  sudo pacman -S peerguardian
 2916  yay -S pgl
 2917  yay -Sy
 2918  sudo pacman -Sy
 2919  yay -Syu
 2920  cd ~/Pictures
 2921  rm test.md
 2922  locate 
 2923  xdg-mime 
 2924  xdg-mime default
 2925  xdg-mime default inode/directory
 2926  xdg-mime default nautilus.desktop inode/directory
 2927  xdg-mime query default inode/directory
 2928  sudo xdg-mime query default inode/directory
 2929  nvim /usr/share/applications/defaults.list
 2930  sudo fzf -e | xargs nvim
 2931  cd applications
 2932  ls | grep mime
 2933  nvim mimeinfo.cache
 2934  sudoedit mimeinfo.cache
 2935  sudo xdg-mime default nautilus.desktop inode/directory
 2936  sudo pacman -Ss libaacs0 libbluray2 libbluray-bdj
 2937  yay -S libmediawiki-git
 2938  yay -S gnome-browser-connector
 2939  sudo pacman -S libbluray libaacs
 2940  sudo pacman -S libbluray
 2941  sudo pacman -S libaacs
 2942  sudo pacman -S mplayer
 2943  mplayer br:////bluray/mount/dir
 2944  mplayer br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2945  sudo pacman -S avahi
 2946  sudo systemctl enable avahi-daemon.service
 2947  sudo systemctl start avahi-daemon.service
 2948  sudo pacman -S nss-mdns
 2949  avahi-browse --all --ignore-local --resolve --terminate
 2950  modprobe sg
 2951  ls ~/.config/
 2952  ls | grep aacs
 2953  mkdir ~/.config/aacs
 2954  cd ~/.config/aacs
 2955  touch KEYDB.cfg
 2956  cd 9f3abbe5d24641f5bbbbc9f8e4bdb5e4
 2957  cd remote
 2958  los
 2959  ls -la | grep vlc
 2960  cd /var/log/syslog
 2961  cd journal
 2962  cd old
 2963  cd private4
 2964  cd private
 2965  ls private
 2966  sudo ls private
 2967  yay -S libbbdplus 
 2968  yay -S libbdplus
 2969  yay -S makemkv
 2970  yay -R makemkv
 2971  sudo pacman -S libvdpau
 2972  mplayer --vd-lavc-threads=8 br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2973  man mplayer | grep thread
 2974  man mplayer | grep acceleration
 2975  man mplayer | grep hardware
 2976  mplayer --threads=8 br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2977  mplayer --lavdopts threads=8 br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2978  mplayer -lavdopts threads=8 br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2979  man mplayer | grep hard
 2980  man mplayer | grep acc
 2981  man mplayer | grep mat
 2982  man mplayer | grep maté
 2983  man mplayer | grep accé
 2984  man mplayer | grep accéle
 2985  man mplayer | grep accélé
 2986  mplayer -xv -lavdopts threads=8 br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2987  man mplayer
 2988  man mplayer | grep hwdeec
 2989  mplayer --hwdec=auto br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2990  sudo pacman -S arrib24
 2991  sudo pacman -S arivb24
 2992  sudo pacman -S aribb24
 2993  mplayer --hwdec=auto-safe br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2994  mplayer -vo xv -lavdopts threads=8 br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2995  cat ~/.vlc
 2996  nvim .vlc
 2997  sudo pacman -S java
 2998  vlc bluray:////run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 2999  java -version
 3000  which java
 3001  sls
 3002  mplayer --gpu-api=auto -lavdopts threads=8 br://///run/media/oxhart/BigData/multimedia/Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED/DISC1\n
 3003  man mplayer | grep hwdec
 3004  man mplayer | grep accel
 3005  man vlc | grep bluray
 3006  man vlc 
 3007  sudo pacman -S i2p
 3008  yay -S i2p
 3009  sudo java -jar i2pinstall_1.9.0.jar
 3010  whereis java
 3011  java -v
 3012  java --version
 3013  sudo pacman -Ss openjdk
 3014  sudo pacman -S openjdk
 3015  sudo pacman -S jdk-openjdk
 3016  whereis i2p
 3017  cd i2p
 3018  rm -rf i2p
 3019  java -jar i2pinstall_1.9.0.jar
 3020  cd ~/.local/bin/i2p
 3021  c linux add path
 3022  echo 'export PATH="$PATH:/home/oxhart/.local/bin/i2p"' > ~/.zshrc
 3023  ls ~ | zsh
 3024  ls ~ | grep zsh
 3025  ls ~ | grep .zsh
 3026  ls -A ~ | grep zsh
 3027  nvim ~/.zshrc.pre-oh-my-zsh
 3028  rev ~/.zshrc
 3029  echo 'export PATH="$PATH:/home/oxhart/.local/bin/i2p"' >> ~/.zshrc
 3030  i2prouter 
 3031  i2prouter status
 3032  firefox -P --no-remote
 3033  firefox -P --no-remote&
 3034  sudo pacman -S hugo
 3035  sudo pacman -S torsocks
 3036  sudo torsocks git clone http://thotstashp3v7yqih4b36yqjt7m756ydqfxpmrjfrk2n5xffse6p55ad.onion/Thotbot/hugo-bible.git
 3037  torsocks git clone http://thotstashp3v7yqih4b36yqjt7m756ydqfxpmrjfrk2n5xffse6p55ad.onion/Thotbot/hugo-bible.git
 3038  hugo server --minify --theme book
 3039  nohup firefox -P --no-remote&
 3040  man firefox | grep --no-remote
 3041  man firefox | grep "--no-remote"
 3042  man firefox | grep "\-\-no-remote"
 3043  man firefox | grep \"--no-remote\"
 3044  man firefox
 3045  firefox -h
 3046  firefox -h | grep -i "profile"
 3047  man make | grep "-j"
 3048  man make | grep \"-j"
 3049  man make | grep \"-j
 3050  man make | grep \"-J
 3051  man make | grep \"-J"
 3052  man make | grep \"-J\"
 3053  man make | grep \-J
 3054  man make | grep -J
 3055  man make 
 3056  lsblk -f > lsb.txt
 3057  echo $(lsblk -f) > lsb.txt
 3058  echo lsb.txt
 3059  echo $(lsblk -f)
 3060  echo "$(lsblk -f)" > lsb.txt
 3061  cat lsb.txt
 3062  diff lsb.txt lsblk -f
 3063  diff lsb.txt "$(lsblk -f)"
 3064  diff lsb.txt $(lsblk -f)
 3065  diff lsb.txt "$(lsblk -f)" && echo "$(lsblk -f)" > lsb.txt
 3066  man lsblk
 3067  echo "$(lsblk -f)"
 3068  diff "$(lsblk -f)" lsb.txt && echo "$(lsblk -f)" > lsb.txt
 3069  diff lsb.txt lsb2.txt
 3070  diff lsb2.txt lsb.txt
 3071  diff -c lsb2.txt lsb.txt
 3072  echo "$(lsblk -f)" > lsb2.txt
 3073  diff "$(lsblk -f)" lsb.txt;echo "$(lsblk -f)" > lsb.txt
 3074  diff "$(lsblk -f)" lsb.txt
 3075  man diff
 3076  diff lsb.txt <lsblk -f
 3077  diff lsb.txt <(lsblk -f)
 3078  mount /dev/sde /home/oxhart/usb
 3079  ls /media
 3080  ls /
 3081  ls /run
 3082  mkdir /mnt/usb
 3083  sudo mkdir /mnt/usb
 3084  mount /dev/sde /mnt/usb
 3085  ls /sys
 3086  ls /sys/devices
 3087  lsblk -f
 3088  sudo mount /dev/sde /mnt/usb
 3089  dosfstools
 3090  sudo pacman -S dosfstools
 3091  ls /dev
 3092  diff lsb.txt <(lsblk -f) && echo "$(lsblk -f)" > lsb.txt
 3093  sudo mkfs.vfat /dev/sde
 3094  diff lsb.txt <(lsblk -f);echo "$(lsblk -f)" > lsb.txt
 3095  sudoedit /dev/sde
 3096  sudo cat /dev/sde
 3097  dmesg
 3098  lusb
 3099  lsusb
 3100  echo "$(lsusb)" > lsusb.txt
 3101  diff lsusb.txt <(lsusb);echo "$(lsblk -f)" > lsusb.txt
 3102  cat lsusb.txt
 3103  diff lsusb.txt <(lsusb);echo "$(lsusb)" > lsusb.txt
 3104  lspci -v
 3105  lspci -v | grep VGA
 3106  grep --color -E "vmx|svm" /proc/cpuinfo
 3107  dmesg | grep 'IOMMU enabled'
 3108  sudo dmesg | grep 'IOMMU enabled'
 3109  sudo dmesg | grep 'IOMMU'
 3110  whereis qemu
 3111  qemu -h
 3112  sudo pacman -R qemu
 3113  sudo pacman -Qs qemu
 3114  sudo pacman -S qemu-full
 3115  sudo pacman -S qemu-emulators-full
 3116  ps aux grep i2p
 3117  ps aux | grep i2p
 3118  latte-dock -h
 3119  latte-dock --enable-autostart
 3120  nohup latte-dock --enable-autostart&
 3121  kill -s kill $(ps aux | awk '/brave/ {print $2}')
 3122  yay -S kwin-bismuth
 3123  nvim bismuthShortcuts
 3124  chmod +x bismuthShortcuts
 3125  ./bismuthShortcuts
 3126  cd ~/.config/
 3127  nvim kglobalshortcutsrc
 3128  history | grep eval
 3129  eval "$(ssh-agent -s)"
 3130  ssh-agent
 3131  sudo pacman -S kvm
 3132  sudo pacman -Ss kvm
 3133  sudo pacman -S libvirt
 3134  sudo pacman -S virt-manager
 3135  LC_ALL=C lscpu | grep Virtualization
 3136  grep -E --color=auto 'vmx|svm|0xc0f' /proc/cpuinfo
 3137  yay -s ebtables qemu
 3138  sudo pacman -S ebtables
 3139  sudo pacman -S qemu
 3140  sudo systemctl usermod -G libvirtd -a oxhart
 3141  sudo usermod -G libvirtd -a oxhart
 3142  c linux list groups
 3143  cut -d -f1 /etc/grou | sort
 3144  cut -d: -f1 /etc/grou | sort
 3145  sudo usermod -G libvirt -a oxhart
 3146  rm -rf Game.of.Thrones.S08.2160p.BluRay.HEVC.TrueHD.7.1.Atmos-MIXED
 3147  sudo pacman -S dnsmasq
 3148  ps aux | grep virt
 3149  kill -s kill $(ps aux | awk '/libvirt/ {print $2}')
 3150  sudo systemctl stop libvirtd
 3151  logout 
 3152  z bi
 3153  cd /run/media/
 3154  rm -rf images
 3155  mkdir images
 3156  lspci -k | grep gk104
 3157  kill -s kill $(ps aux | awk '/libvirtls/ {print $2}')
 3158  wmctrl 
 3159  sudo pacman -S wmctrl
 3160  man wmctrl
 3161  cd /usr/share/gnome-shell/extensions
 3162  cd pop-shell@system76.com
 3163  nohup fzf -e | xargs nvim
 3164  nohup fzf -e& | xargs nvim
 3165  nohup fzf -e | xargs nvim&
 3166  fzf -e | xargs nohup nvim&
 3167  find Downloads -iname "*.mp4"
 3168  find Downloads -iname "*.mp4" | vlc
 3169  find Downloads -iname "*.mp4" | xargs vlc
 3170  find Downloads -iname "*.mp4" | xargs nohup vlc&
 3171  find Downloads -iname "*.mp4" | xargs nohup vlc& && exit
 3172  find Downloads -iname "*.mp4" | xargs nohup vlc&;exit 
 3173  find Downloads -iname "*.mp4" | xargs nohup vlc& exit 
 3174  sudo pacman -S signal
 3175  yay -S signal
 3176  l2prouter start
 3177  ls ~/.local/bin/i2p/
 3178  i2prouter start
 3179  sudo npm install -g @angular/language-server
 3180  grep history | qemu
 3181  history | grep qemu
 3182  sudo systemctl start libvirtd
 3183  history | grep virsh
 3184  virsh pool-list
 3185  sudo systemctl enable libvirtd
 3186  ^[[200~sudo virsh net-list --all  ~
 3187  virsh net-list --all  ~
 3188  virsh net-list --all
 3189  virsh net-start default~
 3190  systemctl enable --now libvirtd
 3191  nohup sudo virt-manager &
 3192  lspci -k | grep GK104
 3193  lspci -k | grep
 3194  lspci -k 
 3195  dmesg | grep -i -e DMAR -e IOMMU
 3196  dmesg | grep -i vfio
 3197  sudo dmesg | grep -i -e DMAR -e IOMMU
 3198  ls /etc/modprobe.d
 3199  echo "vfio-pci.ids=10de:1180,10de:0e0a" > vfio.conf
 3200  systemctl service
 3201  man systemctl
 3202  systemctl status
 3203  systemctl status libvirtd
 3204  sudo systemctl enable --now firewalld
 3205  virsh net-autostart default
 3206  sudo virsh net-autostart default
 3207  virsh net default
 3208  virsh net-start default
 3209  sudo virsh net-start default
 3210  nohup sudo virt-manager
 3211  nvim /etc/libvirt/qemu
 3212  sudo setfacl -m u:qemu:rx /run/media/oxhart/BigData/images
 3213  getfacl -e /run/media/oxhart/BigData/images
 3214  ls win10.qcow2
 3215  ls -l /var/lib/libvirt/images
 3216  ls -l /var/lib/libvirt/
 3217  id libvirt-qemu
 3218  sudo setfacl -m u:libvirt-qemu:rx /run/media/oxhart/BigData/images
 3219  sudo setfacl -m u:libvirt-qemu:rx /run/media/oxhart/BigData/images/win10.qcow2
 3220  sudo usermod -a -G libvirt $(whoami)
 3221  sudo usermod -a -G libvirt-qemu $(whoami)
 3222  sudo getfacl -e /run/media/oxhart/BigData/
 3223  sudo getfacl -e /run/media/oxhart/BigData/images
 3224  virt-xml win10 --edit --cpu host-passthrough
 3225  sudo virt-xml win10 --edit --cpu host-passthrough
 3226  sudo virt-xml win10-2 --edit --cpu host-passthrough
 3227  nvim qemuXML2
 3228  sudo nohup virt-manager
 3229  sudo virt-xml win11 --edit --cpu host-passthrough
 3230  sudoedit /etc/default/grub
 3231  cat /etc/modprobe.d/vfio.conf
 3232  fzf -e | xargs sudoedit
 3233  sudoedit /etc/libvirt/qemu.conf
 3234  sudo nvim /etc/libvirt/qemu.conf
 3235  /dev/input/by-id/
 3236  cat /dev/input/by-id/
 3237  cat /dev/input/by-id/usb-HOLDCHIP_USB_Gaming_Keyboard-if01-event-kbd
 3238  sudo cat /dev/input/by-id/usb-HOLDCHIP_USB_Gaming_Keyboard-if01-event-kbd
 3239  sudo cat /dev/input/by-id/usb-Kingsis_Peripherals_ZOWIE_Gaming_mouse-event-mouse 
 3240  ls /dev/input/by-id/
 3241  sudo nvim
 3242  sudoedit /etc/modprobe.d/vfio.conf
 3243  history | grep vlc
 3244  fd -i UFC*.mp4 | xargs vlc
 3245  fd  ~ "ufc*mp4" -g | xargs vlc
 3246  fd "ufc*mp4" -g | xargs vlc
 3247  sudo nvim 
 3248  sudo nvim /etc/modprobe.d/vfio.conf
 3249  sudo mv /etc/modprobe.d/vfio.conf ~
 3250  nvim qemuXMLWIN11
 3251  for iommu_group in $(find /sys/kernel/iommu_groups/ -maxdepth 1 -mindepth 1 -type d);do echo "IOMMU group $(basename "$iommu_group")"; for device in $(\ls -1 "$iommu_group"/devices/); do if [[ -e "$iommu_group"/devices/"$device"/reset ]]; then echo -n "[RESET]"; fi; echo -n $'\t';lspci -nns "$device"; done; done
 3252  lspci -nnk -d 10de:0e0a
 3253  sudo mv vfio.conf /etc/modprobe.d
 3254  nvim win11
 3255  sudo systemctl start tun
 3256  echo "efi-framebuffer.0" > /sys/bus/platform/devices/efi-framebuffer.0/driver/unbind
 3257  sudo echo "efi-framebuffer.0" > /sys/bus/platform/devices/efi-framebuffer.0/driver/unbind
 3258  nvim qemuXML
 3259  ls -l /run/media/oxhart/BigData/
 3260  ls -l /run/media/oxhart/BigData/images
 3261  sudo virt-manager
 3262  umount /dev/sdb1
 3263  sudo fsck -y /dev/sdb1
 3264  touch /run/media/oxhart/BigData/images/test.txt
 3265  sudo touch /run/media/oxhart/BigData/images/test.txt
 3266  sudo dmesg
 3267  sudo dmesg | grep sdb
 3268  sudo dmesg | grep sda
 3269  sudo dmesg | grep nvme1n1p4
 3270  cat /etc/fstab
 3271  root 
 3272  mount /dev/sdb1 rw
 3273  mount /dev/sdb1 /run/media/oxhartBigData rw
 3274  mount /dev/sdb1 /run/media/oxhartBigData
 3275  mount /dev/sdb1 /run/media/oxhart/BigData rw
 3276  mount /dev/sdb1 /run/media/oxhart/BigData
 3277  sudo mount /dev/sdb1 /run/media/oxhart/BigData
 3278  sudo -l
 3279  sudo -i\
 3280  mount -o remount,rw /run/media/oxhart/BigData
 3281  sudo nvim /etc/mkinitcpio.conf
 3282  fdisk -l
 3283  sudo fdisk -l
 3284  sudo fdisk -l | grep sdc
 3285  sudo fdisk -l | grep sde
 3286  umount /dev/sde
 3287  umount /dev/sde1
 3288  sudo dd if=/dev/zero of=/dev/sdc bs=512 count=16
 3289  sudo dd if=/dev/zero of=/dev/sde bs=512 count=16
 3290  sudo dmesg | grep -i sde
 3291  cdrecord -v dev=/dev/sr0 blank=fast
 3292  sudo pacman -S growisofs
 3293  yay -S growisofs
 3294  yay -Ss growisofs
 3295  growisofs 
 3296  sudo pacman -S dvd-rw-tools
 3297  yay -S dvd-rw-tools
 3298  yay -S dvd+rw-tools
 3299  ls | grep iso
 3300  cdrecord -v dev=/dev/sr0 blank=all
 3301  \n\n\n\nqdbus | sort -V |                                                      \\n\nsed -u -e 's/\(.*\)/echo =========== \1 ========== ;                   \\n\ngdbus introspect -r  --session  -o \/ --only-properties -d \1/g' |     \\n\nbash\n\n
 3302  qdbus | sort -V |                                                      gdbus introspect -r --session -o / --only-properties -d org.freedesktop.DBus.GLib.Const\n\n\\n\nsed -u -e 's/\(.*\)/echo =========== \1 ========== ;                   \\n\ngdbus introspect -r  --session  -o \/ --only-properties -d \1/g' |     \\n\nbash\n\n
 3303  gdbus introspect -r --session -o / --only-properties -d org.freedesktop.DBus.GLib.Const\n\n
 3304  man sort
 3305  qdbus
 3306  qdbus | sort -V
 3307  qdbus | sort -V | sed -u -e 's/\(.*\)/echo =========== \1 ========== ;                   \\n\ngdbus introspect -r  --session  -o \/ --only-properties -d \1/g' |     \\n\nbash\n\n
 3308  qdbus | sort -V | sed -u -e 's/\(.*\)/echo =========== \1 ========== ; gdbus introspect -r  --session  -o \/ --only-properties -d \1/g' | bash\n\n
 3309  growisofs -dvd-compat -Z /dev/sr0=Win11_22H2_French_x64.iso\n
 3310  man growisofs
 3311  sudo dmesg | grep -i vfio
 3312  cd multimedia
 3313  rager
 3314  cd nvim/lua
 3315  nvim telescope.lua
 3316  nvim nvim-tree.lua
 3317  z termi
 3318  cd /*/*/*/*/images
 3319  cd /r*/m*/o*/B*/images
 3320  cd /r/m/o/B/i
 3321  cd /r*/*/*/*/images
 3322  nvim /r*/*/*/*/images/*
 3323  nvim /r*/*/*/*/i*/*
 3324  kitty +kitten icat honneur.jpg
 3325  cd images
 3326  nvim test.txt
 3327  cat h1.jpg
 3328  
 3329  nvim -r fz
 3330  cd core
 3331  nvim DbQueries.php
 3332  z conpose
 3333  z comp
 3334  z Big
 3335  cd matchMaking
 3336  sudo mount -o remount,rw /run/media/oxhart/BigData
 3337  man unzip | grep "\-d"
 3338  mkdir ~/dev
 3339  cd Documents/
 3340  ls builds
 3341  ls ~/builds
 3342  cp -r/r*/*/*/*/
 3343  rm ~/codes
 3344  rmdir ~/codes
 3345  cp -r /r*/*/*/*/c* ~
 3346  ls ~
 3347  ls /r*/*/*/*
 3348  ls /r*/*/*/B*
 3349  ls cours
 3350  ls cod4
 3351  ls /r*/*/*/B* | grep cod
 3352  ls codes
 3353  rm -r codes
 3354  cp -r /r*/*/*/*/codes ~
 3355  cd games
 3356  mkdir future
 3357  rm -r future
 3358  rm -rf future
 3359  unzip future.zip -d future
 3360  mv future f
 3361  mv f/future .
 3362  ls future
 3363  rm -rf f
 3364  nvim future
 3365  cd future
 3366  lzygit
 3367  man lazygit
 3368  lazygit -h
 3369  nvim -V10nvim.log
 3370  nvim -h
 3371  nvim -V 10nvim.log | xargs nvim
 3372  nvim -V 10nvim.log
 3373  nvim -V 10nvim.log > log
 3374  mv fak.lua 01.lua
 3375  mv 01.lua 1.lua
 3376  nvim lazygit.lua
 3377  mv 1.lua nvim-tata.lua
 3378  ls lua/config
 3379  mv nvim-tata test.lua
 3380  cd /usr/local/lua
 3381  whereis lua
 3382  mv test.lua lazygit.lua
 3383  cat lazygit.lua
 3384  $XDG_CONFIG_HOME
 3385  echo "$XDG_CONFIG_HOME"
 3386  history | grep path
 3387  zz Pic
 3388  kkkkkkk:bd
 3389  nvim ../../init.
 3390  nvim ../../init.lua
 3391  p10k configure
 3392  z Picutre
 3393  z Pic;ranger
 3394  sudo pacman -S x11-ssh-askpass
 3395  export SUDO_ASKPASS='/usr/lib/ssh/x11-ssh-askpass'
 3396  cd /usr/lib/ssh/
 3397  lf 
 3398  ls | grep pdf
 3399  fd
 3400  rm -rm lfimg
 3401  rm -rf lfimg
 3402  git clone https://github.com/cirala/lfimg.git
 3403  makepkg -si
 3404  make uninstall
 3405  history | grep -i lf
 3406  cp cleaner preview ~/.config/lf/.
 3407  lfimg 
 3408  z Pictures
 3409  cd ~/.config/lf
 3410  cat cleaner
 3411  where uberzug
 3412  whereis ueberzug
 3413  pip install ueberzug
 3414  whereis lfrun
 3415  sudo rm /usr/bin/lfrun
 3416  sudo cp lfrun /usr/bin/lfrun
 3417  cat lf-preview.sh
 3418  sudo pacman -S imagemagick
 3419  sudo pacman -S wkhtmltopdf
 3420  sudo pacman -S poppler
 3421  sudo pacman -S epub-thumbnailer
 3422  sudo pacman -S gnome-epub-thumbnailer
 3423  sudo pacman -S ffmpegthumbnailer
 3424  cd ~/.c*/lf
 3425  cat lfrc
 3426  z bui
 3427  git clone https://github.com/cirala/vifmimg.git
 3428  cd vifmimg
 3429  $PATH
 3430  cp vifmimg vifmrun /usr/local/bin
 3431  sudo cp vifmimg vifmrun /usr/local/bin
 3432  touch ~/.config/vifm/vifmrc
 3433  mkdir ~/.config/vifm
 3434  nvim ~/.config/vifm/vifmrc
 3435  lfimg
 3436  z lf
 3437  cd ~/.co*/lf
 3438  cat preview
 3439  cd download
 3440  echo $XDG_SESSION_TYPE
 3441  cd lfimg
 3442  cat Makefile
 3443  rm /usr/bin/lfrun
 3444  ls ~/.config
 3445  rm -rf ~/.config/lf
 3446  sudo make uninstall
 3447  sudo make install
 3448  ls ~/.config/lf
 3449  touch ~/.config/lfrc
 3450  rm ~/.config/lfrc
 3451  touch ~/.config/lf/lfrc
 3452  make install
 3453  cat ~/.config/lf/lfrc
 3454  nvim ~/.config/lf/lfrc
 3455  lfrun 
 3456  sudo pacman -S vim
 3457  vifmrun
 3458  ueberzug 
 3459  sudo pacman -S w3w
 3460  sudo pacman -S w3m
 3461  w3m google.fr
 3462  lfrun
 3463  pip3 install neovim-remote\n\nI
 3464  whereis nvr
 3465  whereis nrv
 3466  pip3 install neovim-remote
 3467  pip3 uninstall neovim-remote
 3468  ls ~/local/bin
 3469  ls ~/.local/bin
 3470  echo 'export PATH="$PATH:/home/oxhart/.local/bin/nvr"' >> ~/.zshrc
 3471  nvr 
 3472  cd nvr 
 3473  echo 'export PATH="$PATH:/home/oxhart/.local/bin/"' >> ~/.zshrc
 3474  nvr ChromeSetup.exe
 3475  nvr test.sh
 3476  z compose && fzf -e | xargs nvr -l
 3477  cd /etc | fzf -e xargs | nvr -l
 3478  cd /etc && fzf -e | xargs  nvr -l
 3479  cd /usr/bin && fzf -e | xargs nrv -l
 3480  cd /usr/ && fzf -e | xargs nrv -l
 3481  nvim --listen /tmp/nvimsocket
 3482  nvr test
 3483  nvr --remote test.sh
 3484  cd /usr/ && fzf -e | xargs nvr -l
 3485  cd Downloads && fzf -e | xargs nvr -l
 3486  c lua function
 3487  c lua function declaration
 3488  c lua if
 3489  c -h
 3490  luamake rebuild
 3491  cd ~/builds
 3492  cat luamake
 3493  cat compile/install.sh
 3494  cd 3rd/luamake/build
 3495  cd make
 3496  le
 3497  cat lua-language-server.rc
 3498  cd ll
 3499  cd compile
 3500  cd linux
 3501  cd obj
 3502  cd luamake
 3503  cd 3rd
 3504  git clone  --depth=1 https://github.com/sumneko/lua-language-server\ncd lua-language-server\ngit submodule update --depth 1 --init --recursive
 3505  sudo pacman -S ninja
 3506  z 3rd
 3507  whereis c++
 3508  c++ -v
 3509  man c++
 3510  c++ -h
 3511  c++ --help
 3512  c++ --version
 3513  g++ --version
 3514  g++ _cplusplus
 3515  c++ _cplusplus
 3516  g++ -o test.cpp test
 3517  g++ -o test.cpp -c
 3518  c cpp compile
 3519  c cpp compile a file
 3520  nvim test.cpp
 3521  g++ test.cpp -o test
 3522  test
 3523  ./test
 3524  mv test.cpp cppversion.cpp
 3525  mv test cppversion
 3526  cp lua-language-server ~/.local/bin
 3527  cp main.lua ~/.local/bin
 3528  mkdir lua-language-server
 3529  mkdir lua-language-server/
 3530  mkdir lls
 3531  mv lua-language-server main.lua lls
 3532  mv lls lua-language-server
 3533  history | grep -i path
 3534  echo 'export PATH="$PATH:/home/oxhart/.local/bin/lua-language-server"' >> ~/.zshrc
 3535  cp lua-language-server main.lua ..
 3536  cp lua-language-server main.lua ../
 3537  cp lua-language-server main.lua ~/.local/bin
 3538  mv lua-language-server/ lls
 3539  cp lls/main.lua lls/lua-language-server .
 3540  rm main.lua lua-language-server
 3541  cp main.lua ../
 3542  cat lua-language-server
 3543  rm lls/main.lua
 3544  mv ../main.lua .
 3545  lua-language-server 
 3546  mv lls /usr/bin
 3547  sudo mv lls /usr/bin
 3548  sudo mv /usr/bin lls
 3549  cat /lls/usr
 3550  mv
 3551  pacman 
 3552  mv .local/bin/lls /usr/bin/lls
 3553  sudo mv .local/bin/lls /usr/bin/lls
 3554  cd ../utils
 3555  sudo mv /usr/bin/lls ~/.local/bin/lls
 3556  mv ~/.local/bin/lls/main.lua ~/.local/bin
 3557  z lls
 3558  cp main.lua lls
 3559  cd lls
 3560  ./lua-language-server
 3561  nvim switchterm.lua
 3562  cat main.lua
 3563  rm -rf lua-language-server
 3564  git clone  --depth=1 https://github.com/sumneko/lua-language-server
 3565  git submodule update --depth 1 --init --recursive
 3566  sudo ./3rd/luamake/luamake build
 3567  sudo ./3rd/luamake/luamake 
 3568  sudo ./3rd/luamake/luamake rebuild
 3569  cd lua-language-server
 3570  (cd 3rd/luamake && git fetch && git rebase master && git submodule update --init --recursive)
 3571  cd 3rd/luamake
 3572  ./compile/install.sh
 3573  ./3rd/luamake/luamake rebuild
 3574  rm -r ~/.local/bin/lls
 3575  git commit --ammend -m " addition of the lua lsp server, of an utils module to extend the nvim-terminal abilities, nvr tool to open in same neovim instance files even in the builtin terminal emulator of neovim  and some keybindings"
 3576  git commit --amend -m " addition of the lua lsp server, of an utils module to extend the nvim-terminal abilities, nvr tool to open in same neovim instance files even in the builtin terminal emulator of neovim  and some keybindings"
 3577  git push origin
 3578  git push -f origin
 3579  sudo npm -gi @angular/cli
 3580  sudo npm i -g @angular/cli
 3581  mkdir angular
 3582  sudo pacman -S nvm
 3583  sudo pacman -S nodejs npm
 3584  whereis nvm
 3585  yay -S nvm
 3586  echo 'source /usr/share/nvm/init-nvm.sh' >> ~/.zshrc
 3587  nvm -v
 3588  nvm -l
 3589  nvm which 18
 3590  sudo node u -g @angular/cli
 3591  sudo node uninstall -g @angular/cli
 3592  sudo npm uninstall -g @angular/cli
 3593  sudo pacman -R nodejs npm
 3594  nvm install 16.10.0
 3595  nvm witch current
 3596  nvm which version
 3597  nvm which 16
 3598  cd angular
 3599  ng version
 3600  cd /usr/local/bin
 3601  ls | grep neov
 3602  npm ls --depth=0
 3603  /usr/bin/node 
 3604  /usr/bin/node -g ls --depth=0
 3605  /usr/bin/npm ls --depth=0
 3606  /usr/bin/npm -v
 3607  /usr/bin/npm -g ls --depth=-
 3608  /usr/bin/npm -g ls --depth=0
 3609  cd /usr/bin/npm
 3610  ./npm -v
 3611  ./npm -g ls --depth=0
 3612  nvm install 18.10.0
 3613  cd ~/.nvm/versions
 3614  nvm which current
 3615  history | grep -i npm
 3616  npm -v
 3617  npm -g ls --depth=0
 3618  npm u -g vscore-html-language-servers-bin
 3619  npm uninstall -g vscore-html-language-servers-bin
 3620  npm i -g vscore-html-language-servers-bin
 3621  npm i -g vscore-html-language-server-bin
 3622  npm i -g vscode-html-language-server-bin
 3623  man npm
 3624  npm -h
 3625  npm uninstall -g bash-language-server
 3626  cd node/v18.10.0
 3627  cd include
 3628  cd ~.local
 3629  cd ~/.local/bin
 3630  whereis npm
 3631  whereis neovim
 3632  whereis neovim-node-host
 3633  sudo rm /usr/bin/neovim-node-host
 3634  whereis vscode-html-languageserver-bin
 3635  whereis vscode
 3636  ls /home/oxhart/.nvm/versions/node/v18.10.0/bin | grep vscode
 3637  ls /home/oxhart/.nvm/versions/node/v18.10.0/bin | grep -i "vscode"
 3638  yay -Qs vscode
 3639  yay -Qs 
 3640  yay -Qs html
 3641  yay -R vscode-langservers-extracted
 3642  history | grep -i yay
 3643  nvm 
 3644  cd v18.10.0
 3645  history | grep -i vscode
 3646  sudoedit
 3647  nvim /etc/hosts
 3648  zrc
 3649  sudoedit test
 3650  mkdir ~/vscode
 3651  sudo mv vscode* ~/vscode
 3652  ls | grep vscode
 3653  sudo -i
 3654  ls | grep bash
 3655  sudo rm bash-language-server
 3656  ls | grep html
 3657  sudo rm html-languageserver
 3658  ls | grep emmet
 3659  sudo rm emmet-ls
 3660  cat ~/.zshrc
 3661  history | grep "\$\("
 3662  history | grep -i "\$\("
 3663  history | grep -i "$\("
 3664  history | grep -i "$\"\nhistory | grep -i "$("
 3665  history | grep -i "$("\nhistory | grep -i "$("\nhistory | grep -i "$\"\nhistory | grep -i "$("
 3666  history | grep -i "$(\"\nhistory | grep -i "$("\nhistory | grep -i "$\"\nhistory | grep -i "$("
 3667  history | grep -i "\$("\nhistory | grep -i "$("\nhistory | grep -i "$\"\nhistory | grep -i "$("\nhistory | grep -i "$("\nhistory | grep -i "$("\nhistory | grep -i "$\"\nhistory | grep -i "$("
 3668  history | grep -i $(\nq
 3669  history | grep -i \$(\nq
 3670  history | grep -i \$\(\nq
 3671  echo "$(node -v)"
 3672  nvim fz
 3673  echo $(node -v)
 3674  $(node -v)
 3675  var = $(node -v)
 3676  $var = $(node -v)
 3677  nvm use 16
 3678  node 
 3679  nvm alias default 16.10.0
 3680  nvr -s test.html
 3681  man nvm
 3682  whereis ng
 3683  cd ~/.nvm/versions/node/v18.10.0/bin
 3684  nvm use 18
 3685  cd v16.10.0
 3686  ./ng
 3687  ./ng -v
 3688  nvm install 16.17.1
 3689  ./ng v
 3690  nvm uninstall 16.10.0
 3691  nvm install lts
 3692  nvm ls-remote
 3693  nm install lts=Gallium
 3694  nvm -h | grep lts
 3695  nm install --lts
 3696  nvm install --lts
 3697  nvm install @angular/cli
 3698  history | grep angular
 3699  nvm -h | grep default
 3700  nvm alias default lts
 3701  nvm alias default --lts
 3702  nvm alias default 16.17.1
 3703  cd v16.17.1
 3704  cat ng
 3705  ng -h
 3706  ng h
 3707  man ng
 3708  ng --help
 3709  wget -q https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-installer -O- | bas
 3710  wget -q https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-installer -O- | bash
 3711  curl -fsSL https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-installer | bash
 3712  sudo curl -fsSL https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-installer | bash
 3713  wget -q https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-doctor -O- | bash
 3714  nodenv install
 3715  nvim ~/.profile
 3716  man grep | grep hiden
 3717  man grep | grep hidden
 3718  grep -riI nodenv
 3719  sudo nodenv init
 3720  nvim ~/.bash_profile
 3721  cd script
 3722  nodenv init -
 3723  nodenv init
 3724  nodenv install 16.17.1
 3725  nvm uninstall 16.17.1
 3726  nodenv -v
 3727  nodenv -version
 3728  nodenv which 16.17.1
 3729  nodenv global system
 3730  nodenv install latest
 3731  nodenv install --list
 3732  nodenv install 18.10.0
 3733  node global
 3734  ls ~/.nvm/versions/node/v18.10.0
 3735  whereis nodejs
 3736  nodenv global 18
 3737  history | grep npm
 3738  ls ~/.nvm/versions/node/v18.10.0/
 3739  ls ~/.nodenv/versions/18.10.0/bin/
 3740  ls ~/.nvm/versions/node/v18.10.0/bin
 3741  ls A ~/.nvm/versions/node/v18.10.0/bin
 3742  cd node/v18.10.0/bin
 3743  npm install -g vscode-html-languageserver-bin
 3744  npm install -g emmet-ls
 3745  npm i -g vscode-langservers-extracted
 3746  npm i -g neovim
 3747  rmdir test1
 3748  rm -r test1
 3749  mkdir test1
 3750  cd test1
 3751  history | grep npm | tail -n 6 | awk '{$1="";print} > node && nvim node'
 3752  history | grep npm | tail -n 6 | awk '{$1="";print}' > node && nvim node
 3753  history | grep npm | tail -n 9 | awk '{$1="";print}' > node && nvim node
 3754  cat node
 3755  chmod +x node
 3756  ./node
 3757  ls ~/.nodenv/versions/16.17.1/bin
 3758  nodenv global 16.17.1
 3759  nodenv v
 3760  nodenv whence ng
 3761  mv node node_package
 3762  mv node_package ~/Documents/builds/terminalConfigs
 3763  yarn
 3764  cd matchmaking
 3765  cp sync ~/dev/angular/first_project
 3766  mv first_project sync
 3767  mkdir first_project && mv future */
 3768  mkdir first_project && mv sync */
 3769  mv sync first_project
 3770  git config --global init.defaultBranch master
 3771  cd usr/lib/
 3772  cd /usr/lib
 3773  npm uninstall -g @angular/cli
 3774  cd language-server
 3775  rm -rf @angular
 3776  sudo rm -rf @angular
 3777  cd 16.17.1
 3778  cd 18.10.0
 3779  npm i -g @angular/cli
 3780  cd ../../16.17.1
 3781  zsc
 3782  ng -v
 3783  cd first_project/ng-pokemon-app
 3784  ./ngserver
 3785  whereis ngserver
 3786  cd /home/oxhart/.nodenv
 3787  ngserver
 3788  whereis node
 3789  npm install -g @angular/language-server.
 3790  ngserver 
 3791  ng v
 3792  nvim  ~/Documents/builds/terminalConfigs/node_package
 3793  npm install -g typescript typescript-language-server
 3794  cat ~/Documents/builds/terminalConfigs/node_package
 3795  where ngserver
 3796  rm -rf ng-pokemon-app
 3797  ng new ng-pokemon-app --minimal --style=css
 3798  cd ng-pokemon-app
 3799  ngserver --stdio --tsProbeLocations /home/oxhart/dev/angular/first_project/ng-pokemon-app/node_modules --ngProbeLocations /home/oxhart/dev/angular/first_project/ng-pokemon node_modules
 3800  npm install @angular/language-server
 3801  ngserver --stdio --tsProbeLocations /home/oxhart/dev/angular/first_project/ng-pokemon-app/node_modules --ngProbeLocations /home/oxhart/dev/angular/first_project/ng-pokemon/node_modules
 3802  ls | grep angular
 3803  cd @angular
 3804  cd language-service
 3805  nodenv install 16.10.1
 3806  nodenv install 16.10.o
 3807  ./node_package
 3808  z angular
 3809  cd first_project
 3810  nodenv global
 3811  nodenv local
 3812  cat node_package
 3813  nvim node_package
 3814  npm install @angular/language-service
 3815  z nvm
 3816  cd node
 3817  cd .nodenv/versions/16.10
 3818  cd .nodenv/versions/16.10.0
 3819  nim
 3820  mkdir finder
 3821  cp -r .git finder
 3822  cp fz finder
 3823  rm -rf .git fz
 3824  git -h
 3825  rm -r ~/.emacs.d
 3826  Welcome to the Emacs shell
 3827  emacs fz
 3828  ped
 3829  z versions
 3830  cd lib
 3831  fzf -e 
 3832  fzf -e --hidden
 3833  fzf -e -hiden
 3834  > which-key-idleq%               $FZF_DEFAULT_COMMAND = 'ag -l -g ""'                                                                                                                           
 3835  $FZF_DEFAULT_COMMAND = 'ag -l -g ""'                                                                                                                                 at  10:02:28
 3836  $FZF_DEFAULT_COMMAND = 'ag -l -g ""'
 3837  export $FZF_DEFAULT_COMMAND = 'ag -l -g ""'
 3838  cat fz
 3839  export $export FZF_DEFAULT_COMMAND="fd $fd --type f --hidden --exclude .git"
 3840  grep -riI which-key
 3841  grep -riI which-key-idle
 3842  z compose
 3843  z go
 3844  npm install -g @angular/language-service
 3845  npm install -g @angular/language-server
 3846  z /
 3847  fzf -e | xargs emacsclient
 3848  fzf -e | xargs nohup emacsclient&
 3849  fzf -e | xargs nohup emacsclient
 3850  fzf -e logs
 3851  cd c/
 3852  fzf -e | xargs sudo emacsclient
 3853  emacs --daemon --with-x-toolkit=lucid
 3854  emacs test&
 3855  emacs --daemon --with-x-toolkit=lucid&
 3856  emacsclient test
 3857  emacsclient test&
 3858  fzf -e | xargs emacsclient&
 3859  nohup emacs --daemon --with-x-toolkit=lucid&
 3860  cd fz
 3861  man emacsclient
 3862  echo "export $TERM=xterm-kitty" >> ~/.zshrc
 3863  echo $TERM
 3864  export TERM=xtern-256
 3865  export TERM=xterm-256
 3866  export TERM=xterm-256  ~/scripts/finder on   parsing_options ❯ export TERM=xterm-256
 3867    ~/scripts/finder on   parsing_options ❯ export TERM=xterm-256  ~/scripts/finder on   parsing_options ❯ export TERM=xterm-256
 3868  history | grep fd
 3869  man fd
 3870  fd -i grub /etc | xargs emacsclient -n
 3871  npm i -g bash-language-server
 3872  sudo pacman -S ShellCheck
 3873  sudo pacman -S shellcheck
 3874  nvim ~/Do/*/*/po*.sh
 3875  nvim ~/Do/*/*/po*
 3876  nvim ~/Do/*/*/?o*
 3877  nvim ~/Do/*/*/Po*
 3878  nvim ~/Do*/*/*/po*.sh
 3879  ls | grep *.web
 3880  ls | grep *.webm
 3881  mv Interview\ with\ a\ VIM\ Enthusiast\ 2022.webm Videos; cd videos; fzf -e | xargs vlc
 3882  nash
 3883  tmux a -t emacs
 3884  sudo pacman -S libvterm
 3885  cmake
 3886  sudo pacman -S cmake
 3887  sudo pacman -S libtool-bin
 3888  sudo pacman -Ss libtool-bin
 3889  sudo pacman -Ss libtool
 3890  sudo pacman -S libtool
 3891  fzf -e | xargs emacsclient -n
 3892  sudo fzf -e | xargs emacsclient -n
 3893  emacsclient -n /finder/fz
 3894  emacsclient -n finder/fz
 3895  fzf -e | xargs sudo emacsclient -n
 3896  fzf -e | xargs sudo emacsclient -n --alternate-editor=nvim
 3897  fzf -e | xargs sudo emacsclient -n --alternate-editor=sudoedit
 3898  emacs --daemon="test"
 3899  fzf -e | xargs sudo emacsclient -n --alternate-editor="sudo nvim"
 3900  fzf -e | xargs sudo emacsclient -n --alternate-editor="nvim"
 3901  z /et
 3902  fzf -e | xargs sudo emacsclient -n 
 3903  sudo pacman -S genthree
 3904  uniq -h
 3905  man uniq
 3906  0>
 3907  <0
 3908  gg
 3909  sudo pacman -S lynx
 3910  c lua for loop
 3911  c emacs bind key
 3912  emacs --daemon=
 3913  emacs --daemon
 3914  z /home/oxhart/.emacs.d
 3915  grep -ri which-key
 3916  grep -ri sPC
 3917  lf
 3918  test 
 3919  fzf -e | xargs emacsclient -n 
 3920  z sc
 3921  fzf | xargs emacsclient -n 
 3922  mkdir embak
 3923  cp -r .emacs.d embak
 3924  sudo pacman -R emacs
 3925  yay -S emacs-nativecomp
 3926  ls ~/.emacs.d
 3927  ls ~/.emacs.d/bin
 3928  yay -Qs emacs
 3929  emacs 
 3930  echo 'abcde{}' | $XDG_DATA_HOME/firenvim/firenvim
 3931  $HOME/.local/share/firenvim
 3932  echo 'abcde{}' | firenvim
 3933  echo 'abcde{}' | ./firenvim
 3934  cd $HOME/.mozilla/native-messaging-hosts
 3935  c ruby:learn
 3936  c ruby/:learn
 3937  cat /root/root.txt
 3938  sudo cat /root/root.txt
 3939  z doo
 3940  cp -r .doom.d embak
 3941  c python for loop
 3942  :echo stdpath("cache")
 3943  git add fz
 3944  git commit
 3945  "3+3"
 3946  c shell printing without echo
 3947  mv indent_blankline.lua lua/config
 3948  ls | grep nvim
 3949  mv comment.nvim comment.lua
 3950  ls | grep blank
 3951  mv lsp.lua lspBak
 3952  touch lsp.lua
 3953  sudo pacman -S ripgrep
 3954  fzf -e | xargs nvim
 3955  history | grep fzf
 3956  nvim test.html
 3957  nvim configs/lua/config/nvimSettings
 3958  mv lua/config/nvimSetting .
 3959  mv lua/config/nvimSettings .
 3960  grep -ri "completeopt"
 3961  nvim test.php
 3962  mkdir react
 3963  cd react
 3964  mv react tutoReact
 3965  z future
 3966  cd src/matchmaking/apps
 3967  cp sync ~/dev/tutoReact
 3968  npm i -g browser-sync
 3969  touch package.json
 3970  kill -s kill $(ps aux | awk '/browser_sync/ {print $2}')
 3971  z matchmaking
 3972  rm app.js
 3973  mv app.js app1.js
 3974  touch app.js
 3975  sudo pacman -Qs
 3976  sudo pacman -Qs | grep wc -l
 3977  sudo pacman -Qs |  wc -l
 3978  mv appLesson2
 3979  mv app.js appLesson2
 3980  z term
 3981  mkdir snippets
 3982  git clone https://github.com/dsznajder/vscode-es7-javascript-react-snippets
 3983  nvim vscode-es7-javascript-react-snippets
 3984  cat appLesson2
 3985  systemctl
 3986  systemctl | grep kde
 3987  systemctl | grep baloo
 3988  tmux new -s emacs
 3989  tmux kill-session -t 3
 3990  tmux a -t 1
 3991  cat app1.js | grep constructor
 3992  cat appLesson2 | grep constructor
 3993  cat appLesson2 | grep super
 3994  cat appLesson2 | grep React
 3995  cat appLesson2 | grep home
 3996  cat appLesson2 | grep Home
 3997  cat appLesson2 | grep setInter
 3998  cat appLesson2 | grep clear
 3999  mv app.js app2
 4000  nvr -s app.js
 4001  cat appLesson2 | grep setState
 4002  sudo pacman -S tilda
 4003  tilda
 4004  :<
 4005  range
 4006  rranger
 4007  las
 4008  ranger 
 4009  ls  lol
 4010  ps aux | grep lynx
 4011  ls | grep "*.png"
 4012  ls | grep "\*.png"
 4013  ls | grep *.png
 4014  ls | grep -P *.png
 4015  man grep | grep perl
 4016  ls | grep -P \*.png
 4017  ls | grep -P "*.png"
 4018  ls | grep -P \*\.png
 4019  ls | grep \*\.png
 4020  ls | grep \*.png
 4021  ls | grep *\.png
 4022  ls | grep "\*\.png"
 4023  rg
 4024  ls | rg \*.png
 4025  ls | rg \*\.png
 4026  ls | rg *.png
 4027  ls | rg "*.png"
 4028  ls | rg "*\.png"
 4029  ls | rg "\*\.png"
 4030  ls | rg .png
 4031  ls | rg .png | ranger
 4032  ls | rg .png | xargs ranger
 4033  sudo pacman -S batcat
 4034  sudo pacman -S bat
 4035  nvim ~/.zsh
 4036  z ~
 4037  zz ~
 4038  z
 4039  z ~ && ls
 4040  z tutols
 4041  z tuto:ls
 4042  z ~;ls
 4043  b1b2ll
 4044  ls -laH
 4045  ls -D
 4046  ls -d
 4047  ls --dired
 4048  sudo pacman -S telegram-cli
 4049  whereis telegram
 4050  yay -S telegram-cli-git
 4051  tg
 4052  telegram-desktop
 4053  ls .jpg
 4054  ls | grep .jpg
 4055  telegram-cli
 4056  telegram-cli -W
 4057  telegram-cli -W -s
 4058  telegram-cli -h
 4059  man telegram-cli
 4060  telegram-cli 
 4061  nvim python-types.c
 4062  tmux a -r tele
 4063  grep -ri Notification
 4064  grep -riI sendMEssage
 4065  grep -riI sendMessage
 4066  grep -ri sendMessage
 4067  git clone https://github.com/kenorb-contrib/tg.git
 4068  cd tg
 4069  cd tgl
 4070  cd hom
 4071  cd ~/.telegram-cli
 4072  cd downloads
 4073  telegram-cli -q
 4074  rm -rf tg
 4075  git clone --recursive https://github.com/kenorb-contrib/tgl.git && cd tgl
 4076  rg -ri
 4077  rg td/telegram/td_json
 4078  grep -ri telegram
 4079  grep -riI API_64BIT_LOGIN_APP
 4080  grep -riI API_64
 4081  grep -riI API\
 4082  grep -riI API
 4083  tmux a -t tele
 4084  git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
 4085  cd .telegram-cli
 4086  nvim ~/Documents/builds/terminalConfigs/.tmux.conf
 4087  nvim appLesson2
 4088  tmux kill-server
 4089  kwriteconfig5 --file ~/.config/kwinrc --group ModifierOnlyShortcuts --key Meta "org.kde.plasmashell,/PlasmaShell,org.kde.PlasmaShell,activateLauncherMenu"
 4090  xev | grep keycode
 4091  cat ~/.Xmodmap
 4092  echo 'keycoide 133 = F13' > ~/.Xmodmap
 4093  /bin/sh xmodmap $HOME/.Xmodmap
 4094  sudo /bin/sh xmodmap $HOME/.Xmodmap
 4095  keycode 
 4096  rm ~/.Xmodmap
 4097  sudo pacman -S eyedropper
 4098  yay -S eyedropper
 4099  eyedropper 
 4100  .ll
 4101  ranger /odee
 4102  ranger ~
 4103  ranger Pictures
 4104  z tuto;ls
 4105  bt 
 4106  bt Pictures
 4107  cd ~/Videos
 4108  z /home/oxhart/.telegram-cli/downloads
 4109  ls | grep .mp4
 4110  ls | grep .avi
 4111  mv Interview\ with\ a\ VIM\ Enthusiast\ 2022-\(1080p\).mp4 ../Videos
 4112  cd UFC.Fight.Night.209.Gane.vs.Tuivasa.1080p.WEB-DL.H264.Fight-BB\[rartv\]
 4113  mv UFC.Fight.Night.209.Gane.vs.Tuivasa.1080p.WEB-DL.H264.Fight-BB\[rartv\] ../Videos
 4114  rm *.srt
 4115  ./winMillenium.webp
 4116  find Videos -iname "U*.mp4" | xargs nohup vlc&& exit
 4117  find Downloads -iname "*.mp4" | xargs nohup vlc&& exit
 4118  find Videos -iname "vim*.mp4" | xargs nohup vlc&& exit
 4119  ls Videos
 4120  cd Videos
 4121  tr -h
 4122  c tr examples
 4123  lynx
 4124  find . -type f -name "* *" -print0 -exec bash -c ‘mv "$0" "${0// /_}"’ {} \;
 4125  find Videos -iname "I*.mp4" | xargs nohup vlc&& exit
 4126  find Videos -iname "I*.mp4" | xargs nohup vlc&
 4127  z Vi
 4128  find -iname "I*.mp4" | xargs nohup vlc&
 4129  ls " "
 4130  touch "l o l.txt"
 4131  cd /run
 4132  cd medoa
 4133  cd media
 4134  cd 846CA95E6CA94C2C
 4135  cd Users
 4136  cd benja
 4137  cd Pictures
 4138  cd 3C462EC6462E812E
 4139  n
 4140  sudo pacman -S taskwarrior
 4141  yay -S taskwarrior
 4142  sudo pacman -S task
 4143  tasks
 4144  task create 'making my terminal functions for nvim-terminal a fork of it and and will make a pull request'
 4145  man task
 4146  task -h
 4147  task --help
 4148  task ls
 4149  task add making my terminal functions for nvim-terminal a fork of it and and will make a pull request
 4150  task
 4151  nvr -l app.js
 4152  nvr -l ~/.bashrc
 4153  nvr -l ~/.zshrc
 4154  :bd!
 4155  z pic;ranger
 4156  notify-send 'Hello world!' 'This is an example notification.' --icon=dialog-information
 4157  cat Screenshot_20220303_174145.png
 4158  cat deo.jpg
 4159  cat q
 4160  cat deo*
 4161  /home/oxhart/dev/tutoReact/boil.js lua/config/hop.lua\nz pic
 4162  sudo pacman -S obs
 4163  yay -S obs
 4164  pacman -S obs-studio
 4165  sudo pacman -R obs-studio
 4166  chmod +x com.obsproject.Studio.flatpakref
 4167  ./com.obsproject.Studio.flatpakref
 4168  sudo pacman -Sy v4l2loopback-dkms
 4169  sudo pacman -S obs-studio
 4170  obs
 4171  kk
 4172  vlc 2022-10-14\ 20-33-35.mkv
 4173  ls | grep mkv
 4174  rm *54.mkv
 4175  rm *.mkv
 4176  vlc *.mkv
 4177  notify-send -t 3000 -i face-smile "The First Notification" "Hello <b>World</b>"
 4178  z big
 4179  z BigData
 4180  ls -H
 4181  ls | grep inter
 4182  cd Interstellar\ \(2014\)\ \[2160p\]\ \[4K\]\ \[BluRay\]\ \[5.1\]\ \[YTS.MX\]
 4183  ls I
 4184  ls | grep -i inter
 4185  nohup fzf -e | xargs vlc&
 4186  kill %3
 4187  fzf -e | xargs nohup vlc&
 4188  fzf -e | xargs vlc
 4189  (fzf -e | xargs vlc)
 4190  bg 6
 4191  bg 5
 4192  bg %6
 4193  bg %5
 4194  fzf -e | xargs vlc&
 4195  {fzf -e} | xargs vlc
 4196  {fzf -e} | xargs nohup vlc&
 4197  fzf -e | {xargs nohup vlc&}
 4198  ls | grep nohup
 4199  cat nohup.out
 4200  rm nohup.out
 4201  ((2+4))
 4202  echo ((2+4))
 4203  echo 2+4
 4204  echo "2+4"
 4205  echo "2+4" | bc
 4206  $((2+4))
 4207  echo $((2+4))
 4208  echo $((7*100\))
 4209  echo $((7*100))
 4210  echo "2+5" | bc
 4211  echo "2x5" | bc
 4212  echo "2*5" | bc
 4213  ls | grep " "
 4214  nvim ns
 4215  c sh while
 4216  chmod +x ns
 4217  ls "* *"
 4218  ls *' '*
 4219  ls *fuck*
 4220  ls *'fuck'*
 4221  ls * *
 4222  echo $'(ls *" "*)'
 4223  cp ns test
 4224  nvr -l ns
 4225  echo '$(ls *" "*)'
 4226  ls *" "*
 4227  echo $(ls *" "*)
 4228  echo $(ls *' '*)
 4229  echo $(ls ./*' '*)
 4230  ls ./*" "*
 4231  ls --*" "*
 4232  ./ns]
 4233  touch l k
 4234  cls
 4235  rm l k
 4236  rm lk
 4237  touch "l k"
 4238  echo $(ls -- *" "*
 4239  echo $(ls -- *" "*)
 4240  ls -- *" "*
 4241  rm l_a
 4242  /bin/zsh ns
 4243  rm la
 4244  touch "l b"
 4245  touch "l r"
 4246  touch "l c"
 4247  touch "l d"
 4248  touch "l e"
 4249  touch "l a"
 4250  touch "l a" "l b" "l c" "l r" "l d\nls"
 4251  touch "l a" "l b" "l c" "l r" "l d"\nls"\nls
 4252  touch "l a" "l b" "l c" "l r" "l d"\nls"
 4253  touch "l f"
 4254  touch "l m"
 4255  rename ' ' '_' *
 4256  touch "l j"
 4257  /bin/bash rename ' ' '_' *
 4258  rm l*
 4259  touch "l a" "l b" "l c" "l r" "l d\nls"\nls
 4260  ./ns
 4261  ns 
 4262  ls /bin/local/bin
 4263  ls /bin/local
 4264  cp ns /usr/local/bin
 4265  sudo cp ns /usr/local/bin
 4266  cp ns ~/scripts
 4267  rm -f test
 4268  rm -rf test
 4269  fzf -e | (xargs nohup vlc&)
 4270  z /home/oxhart/scripts/finder
 4271  tmux new -s finder
 4272  z scri
 4273  ls *"zip"*
 4274  touch lol.bite
 4275  touch lol1.bite
 4276  touch lol2.bite
 4277  rm *"bite"*;ls *"bite"*
 4278  ls *"bite"*
 4279  history *"opt"*
 4280  history *opt*
 4281  history *grep*
 4282  history | grep opt
 4283  tmux new
 4284  yay -S freetube
 4285  yay -Su freetube
 4286  man yay
 4287  yay -Qa yay
 4288  yay -Sua freetube
 4289  yay -Qa freetube
 4290  yay -Qs freetube
 4291  yay -Ss freetube-bin
 4292  npx create-react-app tuto
 4293  cd tuto
 4294  yarn eject 
 4295  yarn eject
 4296  config
 4297  cd tutoreact
 4298  mkdir basics
 4299  mv *.js *.jsx *.out *.html *.ico basics
 4300  mv app2 appLesson2 basics
 4301  mv tuto create-react-app
 4302  mkdir parcel&&cd parcel
 4303  nvr -l index.html
 4304  yarn init -t
 4305  z create
 4306  cp sync parcel&& cd parcel
 4307  npx parcel index.html && npx parcel watch index.html
 4308  npx start
 4309  yarn add -D parcel-bundler
 4310  rm package.json 
 4311  yarn init -y
 4312  yarn add react react-dom
 4313  yarn add -D parcel
 4314  nvim test.css
 4315  sudo pacman -S neovide
 4316  yay -Syyu
 4317  nvr -l test.sh
 4318  ranbger
 4319  cd /config
 4320  ls *notify*
 4321  nvim plasmanotifyrc
 4322  notify-send --hint=string:desktop-entry:org.kde.dolphin -i dialog-information -t 10000 "hello world"
 4323  cd /usr/share
 4324  cd local
 4325  find -iname *.desktop 2>/dev/null
 4326  find -iname "*.desktop" 2>/dev/null
 4327  find -iname "org*.desktop" 2>/dev/null
 4328  cd ../icons
 4329  cd breeze
 4330  find -iname "telegram" 2>/dev/null
 4331  find -iname "dolphin" 2>/dev/null
 4332  find -iname "org" 2>/dev/null
 4333  find -iname "kde" 2>/dev/null
 4334  find -iname "tele" 2>/dev/null
 4335  find -iname "dophin" 2>/dev/null
 4336  dbus-monitor interface=org.freedesktop.Notifications
 4337  notify-send --hint=string:desktop-entry:org.kde.dolphin -i dialog-information -t 100 "hello world"
 4338  notify-send --hint=string:desktop-entry:org.kde.dolphin -i dialog-information -t 1000 "hello world"
 4339  notify-send --hint=string:desktop-entry:org.kde.dolphin -i dialog-information -t 3000 "hello world"
 4340  notify-send --hint=string:desktop-entry:telegram -i dialog-information -t 3000 "hello world"
 4341  notify-send --hint=string:desktop-entry:org.kde.dolphin -i dialog-information -t 2000 "hello world"
 4342  notify-send --hint=string:desktop-entry:dolphin -i dialog-information -t 2000 "hello world"
 4343  notify-send --hint=string:desktop-entry:firefox -i dialog-information -t 2000 "hello world"
 4344  notify-send --hint=string:desktop-entry:brave -i dialog-information -t 2000 "hello world"
 4345  cd hicolor
 4346  cd 256x256
 4347  cd apps
 4348  cd ~/.icons
 4349  cd WhiteSur-cursors
 4350  cd Papirus-Dark
 4351  ls *telegram*
 4352  ls | grep tel
 4353  plasmashell --replace¹
 4354  plasmashell --replace
 4355  notify-send --hint=string:desktop-entry:discord -i dialog-information -t 2000 "hello world"
 4356  cd /usr/share/applications
 4357  nvim firefox.desktop
 4358  cd ~/.local/share/icons
 4359  fzf -e
 4360  ~/.emacs.d $                                                                                                                               at  08:23:01
 4361  ~/.emacs.d
 4362  games
 4363  /
 4364  ./casasnovas.txt
 4365  grep -iI *rc
 4366  grep -riI *rc
 4367  grep -riI "*rc"
 4368  find -iname "*rc" 2>/dev/null
 4369  find -iname "*rc" > f.txt 2>/dev/null
 4370  nvim f.txt
 4371  find -iname "*rc" 2>/dev/null | wc -l
 4372  c sed://learn
 4373  c lua/:learn
 4374  c sed/:learn
 4375  ls *test*
 4376  cat sed.txt
 4377  sed 's/unix/linux'
 4378  sed 's/unix/linux/' sed.txt
 4379  sed 's/linux/unix/' sed.txt
 4380  sed 's/unix/linux/g' sed.txt
 4381  sed 's/linux/unix/g' sed.txt
 4382  nvim sed.txt
 4383  ~
 4384  pa
 4385  parcel
 4386  nvr -l .gitignore
 4387  :q
 4388  nvim .tmux.conf
 4389  z tu
 4390  npm install eslint-plugin-react-hooks --save-dev
 4391  npm install -g eslint
 4392  npm uninstall eslint
 4393  npm install eslint
 4394  node -v
 4395  nvm -h
 4396  nodenv 18
 4397  nodenv version 18
 4398  nodenv version 18.10.0
 4399  nodenv versions 18.10.0
 4400  nodenv i 18
 4401  nodenv install 18
 4402  nodenv commands
 4403  nodenv rehash
 4404  notify-send --hint=string:desktop-entry:signal -i dialog-information -t 2000 "hello world"
 4405  signal 
 4406  sudo pacman -S signal-desktop
 4407  notify-send --hint=string:desktop-entry:signal-desktop -i dialog-information -t 2000 "hello world"
 4408  notify-send --hint=string:desktop-entry:desktop-desktop -i dialog-information -t 2000 "hello world"
 4409  notify-send --hint=string:desktop-entry:TELEGRAM -i dialog-information -t 2000 "hello world"
 4410  notify-send --hint=string:desktop-entry:tel -i dialog-information -t 2000 "hello world"
 4411  sudo pacman -Qs telegram
 4412  sudo pacman -R telegram-desktop-bin
 4413  sudo pacman -S telegram
 4414  sudo pacman -Ss telegram
 4415  sudo pacman -Rs telegram
 4416  sudo pacman -C
 4417  sudo pacman -c
 4418  sudo pacman -Rsc
 4419  sudo pacman -Rc
 4420  sudo pacman -Syy telegram-desktop
 4421  sudo pacman -Rs telegram-desktop
 4422  sudo pacman -Sc
 4423  yay -S telegram-desktop-bin
 4424  yay -Rs telegram-desktop-bin
 4425  yay -Sc
 4426  sudo pacman -Syyu 
 4427  sudo pacman -S telegram-desktokp
 4428  sudo pacman -S telegram-desktop
 4429  sudo yay -S ttf-ms-fonts ttf-vista-fonts ttf-office-2007-fonts ttf-win7-fonts ttf-ms-win8 ttf-ms-win10 ttf-ms-win11
 4430  yay -S ttf-ms-fonts ttf-vista-fonts ttf-office-2007-fonts ttf-win7-fonts ttf-ms-win8 ttf-ms-win10 ttf-ms-win11
 4431  notify-send --hint=string:desktop-entry:telegram-desktop -i dialog-information -t 2000 "hello world"
 4432  notify-send --hint=string:desktop-entry:telegram -i dialog-information -t 2000 "hello world"
 4433  z app
 4434  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 2000 "hello world"
 4435  cd /etc/local.conf
 4436  cd /etc
 4437  ls *local
 4438  cd /fonts
 4439  cat fonts.conf
 4440  cat 51-local.conf
 4441  nvim emojis
 4442  chmod +x emojis
 4443  touch test
 4444  ./emojis
 4445  sudo emojus
 4446  sudo emojis
 4447  sudo ./emojis
 4448  z /etc
 4449  rm local.conf.bak
 4450  sudo rm local.conf.bak
 4451  🖖🏾
 4452  💗
 4453  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 2000 "hello world 💗💗💗💗💗"
 4454  nohup plasmashell --replace&
 4455  kde-gtk-config 
 4456  sudo pacman -S --needed kde-gtk-config
 4457  nvim telegramdesktop.desktop
 4458  snap
 4459  snap install pokemmo
 4460  man snap
 4461  man curl
 4462  wget http://fetedujour.fr/api/v2/VOTRECLE/text-normal fete
 4463  wget fete http://fetedujour.fr/api/v2/VOTRECLE/text-normal
 4464  wget http://fetedujour.fr/api/v2/VOTRECLE/text-normal
 4465  wget fete http://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/text-normal
 4466  wget http://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/text-normal fete
 4467  wget http://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/text-normal
 4468  curl https://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/json-normal\?api_key\=hWTeWBPpqsDadjhb\&f\=json\&t\=normal
 4469  curl https://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/json-normal\?api_key\=hWTeWBPpqsDadjhb\&f\=json\&t\=normal day.json
 4470  ls *day*
 4471  curl https://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/json-normal\?api_key\=hWTeWBPpqsDadjhb\&f\=json\&t\=normal > day.json
 4472  curl https://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/json-normal\?api_key\=hWTeWBPpqsDadjhb\&f\=json\&t\=normal | jq -r '.name'
 4473  chmod +x fete
 4474  mkdir fete
 4475  mv fete fet
 4476  mkdir fete && mv fet fete/fete
 4477  nvim fete
 4478  echo day.json | jq -r '.name'
 4479  pwd
 4480  tmux new -s test
 4481  mkdir tmux
 4482  chmod u+x *.tmux\
 4483  chmod u+x *.tmux
 4484  chmod u+x tmux/*.tmux
 4485  cat day.json | jq -r '.name'
 4486  O  ls
 4487  cd /var/log
 4488  grep -riI cron
 4489  sudo grep -riI cron
 4490  journalctl | grep cron
 4491  echo "$PWD/day"
 4492  sudo ./fete
 4493  man crontab
 4494  crontab -u oxhart -l
 4495  sudo crontab -u oxhart -l
 4496  systemctl start cron
 4497  systemctl start crontab
 4498  sudo systemctl start crontab
 4499  sudo systemctl start cronjob
 4500  systemctl status cron
 4501  systemctl | grep cron
 4502  ps -ef | grep cron | grep -v grep
 4503  sudo systemctl enable crond
 4504  sudo systemctl enable cron
 4505  sudo pacman -Syy cronie
 4506  sudo systemctl enable cronie
 4507  sudo systemctl start cronie
 4508  cat day.json name
 4509  echo $FETE
 4510  echo name
 4511  cat /home/oxhart/scripts/fete/name
 4512  echo "ma bite" > name
 4513  echo "BIG W DICK" > name
 4514  nvim -v
 4515  cat test.
 4516  cat test.md
 4517  c markdown commentary
 4518  ls *honneu*
 4519  nvim test.md
 4520  cat da
 4521  rm day.json name
 4522  cat name
 4523  nvr -l ~/Documents/builds/terminalConfigs/.tmux.conf
 4524  rm name
 4525  nvr -l day.json
 4526  z zf
 4527  z fz
 4528  find -iname "fz" | xargs nvrl -l
 4529  find -iname "fz" | xargs nvr -l
 4530  nvr -l .tmux.conf
 4531  nvim day && chmod u+x day
 4532  curl http://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/json-normal
 4533  curl http://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/json-normal --output day.json
 4534  rm day.json
 4535  rmdir day
 4536  z scr
 4537  mkdir day && cd day
 4538  curl https://fetedujour.fr/api/v2/hWTeWBPpqsDadjhb/json-normal\?api_key\=hWTeWBPpqsDadjhb\&f\=json\&t\=normal --output day.json
 4539  z fete
 4540  cat day.json
 4541  nvim day.json
 4542  z Pic
 4543  rangert
 4544  man setsid
 4545  c;
 4546  cl
 4547  z lua
 4548  nvim firenvim.lua
 4549  mv cod4/debug .
 4550  ls *js*
 4551  cd debug
 4552  nvim index.js
 4553  \n        char input_signal[65];\n        scanf("%s%s", input_name, input_signal);\n    }
 4554  nvim lag
 4555  nvr -l lag
 4556  nvr -s index.html
 4557  nvr -l name
 4558  sudoedit test.html
 4559  sudoedit /etc/mkinitcpio.conf
 4560  env | grep -i editor
 4561  env | grep -i sudo
 4562  man editor
 4563  env | grep -i visual
 4564  $DITOR test
 4565  $EDITOR test
 4566  $EDITOR lol
 4567  $VISUAL lol
 4568  curl -fsSl https://raw.githubusercontent.com/tridactyl/native_messenger/master/installers/install.sh -o /tmp/trinativeinstall.sh && sh /tmp/trinativeinstall.sh master
 4569  sudo pacman -S gvim
 4570  $EDITOR
 4571  git clone nvim
 4572  git clone https://github.com/tridactyl/native_messenger.git
 4573  cd native_messenger
 4574  ./installers/install.sh local
 4575  whereis gvim
 4576  echo $VISUAL
 4577  echo $EDITOR
 4578  cat www.w3schools.com_js-tryit-asp_DIV-id-textareawrapper-DIV-1_2022-10-25T18-33-29-418Z.html
 4579  nvr -l www.w3schools.com_js-tryit-asp_DIV-id-textareawrapper-DIV-1_2022-10-25T18-33-29-418Z.html
 4580  z react
 4581  cd ../parcel
 4582  tmux a 
 4583  emacsclient -h
 4584  emacsclient -n test.org
 4585  ls *tex
 4586  firefox
 4587  firefox test.tex
 4588  brave test.tex
 4589  rm *org *tex
 4590  ls *org
 4591  z lol
 4592  tmux a
 4593  nvim defib.c
 4594  lazygit 
 4595  z Pi
 4596  t status
 4597  ls ls
 4598  2ll12
 4599  npx 
 4600  (use-package multi-vterm\n\t:config\n\t(add-hook 'vterm-mode-hook\n\t\t\t(lambda ()\n\t\t\t(setq-local evil-insert-state-cursor 'box)\n\t\t\t(evil-insert-state)))\n\t(define-key vterm-mode-map [return]                      #'vterm-send-return)\n\n\t(setq vterm-keymap-exceptions nil)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-e")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-f")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-a")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-v")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-b")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-w")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-u")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-d")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-n")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-m")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-p")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-j")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-k")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-r")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-t")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-g")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-c")      #'vterm--self-insert)\n\t(evil-define-key 'insert vterm-mode-map (kbd "C-SPC")    #'vterm--self-insert)\n\t(evil-define-key 'normal vterm-mode-map (kbd "C-d")      #'vterm--self-insert)\n\t(evil-define-key 'normal vterm-mode-map (kbd ",c")       #'multi-vterm)\n\t(evil-define-key 'normal vterm-mode-map (kbd ",n")       #'multi-vterm-next)\n\t(evil-define-key 'normal vterm-mode-map (kbd ",p")       #'multi-vterm-prev)\n\t(evil-define-key 'normal vterm-mode-map (kbd "i")        #'evil-insert-resume)\n\t(evil-define-key 'normal vterm-mode-map (kbd "o")        #'evil-insert-resume)\nls
 4601  ls -lah
 4602  ls -lahf
 4603  man ls
 4604  k 
 4605  ls --group-directory-first
 4606  ls --group-directories-first
 4607  lsd --g
 4608  s --tree
 4609  ls -f
 4610  man lsd
 4611  s -l
 4612  ls --g
 4613  ls -l --g
 4614  lsd -s
 4615  t
 4616  z /home/oxhart/Pictures
 4617  emacsclient -n package.json
 4618  mkdir agenda
 4619  cd agenda
 4620  emacsclient -n agenda.org
 4621  mv agenda org
 4622  mkdir tasks 
 4623  z org
 4624  rm test.org
 4625  emacsclient -n tasks.org
 4626  cd ../;ls
 4627  cd tasks
 4628  emacsclient -n try.org
 4629  mv org bakorg
 4630  mkdir org
 4631  cd org
 4632  touch todo.org
 4633  rm todo.org
 4634  emacsclient -n todo.org
 4635  cd bom
 4636  cd bind
 4637  nvim ~/.emacs.d/.local/logs/cli.doom.221027164323.184115.error
 4638  notify-send desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 4639  emacs -nw --debug-init
 4640  mkdir emacs
 4641  touch init.el
 4642  emacs init.el
 4643  cat /etc/environment
 4644  ls *data*
 4645  ls *.data*
 4646  ls -h *data*
 4647  ls -h *config*
 4648  ls -h | grep config
 4649  ls -h | grep .config
 4650  ls -h
 4651  ls -a *config*
 4652  ls -a 
 4653  ls -a | grep config
 4654  ls -a | grep data
 4655  sudo echo $XDG_CONFIG_HOME
 4656  printenv | grep XDG_CONFIG_HOME
 4657  sudo printenv | grep XDG_CONFIG_HOME
 4658  printenv
 4659  printenv | grep XDG_
 4660  mkdir $XDG_CONFIG_HOME/ma_bite
 4661  sudo mkdir $XDG_CONFIG_HOME/ma_bite
 4662  cd $XDG_CONFIG_HOME
 4663  nvim environment
 4664  nvim /etc/environment
 4665  sudoedit /etc/environment
 4666  sudo nvim /etc/environment
 4667  /etc
 4668  cd profile
 4669  nvim profile.d
 4670  nvim profile
 4671  nvim zsh
 4672  echo $HOME/.config
 4673  echo $XDG_CONFIG_HOME
 4674  sudo nvim /etc/security/pam_env.conf
 4675  cd ../Documents
 4676  mkdir documentations
 4677  emacsclient -n config.org
 4678  cd /etc/security/
 4679  nvim /etc/security/pam_env.conf
 4680  cd security
 4681  cat pam_env.conf
 4682  man getopt
 4683  mv .emacs.d .emacs.d,bak
 4684  git commit -m "first commit"
 4685  git remote add origin git@github.com:S0mbr3/emacsfs.git
 4686  echo "# emacsfs" >> README.md
 4687  git add README.md
 4688  git
 4689  git show
 4690  man git
 4691  man git-push
 4692  cd ~/org
 4693  cd ../Documents/documentations
 4694  mv .emacs.d,bak .emacs.d
 4695  mv config.org documentations/arch.org
 4696  z doom
 4697  z emacs
 4698  z .d
 4699  cd ../.emacs.d/bin
 4700  brave
 4701  find / -iname *brave.desktop*
 4702  find / -iname *.desktop
 4703  find . -iname *brave.desktop*
 4704  find . -iname "*.desktop"
 4705  cd .local/share/applications
 4706  find . -iname "brave.desktop"
 4707  cat Brave.desktop
 4708  find / -iname "brave.desktop"
 4709  sudo find / -iname "brave.desktop"
 4710  cd /root/
 4711  cd documentations
 4712  cat arch.org
 4713  mv .emacs.d.bak .emacs.d
 4714  ls | grep emacs
 4715  cd embak
 4716  cd auto-save-list
 4717  cd .config/emacs
 4718  cat init.el
 4719  cat config.el
 4720  history | grep emacs
 4721  cd oxhart
 4722  cd .emacs.d/auto-save-list
 4723  echo "#emacsdm" >> README.org
 4724  git add README.org
 4725  git commit -m "Initial commit"
 4726  git remote add origin git@github.com:S0mbr3/emacsdm.git
 4727  mkdir Documents/builds/terminalConfigs/emacsdm
 4728  cp .doom.d Documents/builds/terminalConfigs/emacsdm
 4729  cp -r .doom.d Documents/builds/terminalConfigs/emacsdm
 4730  ls Doc/b/t/*dm
 4731  ls Doc/b/t/em*dm
 4732  ls Documents/builds/terminalConfigs/emacsdm
 4733  cd Documents/builds/terminalConfigs/emacsdm
 4734  git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d\n~/.emacs.d/bin/doom install
 4735  cd .. 
 4736  history | grep mv
 4737  cd .emacs.d.bak
 4738  mv .emacs.d.bak ../emacs.d
 4739  mv .emacs.d .emacs.d.bak
 4740  mv emacs.d .emacs.d
 4741  mv .doom.d.bak .doom.d
 4742  z codin
 4743  cd ../../dev
 4744  mkdir -p puzzles/easy/logic-gates
 4745  mv logic.gates.c puzzles/easy/logic-gates
 4746  ps aux | emacs
 4747  man cut
 4748  echo a:b | cut -d: -f2
 4749  echo a:b | cut -d: -f1
 4750  cut
 4751  ps aux | grep emacs | cut -f2
 4752  ps aux | grep emacs | cut -d" "-f1
 4753  ps aux | grep emacs | cut -d" " -f2
 4754  ps aux | grep emacs | cut -d" " -f1
 4755  ps aux | grep emacs | cut -d" " -f3
 4756  ps aux | grep emacs | cut -d" " -f4
 4757  ps aux | grep emacs | cut -f1
 4758  ps -uid emacs
 4759  ps uid emacs
 4760  ps -eopid,uid emacs
 4761  ps -uid
 4762  ps uid
 4763  ps -eopid,uid
 4764  ps -eopid,uid,cmd
 4765  ps aux | grep emacs | tr -s | cut -d 
 4766  ps aux | grep emacs | tr -s | cut -d " " -f2
 4767  ps aux | grep emacs | tr -s | cut -d " " -f 2
 4768  ps aux | grep emacs | tr -s " "| cut -d " " -f2
 4769  ps aux | grep emacs 
 4770  man tr
 4771  ps aux | grep emacs | tr -s " " | cut -d -f 2
 4772  ps aux | grep emacs | tr -s " " | cut -d -f2
 4773  ps aux | grep emacs | tr -s " " | cut -d " " -f 2
 4774  ps aux | grep emacs | tr -s " "
 4775  echo gnnnnu | tr -s "n"
 4776  ps aux | grep emacs | tr -s " " | cut -d " " -f2
 4777  echo $PATH | tr ':' '\n'
 4778  echo $PATH | tr '/' '\n'
 4779  mkdir hookperso
 4780  cp package.json ../hookperso
 4781  npm int
 4782  npm init
 4783  cd ../hookperso
 4784  npx parcel -h
 4785  npx parcel help
 4786  grep prevent
 4787  grep -ri prevent
 4788  history | grep grep
 4789  grep -riI prevent
 4790  grep -riI preventDefault()
 4791  grep -riI "preventDefault()"
 4792  firefox -v
 4793  grep -riI "<li>
 4794  grep -riI "<li>"
 4795  mv favicon.ico ..
 4796  mv favicon.ico basics
 4797  cd create-react-app
 4798  mkdir tt
 4799  mv build config node_modules tt
 4800  mv tt ..
 4801  mv package-lock.json ../tt
 4802  grep -riI "li"
 4803  mv ../tt .
 4804  mv tt/* .
 4805  ls tt
 4806  rm tt
 4807  rmdir tt
 4808  i
 4809  z etc
 4810  cd puzzles
 4811  cd easy/logic-gates
 4812  lsa
 4813  iii
 4814  cd ../../.emacs.d/bin
 4815  lsi
 4816  cp package.json ../contextes
 4817  npx install
 4818  sed 's/hookperso/contextes/g' package.json
 4819  sed 's/hookperso/contextes/g' package.json > package.json
 4820  cp ../hookperso/package.json .
 4821  sed 's/hookperso/contextes/g' package.json > test.json
 4822  cat test.json
 4823  cat test.json package.json
 4824  rm package.json
 4825  mv test.json package.json && npm install
 4826  bg npx parcel index.html&
 4827  man bg
 4828  bg 1
 4829  nohup npx parcel index.html&
 4830  cd ../contextes
 4831  z con
 4832  als
 4833  man bt
 4834  man batcat
 4835  man bat
 4836  bat src/index1.jsx
 4837  nvim form.js
 4838  yarn dev
 4839  yarn install adonisjs
 4840  yarn install adonis
 4841  yarn install adonisjs/core adonisjs/lucid
 4842  yarn add adonisjs/core adonisjs/lucid
 4843  npm ci --production
 4844  npm run start
 4845  ls build
 4846  cp tsconfig.json build
 4847  cat node_modules/@adonisjs
 4848  ls node_modules/@adonisjs
 4849  cp tsconfig.json node_modules/@adonisjs
 4850  yarn run de
 4851  cd ../TutoRecipeApi
 4852  cd ap
 4853  npm audit fix
 4854  npm audit fix --forc e
 4855  npm audit fix --force
 4856  rm TutoRecipeApi
 4857  cd TutoRecipeApi/api
 4858  npm update
 4859  cp server.ts servers.js
 4860  rm servers.js
 4861  cp server.ts server.ts
 4862  cp server.js servers.cjs
 4863  rm server.js
 4864  rm -rf TutoRecipeApi
 4865  rm package-lock.json
 4866  yarn run build
 4867  cd build
 4868  yarn install --production
 4869  node server.ts
 4870  cat server.ts
 4871  cp server.ts server.js
 4872  node ace serve --watch
 4873  find -iname "recipes"
 4874  find . -iname "recipes"
 4875  cd component
 4876  cd ../api
 4877  curl https://localhost:3333/recipes --output day.json
 4878  2ls
 4879  ls utils
 4880  cd migrations
 4881  cd Models
 4882  d ..
 4883  cd Utils
 4884  grep -riI "sql"
 4885  grep --exclude "node_modules" -riI "sql"
 4886  grep --exclude "build" -riI "sql"
 4887  man grep
 4888  grep --exclude-dir "build" -riI "sql"
 4889  grep --exclude-dir "build node_modules" -riI "sql"
 4890  grep --exclude-dir "build" "node_modules" -riI "sql"
 4891  grep --exclude-dir "node_modules" -riI "sql"
 4892  grep --exclude-dir "node_modules" -riI "user"
 4893  find . -iname ".sql"
 4894  find . -iname "\.sql"
 4895  find . -iname \.sql
 4896  find . -iname .sql
 4897  find . -iname sql
 4898  cd ../front
 4899  nvim db.sqlite3
 4900  yarn run start
 4901  yarn run dev
 4902  wget localhost:3333/recipes
 4903  find . -iname "lite"
 4904  find . -iname "sql"
 4905  .ls
 4906  cd api/database
 4907  tree
 4908  find . -iname "db"
 4909  find . -iname db
 4910  cd tmp
 4911  sqlite3 db.sqlite3
 4912  npm install 
 4913  history | grep parcel
 4914  npm install parcel --save-dev
 4915  sed 's/index.js/app.ts/g' package.json > test.json
 4916  cat test.json 
 4917  sed 's/app.ts/index.js/g' package.json > test.json
 4918  mv test.json package.json
 4919  npm remove typescript
 4920  z emascs
 4921  kill -s kill $(ps aux | awk '/emacs/ {print $2}')
 4922  nohup npx parcel index.html
 4923  npm install typescript --save-dev
 4924  cp tutoReact/sync tutotypscript
 4925  nohup ./sync&
 4926  kill 5!
 4927  cp sync introduction
 4928  ls introduction
 4929  mv app.ts ../
 4930  rm test.ts
 4931  mv ../../app.ts .
 4932  emacsclient -n app.ts
 4933  man npx
 4934  npx -h
 4935  mv tsconfig.json ../
 4936  ~ls
 4937  rm dist
 4938  rm -rf dist
 4939  mv ../tsconfig.json .
 4940  ll dist
 4941  npx --watch&
 4942  ./sync&
 4943  rm sync
 4944  ps aux | sync
 4945  ps aux | | grep sync
 4946  ps aux | | grep "sync"
 4947  ps aux | | grep "browser"
 4948  ps aux | grep "browser"
 4949  ps aux | grep "sync"
 4950  emacsclient -n sync
 4951  ./sync
 4952  ../sync&
 4953  mkdir declaration
 4954  ls declaration
 4955  ls dist
 4956  rm dist/app.d.ts
 4957  ps aux | grep tty
 4958  echo $(ps aux | awk '/emacs/ {print $2}')
 4959  $(ps aux | awk '/emacs/ {print $2}')
 4960  echo $(ps aux | awk '/nautilus/ {print $2}') | xargs kill -s kill
 4961  echo $(ps aux | awk '/nautilus/ {print $2}')
 4962  kill -s kill $(ps aux | awk '/nautilus/ {print $2}')
 4963  kill -s kill 374286
 4964  kill -s kill 374237
 4965  ps aux | grep nautilus
 4966  ps aux | grep grep
 4967  ps | grep grep
 4968  ps | grep nautilus
 4969  ps 
 4970  ps aux
 4971  man ps
 4972  echo $(ps -C dolphin -o pid=) | xargs kill -s kill
 4973  ps -C dolphin -o pid=
 4974  kill -s kill dolphin
 4975  kill -s kill $(ps -C dolphin-o pid=)
 4976  npx tsc
 4977  kill -s kill $(ps -C dolphin -o pid=)
 4978  kill -s kill 373460 373464
 4979  wget https://net.geo.opera.com/opera/stable/windows\?utm_tryagain\=yes\&utm_source\=google\&utm_medium\=ose\&utm_campaign\=\(none\)\&http_referrer\=https%3A%2F%2Fwww.google.com%2F\&utm_site\=opera_com\&\&utm_lastpage\=opera.com/computer/thanks\&dl_token\=15524397
 4980  wget https://net.geo.opera.com/opera/stable/windows\?utm_tryagain\=yes\&utm_source\=google\&utm_medium\=ose\&utm_campaign\=\(none\)\&http_referrer\=https%3A%2F%2Fwww.google.com%2F\&utm_site\=opera_com\&\&utm_lastpage\=opera.com/computer/thanks\&dl_token\=15524397 opera.exe
 4981  wget opera.exe https://net.geo.opera.com/opera/stable/windows\?utm_tryagain\=yes\&utm_source\=google\&utm_medium\=ose\&utm_campaign\=\(none\)\&http_referrer\=https%3A%2F%2Fwww.google.com%2F\&utm_site\=opera_com\&\&utm_lastpage\=opera.com/computer/thanks\&dl_token\=15524397
 4982  la -A
 4983  ps aux | grep opera
 4984  kill -s kill $(ps -C OperaSetup.exe -o pid=)
 4985  wine -v
 4986  pacman -Qs wine
 4987  WINEPREFIX="$HOME/32bit" WINEARCH=win32 wine wineboot
 4988  WINEPREFIX="$HOME/prefix32" WINEARCH=win32 wine wineboot
 4989  rm -rf ~/.wine
 4990  whereis google
 4991  whereis wine
 4992  ls *wine*
 4993  ls | grep wine
 4994  ls | grep ".wine"
 4995  cat winetricks.log
 4996  cd .wine32
 4997  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 wine wineboot
 4998  ls goo
 4999  ls *goo
 5000  ls | grep chro
 5001  cd ~/.Downloads
 5002  cd ~/Downloads
 5003  cd GoogleChromePortable
 5004  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 wine GoogleChromePortable.exe 
 5005  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 wine Firefox\ Setup\ 106.0.3.exe
 5006  kill -s kill $(ps -C wine.exe -o pid=)
 5007  kill -s kill $(ps -C wine -o pid=)
 5008  ls | grep exe
 5009  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 wine ChromeSetup.exe
 5010  kill -s kill $(ps aux | awk '/firefox.exe/ {print $2}')
 5011  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 wine google-chrome
 5012  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 wine winetricks
 5013  cd .wine32/drive_c/Program\ Files
 5014  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 wine chrome.exe
 5015  sudo pacman -Syy wine-gecko wine-gecko
 5016  sudo pacman -Syy wine-gecko wine-mono
 5017  kill -s kill $(ps aux | awk '/wine/ {print $2}')
 5018  kill -s kill 15646 15656
 5019  kill -s kill $(ps aux | awk '/winetricks/ {print $2}')
 5020  ps aux | grep wine
 5021  kill -s kill $(ps aux | awk '/wineserver/ {print $2}')
 5022  winetricks -q tahoma liberation ie8 gecko dotnet20 msi2 fontfix mono22 allfonts
 5023  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 winetricks -q tahoma liberation ie8 gecko dotnet20 msi2 fontfix mono22 allfonts
 5024  wineserver -k 
 5025  kill -s kill $(ps aux | awk '/chrome.exe/ {print $2}')
 5026  cd .wine32/drive_c/Program\ Files/
 5027  kill -s kill $(ps aux | awk '/chromesetup.exe/ {print $2}')
 5028  kill -s kill $(ps aux | awk '/chrome/ {print $2}')
 5029  WINEPREFIX="$HOME/.wine" WINEARCH=win64 wine ChromeSetup.exe
 5030  cd Program
 5031  cd .wine
 5032  cd Program\ Files\ \(x86\)
 5033  cd Google/Chrome
 5034  cd Application
 5035  WINEPREFIX="$HOME/.wine32" WINEARCH=win32 winetricks
 5036  cd /tmp
 5037  rm /run/user/1000/firenvim/tsconfig.json
 5038  cp tsconfig.json /run/user/1000/firenvim/tsconfig.json
 5039  (cd .. && ./sync&)
 5040  ps aux | grep npx
 5041  ps aux | grep sync
 5042  ps -C ./sync -o pid=
 5043  ps -C "./sync" -o pid=
 5044  if [ $(ps -C "sync" -o pid= != "") echo "success"\n
 5045  if [ $(ps -C "sync" -o pid= != "" ] echo "success"\n
 5046  if [ $(ps -C "sync" -o pid= != "" ]; then echo "success"\n
 5047  if [ $(ps -C "sync" -o pid= != "") ]; then echo "success"\n
 5048  if [ $(ps -C "sync" -o pid= != "") ]; then echo "success"; fi\n
 5049  if [ $(ps -C "sync" -o pid=) != "" ]; then echo "success"; fi\n
 5050  if [ $(ps -C "npx" -o pid=) != "" ]; then echo "success"; fi\n
 5051  if [ $(ps -C "npx" -o pid=) != "" ]; then echo "success"; else; then echo "failed";fi\n
 5052  if [ $(ps -C "npx" -o pid=) != "" ]; then echo "success" else; then echo "failed";fi\n
 5053  if [ $(ps -C "npx" -o pid=) != "" ]; then echo "success" else  echo "failed";fi\n
 5054  if [ $(ps -C "npx" -o pid=) != "" ]; then echo "success" else  echo "failed" fi\n
 5055  if [ $(ps -C "sync" -o pid=) != "" ]; then echo "success" else  echo "failed" fi\n
 5056  if [ $(ps -C "sync" -o pid=) != "" ]; then echo "success"; else  echo "failed"; fi\n
 5057  if [ $(ps -C "npx" -o pid=) != "" ]; then echo "success"; else  echo "failed"; fi\n
 5058  if [ -n $(ps -C "lol" -o pid=) ]; then echo "success"; else  echo "failed"; fi\n
 5059  if [ $(ps -C "npx" -o pid=) != NULL ]; then echo "success"; else  echo "failed"; fi\n
 5060  if [ -z $(ps -C "npx" -o pid=) ]; then echo "success"; else  echo "failed"; fi\n
 5061  if [ -n $(ps -C "sync" -o pid=) ]; then echo "success"; else  echo "failed"; fi\n
 5062  if [ -n $(ps -C "npx" -o pid=) ]; then echo "success"; else  echo "failed"; fi\n
 5063  if [ ! -z $(ps -C "sync" -o pid=) ]; then echo "success"; else  echo "failed"; fi\n
 5064  if [ ! -z $(ps -C "npx" -o pid=) ]; then echo "success"; else  echo "failed"; fi\n
 5065  chmod +ux dev-server
 5066  chmod u+x dev-server
 5067  nvim test.c
 5068  cd codingame
 5069  cd puzzles/easy/logic-gates
 5070  z /home/oxhart/Downloads/
 5071  cd !
 5072  ls $HOME
 5073  curl http://193.70.81.202/BIGFLO%20\&%20OLI%20-%20Les%20autres%20c%E2%80%99est%20nous%20%5BHi-Res%5D-%202022%20-%20WEB%20FLAC%2024BIT%20%20%2044.1khz%20EICHBAUM/Les%20autres%20c%e2%80%99est%20nous/
 5074  wget http://193.70.81.202/BIGFLO%20\&%20OLI%20-%20Les%20autres%20c%E2%80%99est%20nous%20%5BHi-Res%5D-%202022%20-%20WEB%20FLAC%2024BIT%20%20%2044.1khz%20EICHBAUM/Les%20autres%20c%e2%80%99est%20nous/
 5075  rm index.html
 5076  wget -r -p http://193.70.81.202/BIGFLO%20\&%20OLI%20-%20Les%20autres%20c%E2%80%99est%20nous%20%5BHi-Res%5D-%202022%20-%20WEB%20FLAC%2024BIT%20%20%2044.1khz%20EICHBAUM/Les%20autres%20c%e2%80%99est%20nous/
 5077  cd bigflo
 5078  unrar
 5079  unrar mqs.link_EasyLifelifesabeach202124441.rar 
 5080  man unrar
 5081  unrar -h
 5082  unrar x mqs.link_EasyLifelifesabeach202124441.rar 
 5083  ls /usr/local/bin
 5084  ns
 5085  sudo pacman -Syy mpv
 5086  mpv -h
 5087  cd Easy\ Life\ -\ life\'s\ a\ beach\ \(2021\)\ \[24-44,1\]
 5088  mpv 4.\ skeletons.flac
 5089  mpv --no-video
 5090  bg %1
 5091  mpv --list-options
 5092  bg mpv --no-video 4.\ skeletons.flac
 5093  sudo pacman -S screen
 5094  man screen
 5095  screen -R
 5096  mpv --no-video 4.\ skeletons.flac
 5097  mpv --no-video Life Easy\ Life\ -\ life\'s\ a\ beach\ \(2021\)\ \[24-44,1\]
 5098  kdialog --geticon
 5099  kdialog --menu
 5100  kdialog --menu ls
 5101  kdialog --title 'Nouveaux messages' --msgbox 'Vous avez de nouveaux messages !'
 5102  Le « \n » permet d’ajouter un saut de ligne dans le message
 5103  kdialog --msgbox 'Vous avez \n de nouveaux messages !'
 5104  kdialog --yesno "Ça va ?" && kdialog --msgbox "Tant mieux" || kdialog --msgbox "Dommage"
 5105  mkcd test
 5106  kdialog --menu test
 5107  man kdialog
 5108  kdialog -h
 5109  kdialog --menu "1 3 4 5 6"
 5110  kdialog --getcolor
 5111  kdialog --menu dialog box test
 5112  kdialog --menu dialog test
 5113  mkdir doudou
 5114  cd 193.70.81.202
 5115  cp BIGFLO\ \&\ OLI\ -\ Les\ autres\ c’est\ nous\ \[Hi-Res\]-\ 2022\ -\ WEB\ FLAC\ 24BIT\ \ \ 44.1khz\ EICHBAUMlsls
 5116  emacsclient -n dev-server
 5117  yay -S openrazer-meta
 5118  yay -R openrazer-meta
 5119  nvim logic-gates
 5120  z Do
 5121  nvim netrw.vba.gz
 5122  nvim Telegram_Desktop
 5123  cd after 
 5124  cat keybindings.lua
 5125  rm -rf plugin
 5126  cd configs
 5127  ls plugins
 5128  rm -rf configs
 5129  ls transition
 5130  rm -rf transition
 5131  mkdir after
 5132  mkdir plugin
 5133  nvr -l color.lua
 5134  nvim material.lua
 5135  nvr -l material.lua
 5136  z plu
 5137  mv material.lua ../..
 5138  ln -s ~/Documents/builds/terminalConfigs/after ~/.config/nvim/after
 5139  z after
 5140  tmux ls
 5141  z plug
 5142  v
 5143  nvim color.lua
 5144  cd lua/config
 5145  nvim init.lua
 5146  ps aux | nvr
 5147  ps aux | grep nvr
 5148  kill -s kill $(ps aux | awk '/nvim/ {print $2}')
 5149  ls -A
 5150  nvim logic.gates.c
 5151  cd .local/share/nvim/site/pack/packer/start
 5152  rm lspsaga.nvim
 5153  rm -rf lspsaga.nvim
 5154  nvim postInstallation.sh
 5155  mkdir nvim
 5156  mv init.lua lua after nvim
 5157  cd ~/.config/nvim
 5158  rm init.lua lua
 5159  ln -s nvim/**/* ~/.config/nvim
 5160  mkdir bak && mv autopairs.lua plugin bak
 5161  rm *.lua && ls
 5162  rm *.*
 5163  rm *
 5164  man rm
 5165  find . xtype 1
 5166  find . xtype l
 5167  find . xtype -l
 5168  mv plugin ../ && rm bak
 5169  mv bak.plugin ../ && rm bak
 5170  mv bak/plugin ../ && rm bak
 5171  ls bak
 5172  rm bak
 5173  rmdir bak
 5174  mv ../plugin .
 5175  ls plugin
 5176  ln -s after ~/.config/nvim
 5177  ln -s after ~/.config/lua
 5178  rm lua
 5179  ls after
 5180  mkdir lntest
 5181  ln -s nvim/* lntest
 5182  ls lntest
 5183  rmdir lntest
 5184  ls lntest/after
 5185  cd lntest
 5186  rm -rf lntest
 5187  ln -s nvim/* $HOME/.config/nvim
 5188  man ln
 5189  ln -s nvim/after nvim/lua nvim/init.lua $HOME/.config/nvim
 5190  ls nvim
 5191  find . -xtype l | xargs rm
 5192  ln -s after $HOME/.config/nvim
 5193  rm after
 5194  ln -s init.lua $HOME/.config/nvim
 5195  find . -xtype l
 5196  rm init.lua
 5197  ls -s $(pwd)/nvim/* $HOME/.config/nvim
 5198  ln -s $(pwd)/nvim/* $HOME/.config/nvim
 5199  cd ~/.emacs.d/bin
 5200  z logic
 5201  nvr -l logic.gates.c
 5202  z type
 5203  cd dev/tutotypscript
 5204  cut -d: -f1 /etc/group | sort
 5205  cut -d: -f1,2
 5206  cut -d: -f1,2 | uname -a
 5207  cut -d -f1,2 | uname -a
 5208  cut -d" " -f1,2 | uname -a
 5209  history grep | cut
 5210  history | grep cut
 5211  uname -a | cut -d" " -f1,2
 5212  uname -a | cut -d" " -f2,3
 5213  rm lspsaga.lua material.lua
 5214  z build
 5215  sudo pacman -Ssyu
 5216  mkdir types_utilitaires
 5217  cd ../introduction
 5218  cat dev-server
 5219  cp introduction/dev-server types_utilitaires
 5220  bt package.json
 5221  cat tsconfig.json
 5222  cp package.json tsconfig.json ../types_utilitaires && cd ../types_utilitaires
 5223  sed 's/introduction/types_utilitaires/g package.json
 5224  sed 's/introduction/types_utilitaires/g package.json'
 5225  sed 's/introduction/types_utilitaires/g' package.json
 5226  sed 's/introduction/types_utilitaires/g' package.json > package.json && bat package.json
 5227  cp ../introduction/package.json .
 5228  sed 's/introduction/types_utilitaires/g' package.json > packages.json && mv packages.json package.json && bat package.json
 5229  npm install -g npm@9.1.1
 5230  sudo npm install -g npm@9.1.1
 5231  nodenv whence
 5232  cp ../sync .
 5233  kill -s kill 153713
 5234  bat ../introduction/index.html
 5235  npm install react
 5236  npm install eslint --save-dev
 5237  npm install babel-eslint --save-dev
 5238  npm install process
 5239  npm remove process
 5240  npm install process --save-dev
 5241  mv src/app.ts src/app.tsx
 5242  kill -s kill 154887
 5243  cat sync
 5244  bat dev-server
 5245  sed 's/index.js/app.tsx/g' package.json > packages.json && mv packages.json package.json && bat package.json
 5246  ./dev-server
 5247  kill -s kill $(ps aux | sync '/nvim/ {print $2}')
 5248  kill -s kill $(ps aux | awk '/sync/ {print $2}')
 5249  sudo kill -s kill $(ps aux | awk '/sync/ {print $2}')
 5250  sudo kill -s kill $(ps aux | awk '/npx/ {print $2}')
 5251  kill -s kill $(ps aux | awk '/npx/ {print $2}')
 5252  history kill
 5253  history | grep kill
 5254  npm -i --save-dev @types/react
 5255  npm i --save-dev @types/react
 5256  npm i --save-dev @types/react-dom
 5257  kill -s kill $(ps -C "npx" -o pid=)
 5258  ps -C "sync" -o pid=
 5259  kill -s kill $(ps -C npx -o pid=)
 5260  ps -C "tsc" -o pid=
 5261  ps -C "parcel" -o pid=
 5262  ps aux 
 5263  ps
 5264  ps -C "npm" -o pid=
 5265  npx parcel& index.html
 5266  fg %1
 5267  nvim tsconfig.json
 5268  npx tsc --watch
 5269  bg %2
 5270  fg %2
 5271  npx parcel index.html&
 5272  :bd
 5273  q
 5274  ps -C npx -o pid=
 5275  ps -C "npx"-o pid=\n -o pid=
 5276  ps -C "npx" -o pid=\n -o pid=
 5277  cat index.html
 5278  cd tutotypscript
 5279  cd introduction
 5280  cd dist
 5281  cat app.js
 5282  mv index.html index.t
 5283  npx parcel index.t
 5284  mv index.t index.html
 5285  cd ../../tutoReact/parcel
 5286  bat index.html
 5287  grep -riI "step"
 5288  grep -riI "step" --exclude-dir=node_modules
 5289  grep -riI "step" --exclude=node_modules
 5290  grep -riI "step" --exclude="node_modules"
 5291  man grep | grep exclude
 5292  grep -riI "step" --exclude-dir="node_modules"
 5293  git grep "step"
 5294  git grep -r "step"
 5295  git grep -R "step"
 5296  git grep
 5297  git grep -h
 5298  git grep -riI "step"
 5299  kls
 5300  git grep step
 5301  grep step
 5302  grep "step"
 5303  man grep | grep -R
 5304  man grep | grep "-R"
 5305  man grep | grep "\-R"
 5306  grep -R --excludes-dir=node_modules 'step'
 5307  cd contextes
 5308  grep -R --exclude-dir=node_modules 'step'
 5309  grep -R --exclude-dir=node_modules,dist 'step'
 5310  grep -R --exclude-dir=node_modules --exclude-dir=dist 'step'
 5311  grep -RiI --exclude-dir=node_modules --exclude-dir=dist 'step'
 5312  emacs
 5313  ls 2022-11-14 20-24-13.mkv
 5314  cp 2022-11-14\ 20-24-13.mkv tata.mkv
 5315  nvim test.ts
 5316  ps -C "npx" -o pid=
 5317  kill -s kill $(ps -C node -o pid=)
 5318  ps -C "node" -o pid=
 5319  mv index.css src/
 5320  mv ls
 5321  mv index.css ../
 5322  npx tsc --watch&
 5323  mv src/index.css dist
 5324  cd ../tutotypscript
 5325  cd types_utilitaires
 5326  mkcd recette
 5327  bat package.json
 5328  cp parcel/package.json recette && cd recette
 5329  sed 's/parcel/recette/g' package.json > packages.json && mv packages.json package.json && bat package.json
 5330  mkdir src
 5331  mv index.css src
 5332  pacman -Syyu
 5333  sudo pacman -S sxiv
 5334  sxiv -t .
 5335  ls *zip*
 5336  unzip Sources\ TP\ Recettes\ Introduction.zip -d recette
 5337  z /home/oxhart/dev/tutoReact/TutoRecipeApi/
 5338  yarn run
 5339  yarn isntall
 5340  yarn build
 5341  sudo yarn start
 5342  node --trace-warnings server.js
 5343  yarn update
 5344  yarn upgrade
 5345  npm start
 5346  cp server.js server.mjs
 5347  node server.mjs
 5348  node server.js
 5349  cd RecipeApi
 5350  mv TutoRecipeApi TutoRecipeApi1
 5351  git clone git@github.com:Grafikart/TutoRecipeApi.git
 5352  yarn install
 5353  npm run build
 5354  yarn start
 5355  cd ../recette
 5356  mv recette front
 5357  mkdir recette && mv front recette
 5358  cp TutoRecipeApi/api recette && cd recette
 5359  cp -r TutoRecipeApi/api recette && cd recette
 5360  cd ../../recette/api
 5361  npm install prop-types
 5362  nvim server.ts
 5363  grep -riI "3000" --exclude-dir="node_modules"
 5364  nvim ace
 5365  nvim app.ts
 5366  grep -riI "port" --exclude-dir="node_modules"
 5367  grep -riI "api" --exclude-dir="node_modules"
 5368  grep -riI "index" --exclude-dir="node_modules"
 5369  grep -riI "public" --exclude-dir="node_modules"
 5370  npm install bootstrap
 5371  npm update parcel
 5372  z usr
 5373  cd runtime
 5374  cd lua/vim
 5375  cd lsp
 5376  nvim util.lua
 5377  grep -riI "get_node" --exclude-dir="node_modules"
 5378  cd ~/.config/Unknown\ Organization
 5379  cd autoload
 5380  cat packer_compiled.lua
 5381  cd /home/oxhart/.local/share/nvim/site/pack/packer/start
 5382  grep -riI "doc_all_in_range" --exclude-dir="node_modules"
 5383  cd nvim-tree-docs
 5384  nvim internal.lua
 5385  grep -riI "get_node_text" --exclude-dir="node_modules"
 5386  nvim template.lua
 5387  cd public
 5388  cd ui
 5389  cat App.js
 5390  cat NavBar.jsx
 5391  z src
 5392  cd front/src
 5393  rm test.jsx
 5394  ip
 5395  ip show 
 5396  npx parcel index.html
 5397  git commit -a 
 5398  git add .gitignore
 5399  git commit -m "changes in .gitingore"
 5400  git branch -b tp
 5401  c git branch
 5402  git checkout -b tp
 5403  sudo pacman -Syy tldr
 5404  tldr sed
 5405  man sed
 5406  cd config
 5407  cat session.ts
 5408  cd providers
 5409  cd database
 5410  cd factories
 5411  cat index.ts
 5412  cd contracts
 5413  cat auth.ts
 5414  grep -riI "secret" --exclude-dir="node_modules"
 5415  cd build/app/Controllers/Http/
 5416  cat AuthController.js
 5417  cd hookperso
 5418  cat doom.cmd
 5419  doom -h
 5420  ./doom -h
 5421  ./doom --help
 5422  kill -s kill $(ps -C emacs -o pid=)
 5423  ps aux | grep emacs
 5424  z recette
 5425  z api
 5426  npm run dev&
 5427  npx parcel --no-cache index.html&
 5428  kill %2
 5429  kill -s kill %2
 5430  z basic
 5431  cd TutoRecipeApi1
 5432  cat Recipe
 5433  cat Recipes.jsx
 5434  cat IngredientCreate.jsx
 5435  cd recipes
 5436  cat ../utils/api.js
 5437  cat ingredients.js
 5438  cd hooks
 5439  cd components
 5440  cat Ingredients.jsx
 5441  cd ingredients
 5442  cat IngredientRow.jsx
 5443  cat api.js
 5444  cat ../ui/Field.jsx
 5445  git rm -r --cached .
 5446  rm -rf .parcel-cache
 5447  npx parcel --no-cache index.html
 5448  whereis chrome
 5449  where chrome
 5450  cd drive_c
 5451  cd Program\ Files
 5452  rm -rf Google
 5453  cd ProgramData
 5454  cd Microsoft
 5455  cd Windows
 5456  cd Start\ Menu
 5457  cd Programs
 5458  rm Google Chrome.lnk
 5459  winecfg
 5460  wine notepad.exe
 5461  cd ~/.wine
 5462  cd dosdevices
 5463  cd c:
 5464  mkdir syswow64
 5465  rmdir syswow64
 5466  sudo winetricks --self-update
 5467  winetricks -q dxvk
 5468  z Dow
 5469  ls *google*
 5470  ls *Google*
 5471  sudo pacman -S wineuninstaller
 5472  find . -iname "google"
 5473  cd drive_c/Program\ Files\ \(x86\)/Google
 5474  cd Update
 5475  cd Install
 5476  cd Download
 5477  cd users/oxhart/AppData/Local/
 5478  cd Google
 5479  cd Chrome
 5480  cd User
 5481  cd Data
 5482  find . -iname "install"
 5483  rm -rf drive_c/Program\ Files\ \(x86\)/Google drive_c/users/oxhart/AppData/Local/Google
 5484  z .wine
 5485  find . -iname "chrome"
 5486  sudo pacman -S wine-uninstaller
 5487  sudo pacman -Syy wine-uninstaller
 5488  sudo pacman -Syy wine-uninstaller --needed --noconfirm
 5489  pacman -Ss wine
 5490  z /home/oxhart/Downloads
 5491  killall wineserver
 5492  wineboot
 5493  ls *Chrome*
 5494  wine ChromeSetup.exe
 5495  wine unisntaller chrome
 5496  winetricks
 5497  wine ChromeStandaloneSetup64.exe
 5498  wine chrome
 5499  z wine
 5500  history | grep cd
 5501  nvim ~/.local/share/applications/wine/Programs/Google\ Chrome.desktop
 5502  cd .wine/dosdevices/c:/Program\ Files/Google/Chrome/Application
 5503  wine chrome.exe
 5504  yay -Qs qtwebflix
 5505  yay -S qtwebflix-git
 5506  cd ~/.doom.d
 5507  ./doom refresh
 5508  npm uninstall svelte-language-server
 5509  npm delete svelte-language-server
 5510  npm remove svelte-language-server
 5511  cd ~/.emacs.d
 5512  find . -iname "emmet"
 5513  mkdir chatgpt
 5514  cd chatgpt
 5515  mkdir pages
 5516  nvim about.tsx
 5517  npm init -y
 5518  npm install react 
 5519  npm install react-dom
 5520  npm install nextjs
 5521  npm install typescript
 5522  npm install next
 5523  npm remove nextjs
 5524  git init
 5525  nivim
 5526  npm install -D tailwindcss
 5527  npx tailwindcss init
 5528  npx tailwindcss -i ./src/input.css -o ./dist/output.css --watch
 5529  mv src/* .
 5530  ls src
 5531  rm src
 5532  rmdir src
 5533  npm install -D postcss autoprefixer
 5534  npx tailwindcss init-p
 5535  mkcd next
 5536  npx create-next-app@latest my-project --typescript --eslint
 5537  npm install -D tailwindcss postcss autoprefixer
 5538  npx tailwindcss init -p
 5539  nvim tailwind.config.js
 5540  nvim globals.css
 5541  cd dev/next
 5542  nvim index.tsx
 5543  cat _app.tsx
 5544  mv _app.tsx app
 5545  mv index.tsx inde
 5546  mv app _app.tsx
 5547  mv inde index.tsx
 5548  smv pages page.bak
 5549  nv pages page.bak
 5550  mv pages page.bak
 5551  cp -r ../../chatgpt/pages .
 5552  cp ../../chatgpt/_app.tsx pages/
 5553  cp -r ../../../chatgpt/component .
 5554  cp -r ../../../chatgpt/components .
 5555  npx @next/codemod new-link .
 5556  nvim _app.tsx
 5557  cd styles
 5558  mv globals.css globalss.bak
 5559  mv globals.css ../styles
 5560  lspcu
 5561  lspsci 
 5562  lspci
 5563  lspci -nnk -d 10de:1180
 5564  sudo pacman -S qemu virt-manager libvirt ebtables dnsmasq bridge-utils openbsd-netcat
 5565  nvim /etc/systemd/network/
 5566  lspci | grep 680
 5567  sudo pacman -S gtk3
 5568  qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda vm.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1
 5569  sudo gpasswd -a $(whoami) kvm
 5570  sudo gpasswd -a $(whoami) libvirt
 5571  nvim /etc/libvirt/qemu.conf
 5572  modprobe vfio-pci
 5573  lsmod | grep vfio-pci
 5574  ls -l /dev/vfio/27
 5575  sudo chmod 666 /dev/vfui/27
 5576  sudo chmod 666 /dev/vfio/27
 5577  sudo systemctl restart libvirtd
 5578  ls /usr/lib/gtk-3.0/3.0.0
 5579  sudo pacman -S appmenu-gtk-module
 5580  nvim ~/.config/gtk-3.0/gtk.css
 5581  sudo pacman -S appmenu-gtk3-module
 5582  sudo pacman -Ss appmeu-gtk
 5583  sudo pacman -Ss appmenu-gtk
 5584  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda /run/media/oxhart/BigData/images/win.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1
 5585  qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda /run/media/oxhart/BigData/images/win.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1
 5586  sudo pacman -Qi window-decorations-gtk-module appmenu-gtk-module
 5587  sudo pacman -Qi  appmenu-gtk-module
 5588  sudo pacman -Ss window
 5589  sudo pacman -Ss window-decoratin
 5590  qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda /run/media/oxhart/BigData/images/win.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -boot -cdrom /home/oxhart/Downloads/Win11_22H2_French_x64.iso
 5591  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda /run/media/oxhart/BigData/images/win.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -boot -cdrom /home/oxhart/Downloads/Win11_22H2_French_x64.iso
 5592  ls ~/Downloads *Win11*
 5593  ls ~/Downloads *Win*
 5594  ls ~/Downloads | grep win
 5595  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda /run/media/oxhart/BigData/images/win.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -boot -cdrom /run/media/oxhart/BigData/images/win11.iso
 5596  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda /run/media/oxhart/BigData/images/win.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -cdrom /run/media/oxhart/BigData/images/win11.iso
 5597  z images
 5598  cd /run/media/oxhart/BigData/images
 5599  rm win.qcow2
 5600  qemu-img create -f qcow2 win11.qcow2 100g
 5601  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -cdrom /run/media/oxhart/BigData/images/win11.iso
 5602  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 4 -m 8192 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1
 5603  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 32 -m 8192 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1
 5604  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1
 5605  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga passthrough -display gtk
 5606  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga stf -display gtk
 5607  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga std -display gtk
 5608  sudo qemu-system-x86_64 -enable-kvm -cpu host,kvm=off -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga none -nodefaults -monitor stdio
 5609  sudo qemu-system-x86_64 -enable-kvm -cpu host -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga std -display gtk -nographic
 5610  sudo qemu-system-x86_64 -enable-kvm -cpu host,kvm=off -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga none -nodefaults -monitor stdio -nographic
 5611  sudo qemu-system-x86_64 -enable-kvm -cpu host,kvm=off,,hv_vendor_id=1234567890ab -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga none -nodefaults -monitor stdio -nographic
 5612  sudo qemu-system-x86_64 -enable-kvm -cpu host,kvm=off,hv_vendor_id=1234567890ab -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga none -nodefaults -monitor stdio -nographic
 5613  sudo qemu-system-x86_64 -enable-kvm -cpu host,kvm=off,hv_vendor_id=1234567890ab -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga none -nodefaults -monitor stdio -nographic -serial none -usb -device usb-host
 5614  virsh nodedev-detach pci_0000_05_00_0
 5615  virsh nodedev-detach pci_0000_05_00_1
 5616  sudo qemu-system-x86_64 -enable-kvm -cpu host,kvm=off,hv_vendor_id=1234567890ab -smp 32 -m 16000 -hda /run/media/oxhart/BigData/images/win11.qcow2 -device vfio-pci,host=05:00.0,multifunction=on -device vfio-pci,host=05:00.1 -vga none -nodefaults -monitor stdio -nographic -serial none
 5617  rebppt
 5618  task +daily
 5619  task +DAILY
 5620  task recur daily
 5621  emacs -d ~
 5622  emacs -d 
 5623  cd $HOME
 5624  emacs -d .
 5625  man emacs
 5626  man emacs | grep dired
 5627  emacs --execute='(dired "~/")'
 5628  sudo npm install -g @tailwindcss/language-server
 5629  npm install mongodb
 5630  sudo docker pull mongo
 5631  sudo docker images
 5632  mkdir -p mongo_data
 5633  sudo docker run -it -v mongo_data_directory:/data/db --name mongo -d mongo
 5634  mkdir mongo_docker
 5635  docker-compose up
 5636  docker ps
 5637  sudo docker compose down
 5638  cd Documents
 5639  cd codes
 5640  cd compose
 5641  mkdir imports
 5642  sudo mkdir imports
 5643  sudo cp ../../my-project/api/words.json .
 5644  sudo mv words.json imports
 5645  docker exec -it mongo bash
 5646  cd data
 5647  rm words.json
 5648  docker exec -it mongodb mongoimport --db lebonmot --collection words --file words.json
 5649  sudo docker exec -it mongodb mongoimport --db lebonmot --collection words --file words.json
 5650  sudo docker exec -it mongo mongoimport --db lebonmot --collection words --file words.json
 5651  sudo docker stop mongo
 5652  sudo docker exec -it mongo mongoimport --db lebonmot --collection words --file /home/oxhart/dev/next/my-project/api/words.json
 5653  sudo docker exec -it mongo:4.4 mongoimport --db lebonmot --collection words --file /home/oxhart/dev/next/my-project/api/words.json
 5654  sudo docker exec -it mongo_docker_mongodb-1 mongoimport --db lebonmot --collection words --file /home/oxhart/dev/next/my-project/api/words.json
 5655  sudo docker exec -it mongo-docker-mongodb-1 mongoimport --db lebonmot --collection words --file /home/oxhart/dev/next/my-project/api/words.json
 5656  sudo docker-compose down
 5657  sudo docker ls
 5658  sudo docker stop
 5659  sudo docker-compose stop
 5660  ls /home/oxhart/dev/next/my-project/api/
 5661  sudo systemctl restart docker
 5662  sudo docker ps 
 5663  sudo docker exec -it mongo_docker-mongodb-1 mongoimport --db lebonmot --collection words --file /home/oxhart/dev/next/my-project/api/words.json
 5664  sudo docker exec -it mongo_docker-mongodb-1 mongo
 5665  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json
 5666  nvim words.json
 5667  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json
 5668  docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json
 5669  docker cp words.json mongo_docker-mongodb-1:/tmp/words.json
 5670  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json --jsonArray admin -u admin admin -p password
 5671  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json --jsonArray
 5672  docker exec -it bash
 5673  sudo docker exec -it mongo bash
 5674  sudo docker exec -it mongo_docker bash
 5675  sudo docker ps
 5676  sudo docker exec -it mongo_docker-1 bash
 5677  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json --jsonArray --username admin --password password
 5678  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json --jsonArray --username root --password admin
 5679  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json --jsonArray --username root --password pass
 5680  sudo docker cp words.json mongo_docker-mongodb-1:/tmp/words.json
 5681  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json --jsonArray --username a --password password
 5682  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json --jsonArray --username root --password password
 5683  sudo docker exec mongo_docker-mongodb-1 mongoimport -d lebonmot -c words --file /tmp/words.json --type json --jsonArray --username root --password password --authenticationDatabase admin
 5684  nvim .env
 5685  sudo docker exec -it mongo_docker-mongodb-1 bash
 5686  nvim docker-compose.yml
 5687  cd fete
 5688  cat fete
 5689  ./fete
 5690  z recete
 5691  tmux a -t 0
 5692  cd mongo_data
 5693  feh 
 5694  z bigsata
 5695  cat id_rsa
 5696  cat id_rsa.pub
 5697  ls ~/.ssh
 5698  cp id_rsa id_rsa.pub ~/.ssh
 5699  ssh -p 2710 deb@192.168.0.50
 5700  ssh deb@192.168.0.50
 5701  cd .ssh\\ncd .ssh
 5702  man octal
 5703  man chmod
 5704  chmod 600 id_rsa
 5705  chmod 644 id_rsa.pub
 5706  cp config ~/.ssh
 5707  ssh -p 5045 nebj@192.168.0.20
 5708  cat config
 5709  history | grep configure
 5710  kitty +kitten ssh debian
 5711  ksh 
 5712  echo ${kitty +kitten ssh}
 5713  history | grep "echo ${"
 5714  history | grep "echo \${"
 5715  echo $(kitty +kitten ssh)
 5716  c neovim telescope dotfiles
 5717  history | grep calc
 5718  history | grep echo
 5719  cat test
 5720  echo "1 2 3 4 5 6 7" | tr " " "\n" > test
 5721  rm test
 5722  echo $VIMINIT
 5723  sshfs 
 5724  ssh
 5725  ssh debian
 5726  mkdir ansible
 5727  git clone https://github.com/spantaleev/matrix-docker-ansible-deploy.git
 5728  sudo pacman -Syy pwgen
 5729  mkdir matrix.bdenis.freeboxos.fr
 5730  cp ../../../examples/vars.yml ./
 5731  cp ../examples/hosts ./
 5732  cd host_vars/matrix.bdenis.freeboxos.fr
 5733  cd ../../..
 5734  sudo pacman -S ansible
 5735  sudo pacman -S just
 5736  sudo ansible-playbook -i inventory/hosts setup.yml --tags=setup-all
 5737  nvim setup.yml
 5738  just 
 5739  just roles
 5740  cd ../../
 5741  cd inventory/host_vars
 5742  cd matrix.bdenis.freeboxos.fr
 5743  nvim vars.yml
 5744  nvim host
 5745  nvim hosts
 5746  cd ansible
 5747  cd matrix-docker-ansible-deploy
 5748  nvim inventory/host
 5749  cat ~/.ssh/config
 5750  ssh -p 5045 nebj@82.66.43.46
 5751  ssh -p 5045 root@192.168.0.50
 5752  nvim inventory/hosts
 5753  dig
 5754  ansible-playbook -i inventory/hosts setup.yml --tags=setup-all
 5755  cd Do
 5756  nvim passwd
 5757  nvim element
 5758  yay -S element-desktop
 5759  cat security-key.txt
 5760  cp security-key.txt /run/media/oxhart/BigData
 5761  dev
 5762  kssh
 5763  kssh debian
 5764  cd dev
 5765  mkcd ionic
 5766  sudo npm -g ionic
 5767  sudo npm install -g ionic
 5768  ionic 
 5769  npm remove ionic
 5770  rm -rf myApp
 5771  nodenv local 16.17.1
 5772  ionic start myApp blank --type=angular
 5773  ionic generate page home
 5774  ionic generate page about
 5775  find . -iname about
 5776  cd src/app
 5777  cd ../about
 5778  nvim about.page.html
 5779  cd home
 5780  z ionic
 5781  nvim app-routing.module.ts
 5782  ionic generate component navbar
 5783  nvim app.module.ts
 5784  cd app/home
 5785  nvim home.page.ts
 5786  nvim home.page.html
 5787  cd ../navbar
 5788  nvim navbar.component.html
 5789  nvim navbar.component.ts
 5790  cat variables.scss
 5791  mv theme.scss theme
 5792  nvim app.component.html
 5793  cd theme
 5794  cd app/navbar
 5795  cd .angular
 5796  cd cache
 5797  cd 15.1.0
 5798  slla
 5799  cd environments
 5800  find . -iname styles.css
 5801  cd node_modules
 5802  cd ionic
 5803  find . -iname "styles.css"
 5804  cd myApp
 5805  cat ionic.config.json
 5806  cat angular.json
 5807  mv theme/theme.scss ./
 5808  cd navbar
 5809  nvim navbar.component.scss
 5810  nvim angular.json
 5811  nvim theme.scss
 5812  cd assets
 5813  cd icon
 5814  nvim app.component.scss
 5815  f
 5816  cat theme.scss
 5817  cat app/app.component.scss
 5818  cd app
 5819  cat app.component.ts
 5820  cd nex
 5821  cd mongo_docker
 5822  z my-pro
 5823  z tutoReact
 5824  sudo docker-compose up
 5825  nvim .
 5826  z parcel
 5827  emacs -nw
 5828  z doudou
 5829  quit
 5830  sudo pacman -S stow
 5831  nvim install.sh
 5832  mkdir .dotfiles
 5833  cd fd
 5834  find . -iname "kitty"
 5835  find . -iname "kitty" 2>/dev/null
 5836  cd .config/kitty
 5837  cat kitty.conf
 5838  ls *ranger*
 5839  vf ranger
 5840  cd ranger
 5841  cat scope.sh
 5842  cp -r ranger kitty ~/Documents/builds/terminalConfigs/.dotfiles
 5843  mv nvim .dotfiles
 5844  rm -rf ranger kitty
 5845  stow -d /home/oxhart/Documents/builds/terminalConfigs/.dotfiles -t ~/
 5846  mv .config/**/8 .
 5847  mv .config/* .
 5848  mv .config/**/* .
 5849  cd after
 5850  cd plugin
 5851  cd snippets
 5852  stow -t /home/oxhart/
 5853  stow -t /home/oxhart/ .
 5854  stow -D
 5855  cd kitt
 5856  cd kitty
 5857  lks
 5858  cp -r .dotfiles dotfiles
 5859  mkdir .config
 5860  mv kitty nvim ranger/ .config
 5861  rm -rf dotfiles
 5862  cd emacsdm
 5863  sl;
 5864  rm -rf emacsdm
 5865  cp -r .emacs.d .doom.d ~/Documents/builds/terminalConfigs/.dotfiles
 5866  rm -rf embak
 5867  rm -rf .emacs.d.bak
 5868  cp -r .emacs.d .emacs.d.bak
 5869  rm -rf .emacs.d
 5870  ls *doom*
 5871  ls *.doom*
 5872  ls doom
 5873  ls | grep doom
 5874  ls -la *doom*
 5875  mv .doom.d .doom.d.bak
 5876  ls =a
 5877  nvim .dotfiles/.stow-local-ignore
 5878  mv .dotfiles/.stow-local-ignore .
 5879  rm kitty nvim ranger
 5880  stow -t /home/oxhart/ .dotfiles
 5881  mv .stow-local-ignore ../
 5882  stow -D .dotfiles
 5883  stow -D **/*
 5884  stow -D *
 5885  cd .config
 5886  rm -rf after init.lua lua
 5887  rm -rf kitty ranger
 5888  mkdir emacs nvim ranger kitty
 5889  mkdir nvim/.config kitty/.config ranger/.config 
 5890  mv .config/nvim nvim/.config 
 5891  mv .config/ranger ranger/.config
 5892  mv .config/kitty kitty/.config
 5893  ls -la .config
 5894  rm .config
 5895  rmdir .config
 5896  mv .emacs.d .doom.d emacs
 5897  stow .
 5898  stow emacs kitty nvim ranger
 5899  stow -D .
 5900  stow -D emacs kitty nvim ranger
 5901  mv .stow-local-ignore .dotfiles
 5902  cd .dotfileas
 5903  nvim .stow-local-ignore \
 5904  nvim .stow-local-ignore
 5905  stow -t ~/ emacs kitty nvim ranger
 5906  stow -t ~/ emacs kitty nvim ranger --adopt
 5907  ls -la | grep nodenv
 5908  cat nodenv
 5909  mkdir -p nodenv/.nodenv
 5910  rmdir nodenv/.nodenv
 5911  cp -r ~/.nodenv nodenv
 5912  cd versions
 5913  cd 16.10.0
 5914  git .dotfiles
 5915  git add .dotfiles
 5916  git add . 
 5917  cd .dotfiles/emacs/.doom.d
 5918  git diff
 5919  cd ../.emacs.d
 5920  git add .dotfiles.nodenv/*
 5921  git add .dotfiles/nodenv/*
 5922  git add .dotfiles/nodenv/
 5923  git status --ignore-submodules
 5924  git commit -m "dotfiles are now easy to deplot with stow"
 5925  cd ../../emacs/.emacs.d
 5926  git submodule add https://github.com/doomemacs/doomemacs
 5927  git add .dotfiles/emacs/.emacs.d/
 5928  rm -rf .dotfiles/emacs/.emacs.d
 5929  git rm -rf --cached .dotfiles/emacs/.emacs.d
 5930  git submodule add https://github.com/doomemacs/doomemacs .dotfiles/emacs/.emacs.d
 5931  stow -t ~/ emacs
 5932  cd /.em/bin
 5933  cd .emacs.d/bin
 5934  cd terminalConfigs
 5935  cd. .
 5936  cd .dotfiles/nodenv/.nodenv
 5937  git config --get remote.origin.url
 5938  git add .dotfiles/nodenv/.nodenv
 5939  cat .gitmodules
 5940  git submodule update
 5941  cp -r .dotfiles/nodenv ~
 5942  rm -rf .dotfiles/nodenv/.nodenv
 5943  cd .dotfiles/nodenv
 5944  cp -r ~/nodenv/.nodenv/versions .
 5945  cd version
 5946  z nodenv
 5947  cd ~/nodenv
 5948  cp version ~/Documents/builds/terminalConfigs/.dotfiles/nodenv/.nodenv
 5949  cat version
 5950  cp -r node_modules ~/Documents/builds/terminalConfigs/.dotfiles/nodenv/.nodenv
 5951  cp -r nodenv .
 5952  ls /nodenv
 5953  ls ~/nodenv
 5954  cp -r ~/nodenv .
 5955  ls node_modules
 5956  rm -rf nodenv/.nodenv/versions
 5957  rm -rf node_modules
 5958  rm -rf versions node_modules
 5959  stow -t ~/ nodenv
 5960  git rm -rf --cached .dotfiles/nodenv/.nodenv
 5961  rm -rf nodenv/.nodenv
 5962  git submodule add https://github.com/nodenv/nodenv.git .dotfiles/nodenv/.nodenv
 5963  stow -t ~/ nodenv --adopt
 5964  stow -t ~/ nodenv --adopt --defer=nodenv
 5965  mv ~/nodenv ~/.nodenv
 5966  cd ~/
 5967  cp -r .nodenv ~/nodenv
 5968  rm -rf ~/.nodenv
 5969  cp -r nodenv .nodenv
 5970  cd .dot
 5971  mkdir nodenv
 5972  stow -D nodenv
 5973  stow -D nodenv -t ~/
 5974  cd ../.nodenv
 5975  cd libexec
 5976  cd .nodenv/shims
 5977  find . -type l -exec unlink {} \;
 5978  cat ionic
 5979  cat npx
 5980  cp -r nodenv ~/Documents/builds/terminalConfigs/.dotfiles/nodenv/.nodenv
 5981  mkdir ~/Documents/builds/terminalConfigs/.dotfiles
 5982  mkdir ~/Documents/builds/terminalConfigs/.dotfiles/nodenv
 5983  cp -r ~/nodenv ~/Documents/builds/terminalConfigs/.dotfiles/nodenv/.nodenv
 5984  cd .nodenv
 5985  cd shims
 5986  cd nodenv
 5987  mv nodenv ../nodenv1
 5988  rm .nodenv
 5989  mv nodenv1 .nodenv
 5990  rm -rf nodenv
 5991  sudo pacman -S nodenv
 5992  echo $PATH
 5993  existing target is not owned by stow:
 5994  $ curl -fsSL https://github.com/nodenv/nodenv-installer/raw/master/bin/nodenv-doctor | bash\nChecking for `nodenv' in PATH: /usr/local/bin/nodenv\nChecking for nodenv shims in PATH: OK\nChecking `nodenv install' support: /usr/local/bin/nodenv-install (node-build 3.0.22-4-g49c4cb9)\nCounting installed Node versions: none\n  There aren't any Node versions installed under `~/.nodenv/versions'.\n  You can install Node versions like so: nodenv install 2.2.4\nAuditing installed plugins: OK
 5995  mv ~/.nodenv nodenv
 5996  mv ~/.nodenv nodenv.bak
 5997  mv ~/.nodenv ~/nodenv.bak
 5998  $ git clone https://github.com/nodenv/nodenv.git ~/.nodenv
 5999  cd ~/.nodenv
 6000  cp nodenv ~/nodenv.bak
 6001  rm -rf .nodenv
 6002  mv nodenv.bak .nodenv
 6003  mkdir ~/Documents/builds/terminalConfigs/.dotfiles/nodenv/.nodenv
 6004  mkdir -p ~/Documents/builds/terminalConfigs/.dotfiles/nodenv/.nodenv
 6005  cp -r .nodenv ~/Documents/builds/terminalConfigs/.dotfiles/nodenv
 6006  nodenv
 6007  z node
 6008  scd ..
 6009  rm -rf ~/Documents/builds/terminalConfigs/.dotfiles/nodenv
 6010  mv .nodenv .nodenv.bak
 6011  git clone https://github.com/nodenv/nodenv.git ~/.nodenv
 6012  ls -la .nodenv
 6013  cp -r .nodenv.bak/node_modules .nodenv.bak/version .nodenv.bak/versions .nodenv/
 6014  curl -fsSL https://github.com/nodenv/nodenv-installer/raw/master/bin/nodenv-doctor | bash
 6015  ld
 6016  node
 6017  echo 'export PATH="$HOME/.nodenv/bin:$PATH"' >> ~/.zshrc
 6018  cat ~/.zshrc | grep nodenv
 6019  ~/.nodenv/bin/nodenv init
 6020  mkdir -p "$(nodenv root)"/plugins
 6021  git clone https://github.com/nodenv/node-build.git "$(nodenv root)"/plugins/node-build
 6022  npm
 6023  ionic serve
 6024  npm install -g ionic
 6025  history | grep npm install
 6026  history | grep "npm install"
 6027  git commit -m "removed nodenv"
 6028  z my
 6029  git init 
 6030  git add mongo_docker/ my-project/
 6031  git add mongo_docker/
 6032  sudo git add mongo_docker/
 6033  sudo git add my-project/
 6034  cd my-project
 6035  git remote add origin git@github.com:S0mbr3/lebonmotfront.git
 6036  git branch -m main
 6037  git rm --cached nodenv/.nodenv
 6038  git commit -m "routing working, 2 pages, fetching from mongodb database and showing on page"
 6039  mv my-project ../
 6040  git rm --cached my-project
 6041  git submodule add https://github.com/S0mbr3/lebonmotfront my-project
 6042  git submodule add ssh://github.com/S0mbr3/lebonmotfront my-project
 6043  git submodule add git@github.com:S0mbr3/lebonmotfront.git lebonmotfront
 6044  git rm --cached lebonmot
 6045  git rm --cached lebonmotfront
 6046  rm -rf lebonmotfront
 6047  git rm -rf --cached lebonmotfront
 6048  sudo git submodule add git@github.com:S0mbr3/lebonmotfront.git lebonmotfront
 6049  sudo git submodule add git@github.com:S0mbr3/lebonmotfront.git lebonmotfront --force
 6050  sudo git submodule add -f git@github.com:S0mbr3/lebonmotfront.git lebonmotfront
 6051  sudo git add --all
 6052  git commit -m "initial commit"
 6053  \ngit remote add origin git@github.com:S0mbr3/lebonmot.git
 6054  cp id_ed25519 id_ed25519.pub /run/media/oxhart/BigData
 6055  z scripts
 6056  cp scripts ~/Documents/builds/terminalConfigs
 6057  cp -r scripts ~/Documents/builds/terminalConfigs
 6058  git add scripts
 6059  git add scripts/
 6060  rm -rf .git
 6061  git add -f scripts/
 6062  git rm -rf --cached scripts/finder
 6063  cd finder
 6064  git commit -m "pushing to remote repo"
 6065  git branch -M main
 6066  git remote add origin git@github.com:S0mbr3/fz.git
 6067  rm -rf fz
 6068  git submodule add git@github.com:S0mbr3/fz.git fz
 6069  git ad finder
 6070  git add finder
 6071  git add -all
 6072  git push -u origin main
 6073  git push origin main
 6074  git commit -m "addition of personal scripts to share accross devices"
 6075  ls | grep "zsh"
 6076  ls -la | grep "zsh"
 6077  cp .oh-my-zsh .p10k.zsh .shell.pre-oh-my-zsh .zsh_history lel
 6078  cp .oh-my-zsh .p10k.zsh .shell.pre-oh-my-zsh .zsh_history ~/Documents/builds/terminalConfigs/.dotfiles/zsh
 6079  cp -r .oh-my-zsh .p10k.zsh .shell.pre-oh-my-zsh .zsh_history ~/Documents/builds/terminalConfigs/.dotfiles/zsh
 6080  z zsh
 6081  cd .dotfiles/zsh/.oh-my-zsh
 6082  ls -la | grep oh
 6083  git commit "stowed configs of oh my zsh"
 6084  git commit -m "stowed configs of oh my zsh"
 6085  cp .dotfiles/zsh/.oh-my-zsh /run/media/oxhart/BigData/
 6086  cp -r .dotfiles/zsh/.oh-my-zsh /run/media/oxhart/BigData/
 6087  cd .dotfiles/emacs
 6088  cd .doom.d
 6089  z bigdata
 6090  cd /run/media/oxhart/BigData/
 6091  ls -la | grep doom
 6092  mkdir /run/media/oxhart/BigData/wsl
 6093  cp -r .doom.d /run/media/oxhart/BigData/wsl
 6094  z front
 6095  cd TutoRecipeApi
 6096  cd pages
 6097  ls -la | env
 6098  ls -la | grep env
 6099  cat mongodb
 6100  cd next
 6101  cd api
 6102  cat words
 6103  cat words.jsq
 6104  cat words.js
 6105  nvim .gitignore
 6106  yay -S wezterm-git
 6107  cd .config/nvim
 6108  unset .tmux.conf
 6109  stow wezterm -t ~/
 6110  cp -r zsh zsh-wsl
 6111  uname -a | cut -d" " -f2
 6112  unlink .zshrc
 6113  unlink .oh-my-zsh
 6114  unlink .zshrc.pre-oh-my-zsh
 6115  stow zsh -t ~/
 6116  mv .oh-my-zsh .oh-my-zsh.bak/
 6117  stow zsh -t ~/ --adopt
 6118  sudo pacman -Syy lolcal fortune cowsay toilet
 6119  sudo pacman -Syy lolcat fortune cowsay toilet
 6120  sudo pacman -Syy lolcat fortune-mod cowsay toilet
 6121  whereis cowsay
 6122  yay -S toilet
 6123  toilet
 6124  sudo pacman -S cowsay
 6125  cowsay -S
 6126  _fortune
 6127  sudo pacman -S lolcat
 6128  lolcat
 6129  sudo pacman -S fortune
 6130  sudo pacman -S fortune-mod
 6131  rm -rf zsh-wsl
 6132  cd..
 6133  git restore .zshrc
 6134  cd .dotfiles/zsh
 6135  cd ~/.local/state/nvim/swap
 6136  rm *.zshrc.swp
 6137  mv .zshrc ~/zz
 6138  git pull origin master
 6139  ng 
 6140  nodenv install 16.10.0
 6141  npm install ng
 6142  npm removeng
 6143  npm remove ng
 6144  npm install -g np
 6145  npm remove -g ng
 6146  npm remove -g np
 6147  npm install -g ng
 6148  nodenv -h
 6149  nodenv global 18.10.0
 6150  git commit -m "fixing arch install"
 6151  git checkout -b arch
 6152  git merge arch
 6153  git branch
 6154  git commit -m "fixed interop between arch and wsl"
 6155  cd .emacs.d
 6156  cd bi
 6157  doom sync
 6158  W
 6159  git checkout arch
 6160  echo $TERM_PROGRAM
 6161  z test
 6162  unset DISPLAY
 6163  echo $DISPLAY
 6164  mkdir neovim
 6165  mv test test.lua neovim;cd neovim; nvim test.lua
 6166  go 
 6167  go test
 6168  fzf -e | xargs nvr -r 
 6169  lsd
 6170  man nvr
 6171  nvr -r main.lua
 6172  fzf -e | xargs nvr
 6173  nvr main.sh
 6174  nvr main.lua
 6175  cd ~/.config/rnger
 6176  cd ~/.config/ranger
 6177  nvim rc.conf
 6178  cacacaca
 6179  non mais ta gueule non ? XD 
 6180  ffs
 6181  non mais c'est pas de ma faute si vous etes moche
 6182  crontab -e
 6183  sudo systemctl restart cron.service
 6184  man anacrontab
 6185  anacrontab -l
 6186  anacron -l
 6187  anacron -h
 6188  nvim /etc/ssh/ssh_config
 6189  ssh -p 5045 nebj@192.168.0.50
 6190  lo
 6191  jq
 6192  powershell
 6193  wezterm -cli wezterm.gui.default_key_tables()
 6194  wezterm cli wezterm.gui.default_key_tables()
 6195  wezterm show-keys
 6196  wezterm show-keys | grep scroll
 6197  wezterm show-keys | grep -i scroll
 6198  AAAAAAA
 6199  cd neovim
 6200  z .dotfiles
 6201  cd wezterm
 6202  chmod +x wezterm.sh
 6203  ./wezterm.sh
 6204  /bin/zsh wezterm.sh
 6205  /bin/bash wezterm.sh
 6206  nvim wezterm.sh
 6207  cp wezterm.sh ~
 6208  echo $WEZTERM_PROG
 6209  nvim ./wezterm.sh
 6210  LL
 6211  deb
 6212  kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk
 6213  uname -a
 6214  sudo pacman -S distcc
 6215  nvim /etc/distcc/hosts
 6216  llllll
 6217  z dev
 6218  cd ../next
 6219  caca
 6220  cd ,,
 6221  rm /tmp/nvim-oxhart
 6222  find -iname "keybindings.lua" | xargs nvr -l
 6223  find -iname "keybinding" | xargs nvr -l
 6224  find . -iname "keybinding" | xargs nvr -l
 6225  lazygit
 6226  cd utils
 6227  nvr -l switchterm.lua
 6228  cat init.lua
 6229  grep -riI "switchTerm" --exclude-dir="node_modules"
 6230  ..
 6231  ssh -keygen -o
 6232  cat known_hosts
 6233  grep -riI "ox" --exclude-dir="node_modules"
 6234  grep -riI "id_ox" --exclude-dir="node_modules"
 6235  ssh-keygen -o
 6236  find . -iname "ox"
 6237  find . -iname "id_ox"
 6238  find / -iname "id_ox"
 6239  find / -iname "id_ox" 2>/dev/null
 6240  lscd ..
 6241  ls -la *id*
 6242  mv id_ox* .ssh
 6243  cd .ssh
 6244  ssh-copy-id 
 6245  rm id_ox id_ox.pub
 6246  man ssh-keygen
 6247  ssh-keygen --heko
 6248  ssh-keygen --help
 6249  man ssh-keygen | grep "-o"
 6250  man ssh-keygen | grep "\-o"
 6251  ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_arch
 6252  ssh-copy-id -i id_arch
 6253  ssh-copy-id -i id_arch oxhart@localhost
 6254  ssh -p 5045 oxhart@localhost
 6255  ssh -p 5045 oxhart@localhost -i id_arch
 6256  ssh -p 5045 oxhart@localhost -i id_arch.pub
 6257  ip -s link
 6258  ip addr
 6259  ip monitor -all
 6260  ip monitor all
 6261  ip a s
 6262  cht.sh linux local ip
 6263  ip 
 6264  ip addre
 6265  ssh-copy-id -i id_arch oxhart@82.66.43.46 -p 5046
 6266  ssh-copy-id -i id_arch oxhart@82.66.43.46 -P 5046
 6267  sudo pacman -Syy netstat
 6268  grep -w 
 6269  man grep | grep -w
 6270  man grep | grep \-w
 6271  man grep | grep "\-w"
 6272  grep -w '80/tcp' /etc/services
 6273  grep -w '443/tcp' /etc/services
 6274  grep -E -w '443/tcp' /etc/services
 6275  grep -E -w '22/(tcp|udp)' /etc/services
 6276  grep -E -w '5046/(tcp|udp)' /etc/services
 6277  grep -E -w '5047/(tcp|udp)' /etc/services
 6278  grep -E -w '5049/(tcp|udp)' /etc/services
 6279  grep -E -w '50490/(tcp|udp)' /etc/services
 6280  grep -E -w '50491/(tcp|udp)' /etc/services
 6281  grep -E -w '2222/(tcp|udp)' /etc/services
 6282  grep -E -w '5555/(tcp|udp)' /etc/services
 6283  grep -E -w '5065/(tcp|udp)' /etc/services
 6284  grep -E -w '49000/(tcp|udp)' /etc/services
 6285  ssh-copy-id -i id_arch oxhart@82.66.43.46
 6286  ssh-copy-id -p 22 -i id_arch oxhart@82.66.43.46
 6287  ssh oxhart@82.66.43.46
 6288  ssh oxhart@82.66.43.46 -i ~/.ssh/id_arch
 6289  iptables-save > IPtablesbackup.txt
 6290  sudo iptables-save > IPtablesbackup.txt
 6291  sudo iptables -A INPUT -p tcp --dport 5046 -j DROP
 6292  sudo iptables -A OUTPUT -p tcp --dport 5046 -j DROP
 6293  ls /etc/iptables
 6294  sudo iptables-save -f /etc/iptables/iptables.rules
 6295  nvim /etc/ssh/sshd_config
 6296  sudo systemctl restart sshd
 6297  ssh-copy-id -p 5046 -i id_arch oxhart@82.66.43.46
 6298  iptables -S
 6299  sudo iptables -S
 6300  sudo iptables-restore < IPtablesbackup.txt
 6301  sudo iptables -A OUTPUT -p tcp --dport 5046 -j ACCEPT
 6302  sudo iptables -A INPUT -p tcp --dport 5046 -j ACCEPT
 6303  sudo iptables -S | grep 5046
 6304  ssh -p 5046 oxhart@82.66.43.46 -i ~/.ssh/id_arch
 6305  gpg 
 6306  cp -r .ssh ssh2
 6307  gpg --gen-key
 6308  gpg -e oxhart ssh2
 6309  gpg -e -r Benjamin Denis ssh2
 6310  gpg -e -r oxhart ssh2
 6311  gpg -e -r oxhart ssh2/cent.pub
 6312  gpg --list-public-keys
 6313  gpg --fullgenerate-key
 6314  gpg -e -r benjamin-denis ssh2
 6315  sudo pacman -S gpgdir
 6316  gpg -e -r benjamin-denis ssh2/id_arch.pub
 6317  gpg --export benjamin-denis
 6318  1;1;128;128;1;0x
 6319  cat id_arch.gpg
 6320  aa
 6321  mkdir gpg_ssh
 6322  mv *.gpg *.key gpg*
 6323  cat id_arch.
 6324  gpg -d -o id_arch.gpg id
 6325  cat id
 6326  ssh -p 5046 oxhart@82.66.43.46 -i id_arch.gpg
 6327  ssh -p 5046 oxhart@82.66.43.46 -i gpg -d -i id_arch.gpg
 6328  ssh -p 5046 oxhart@82.66.43.46 -i $(gpg -d -i id_arch.gpg)
 6329  gpg -d -i id_rsa | ssh -p 5046 oxhart@82.66.43.46 -i
 6330  gpg -d -i id_rsa.gpg | ssh -p 5046 oxhart@82.66.43.46 -i
 6331  gpg -d -i id_arch.gpg | ssh -p 5046 oxhart@82.66.43.46 -i
 6332  gpg -d -i id_arch.gpg | ssh -p 5046 oxhart@82.66.43.46 
 6333  gpg -d -i id_arch.gpg | xargs ssh -p 5046 oxhart@82.66.43.46 -i
 6334  test = gpg -d -i id_arch.gpg | xargs ssh -p 5046 oxhart@82.66.43.46 -i $test
 6335  gpg -d -i id_arch.gpg | xargs ssh -p 5046 oxhart@82.66.43.46 -i id_arch
 6336  gpg -d -i id_arch.gpg | xargs ssh -p 5046 oxhart@82.66.43.46 -i 
 6337  gpg -d -i id_arch.gpg -o id_arch | xargs ssh -p 5046 oxhart@82.66.43.46 -i 
 6338  gpg -d id_arch.gpg -o id_arch | xargs ssh -p 5046 oxhart@82.66.43.46 -i 
 6339  gpg -d id_arch.gpg
 6340  gpg -d id_arch.gpg | xargs ssh -p 5046 oxhart@82.66.43.46 -i 
 6341  gpg -d id_arch.gpg > ssh -p 5046 oxhart@82.66.43.46 -i 
 6342  gpg -d id_arch.gpg >> ssh -p 5046 oxhart@82.66.43.46 -i 
 6343  gpg -d id_arch.gpg >> id
 6344  gpg -d id_arch.pub.gpg >> id
 6345  ssh -p 5046 oxhart@82.66.43.46 -i ~/ssh2/id_arch
 6346  gpg -d -o id id_arch.gpg
 6347  chmod 600 id
 6348  ssh -p 5046 oxhart@82.66.43.46 -i id
 6349  rm id ssh
 6350  gpg -d -o id id_arch.gpg && chmod 600 id && ssh -p 5046 oxhart@82.66.43.46 -i id
 6351  rm id
 6352  z terminal
 6353  cd ssh2/gpg_ssh
 6354  z pictures;ranger
 6355  who
 6356  xlear
 6357  clear
 6358  ls 
 6359  ls -a
 6360  ls -la 
 6361  cd gpg_ssh
 6362  wezterm cli pane_id()
 6363  wezterm cli pane_id
 6364  kitty +kitten panel --edge bottom sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 6365  kitty +kitten panel --edge top sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 6366  kitty +kitten panel --helpo
 6367  kitty +kitten panel --help
 6368  kitty +kitten panel --edge=top sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 6369  kitty +kitten panel --edge=left sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 6370  kitty +kitten panel --class=kittypanel --edge=right sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 6371  kitty +kitten panel --class=kittypanel --edge=top sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 6372  kitty +kitten panel --edge=right sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 6373  kitty +kitten panel --edge=bottom sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 6374  kitty +kitten panel --edge=bottom sh -c 'printf "\n\n\nHello, world."'
 6375  kitty +kitten panel sh -c 'printf "\n\n\nHello, world."; sleep 5s'
 6376  sh --help
 6377  man sh | grep "\-c"
 6378  bash -c 
 6379  bash -c "echo 'lol'"
 6380  kitty +kitten panel bash -c 'printf "\n\n\nHello, world."; sleep 5s'
 6381  kitty +kitten panel bash -c 'echo "lol"; sleep 5s'
 6382  kitty +kitten panel bash -c 'echo "lolooooooooooooooooooooooooooooooooooooo"; sleep 5s'
 6383  kitty +kitten panel --edge=top bash -c 'echo "lolooooooooooooooooooooooooooooooooooooo"; sleep 5s'
 6384  kitty +kitten panel --edge=right bash -c 'echo "lolooooooooooooooooooooooooooooooooooooo"; sleep 5s'
 6385  kitty --config=NONE +kitten panel --edge=right bash -c 'echo "lolooooooooooooooooooooooooooooooooooooo"; sleep 5s'
 6386  kitty +kitten panel --config NONE --edge=right bash -c 'echo "lolooooooooooooooooooooooooooooooooooooo"; sleep 5s'
 6387  kitty +kitten panel --config NONE bash -c 'printf "\n\n\nHello, world."; sleep 5s'
 6388  kitty +kitten panel -o startup_session=none --lines=10 sh -c "echo moooo; read"
 6389  kitty +kitten panel --edge right-o startup_session=none --lines=10 sh -c "echo moooo; read"
 6390  lll
 6391  ls -la *mkt*
 6392  ls *mkt*
 6393  find / -iname "mkt" 2>/dev/null
 6394  find / -iname "tri" 2>/dev/null
 6395  find . -iname "tridactyl" 2>/dev/null
 6396  find . -iname "tridactylrc" 2>/dev/null
 6397  find . -iname "tridactyl*" 2>/dev/null
 6398  ps -C "firefox" -o pid=
 6399  nvim ./tridactylrc
 6400  z dotfiles
 6401  mkdir tridactyl
 6402  cp ~/.tridactylrc tridactyl
 6403  ls tridactyl
 6404  ls -la tridactyl
 6405  rm ~/.tridactylrc
 6406  stow tridactyl t ~/
 6407  stow tridactyl -t ~/
 6408  wezterm cli split-pane
 6409  wezterm cli split-pane --left
 6410  man wezterm
 6411  wezterm cli lists
 6412  wezterm cli --help
 6413  wezterm cli list-clients
 6414  uuidgen
 6415  wezterm emit
 6416  wezterm cli list --json
 6417  wezterm cli list --help
 6418  wezterm cli list --format json | xargs jq -r '.window_id'
 6419  wezterm cli list --format json > wezjson.json && jq -r '.window_id' wezjson.json && rm wezjson.json
 6420  wezterm cli list --format json > wez.json && jq -r 'window_id' wez.json && rm wez.json
 6421  wezterm cli list --format json > wez.json && jq -r '.window_id' wez.json && rm wez.json
 6422  cat scripts/fete/day.json
 6423  jq --help
 6424  man jq
 6425  jq '.[] | select(.window_id==0) | .pane_id' wez.json
 6426  jq '.[] | select(.tab_id==1) | .pane_id' wez.json
 6427  jq '.[] | select(.tab_id==5) | .pane_id' wez.json
 6428  jq '.[] | select(.tab_id==2) | .pane_id' wez.json
 6429  echo "jq '.[] | select(.tab_id==2) | .pane_id' $(wezterm cli list --format json)" > wez.sh
 6430  nvr -r wez.sh
 6431  chmod +x wez.sh
 6432  wezterm cli list --format json
 6433  ./wez.sh
 6434  rm wez.json
 6435  cat wez.json
 6436  ./wez.sh "2"
 6437  ./wez.sh 2
 6438  ps -C "wezterm" -o pid-
 6439  kill -s kill $(ps -C "wezterm" -o pid=)
 6440  cd ssh2
 6441  gpg --export-secret-key -a benjamin-denis > private.key
 6442  gpg --export-secret-key -a doudou > doudou.key
 6443  gpg -e -r benjamin-denis ssh2/id_arch
 6444  gpg -e -r doudou id_arch
 6445  gpg -e -r doudou id_arch.pub
 6446  mv *.gpg *.key doudou*
 6447  cd doudou_ssh
 6448  rm private.key
 6449  gpg --delete-secret-keys benjamin-denis
 6450  gpg --help
 6451  gpg -k
 6452  gpg --delete-secret-keys 07A3C8E342E4690D0D43C8C358BA7CD557B79FC6
 6453  gpg --delete-secret-keys doudou
 6454  rm doudou.key
 6455  rm -r doudou_ssh
 6456  gpg --full-generate-key
 6457  gpg -e -r doudoudamour id_arch.pub
 6458  gpg -e -r doudoudamour id_arch
 6459  gpg --export-secret-key -a doudoudamour > doudou.key
 6460  mkdir doudou_ssh
 6461  cp doudou.key doudou_ssh
 6462  mv *.gpg dou*
 6463  cd dou*
 6464  LS
 6465  gpg -d -o id id_arch.gpg && chmod 600 id && ssh -p 5046 oxhart@82.66.43.46 -i id && rm id
 6466  history | grep import
 6467  history | grep gpg
 6468  gpg -h
 6469  gpg --export-secret-key -h
 6470  gpg --export-secret-key --help
 6471  man gpg | grep -a
 6472  man gpg | grep "\-a"
 6473  nvim fete.ps1
 6474  z le
 6475  cat docker-compose.yml
 6476  cd ../lebonmotfront
 6477  npm versions
 6478  nodenv local 16.10.1
 6479  sudo nodenv local 16.10.1
 6480  sudo nodenv local 16.10.0
 6481  cat package
 6482  nodenv local 16.10.0
 6483  nodenv 
 6484  nodenv global 16.10.0
 6485  cp /run/media/oxhart/BigData/.env.local dev/next/lebonmotfront
 6486  sudo cp /run/media/oxhart/BigData/.env.local dev/next/lebonmotfront
 6487  next dev
 6488  sudo next dev
 6489  sudo nodenv global 18.10.0
 6490  sudo nodenv global 
 6491  nodenv versions
 6492  nodenv version
 6493  nodenv install -h
 6494  nodenv install -l
 6495  nodenv install 19.4.0
 6496  sudo sudo 1!
 6497  sudo nodenv local 19.4.0
 6498  nodenv local 19.4.0
 6499  sudo nodenv global 19.4.0
 6500  cat package.json
 6501  ls
 6502  bat
 6503  batcat
 6504  bat 
 6505  fzf
 6506  bat .
 6507  bat
 6508  batcat
 6509  cat
 6510  bat middleware-
 6511  bat middleware-manifest.json
 6512  nvim ~/.zshrc
 6513  bt
 6514  sudo npm run dev -- -H 82.66.43.46
 6515  cd ../..
 6516  ls
 6517  sudo npm run dev -- -H 82.66.43.46
 6518  sudo npm run dev 82.66.43.46
 6519  cd .next
 6520  ls
 6521  cd server
 6522  ls
 6523  cd ..
 6524  ls
 6525  cd ..
 6526  ls
 6527  ls -la
 6528  rm -rf node_modules .next
 6529  sudo rm -rf node_modules .next
 6530  npm install
 6531  ls
 6532  ls -la
 6533  sudo npm install
 6534  sudo npm run dev
 6535  nvim package.json
 6536  sudo npm next dev
 6537  sudo npx next dev
 6538  sudo npx next
 6539  sudo npx next -h
 6540  sudo npm run dev -- -H 82.66.43.46
 6541  sudo npm run dev -- -H 82.66.43.46:4000
 6542  sudo npm run dev -- -H 82.66.43.46:5455
 6543  sudo npm run dev -- -H 82.66.43.46 -p 5455
 6544  sudo npm run dev -H 82.66.43.46 -p 5455
 6545  sudo npx next dev -H
 6546  sudo npx next dev -H 82.66.43.46
 6547  kill -s kill $(ps -C "firefox" -o pid=)
 6548  ls
 6549  z /home/oxhart/dev/next/lebonmotfront
 6550  ls
 6551  git pull origin main
 6552  sudo git pull origin main
 6553  git pull origin main
 6554  sudo chmod -R g+w
 6555  sudo chmod -R g+w pages/index.tsx
 6556  git pull origin main
 6557  sudo chmod -R o+w pages/index.tsx
 6558  git pull origin main
 6559  ls -la pages
 6560  cd ..
 6561  ls
 6562  sudo chmod -R o+w lebonmotfront
 6563  cd lebonmotfront
 6564  git pull origin main
 6565  npm run dev
 6566  cd ../mongo_docker
 6567  docker compose up
 6568  sudo docker compose up
 6569  npm run dev
 6570  nvim
 6571  ls
 6572  nvim
 6573  z ter
 6574  ls
 6575  nvim
 6576  ls
 6577  zsh
 6578  ll
 6579  ls
 6580  ls -la ~/
 6581  ls -la ~/*tri*
 6582  z ter
 6583  ls
 6584  git status
 6585  cd .dotfiles
 6586  ls
 6587  cd tridactyl
 6588  ls
 6589  ls -la
 6590  cat .tridactylrc
 6591  zsh
 6592  cd ..
 6593  ls
 6594  cd zsh
 6595  ls
 6596  ls -la
 6597  nvim .zsh
 6598  nvim .zshrc
 6599  zsh
 6600  nvim .zshrc
 6601  npm install -g @angular/cli
 6602  zsh
 6603  ng
 6604  zsh
 6605  sudo pacman -Syyu
 6606  sudo pacman -S awesome
 6607  z ter
 6608  ls
 6609  git status
 6610  git commit -am "better settings"
 6611  git push origin master
 6612  nvim ~/.xinitrc
 6613  nvr -s
 6614  z 
 6615  cd
 6616  nvr -l .xinitrc
 6617  exit
 6618  ll
 6619  nvim .wezterm.lua
 6620  exit
 6621  nvim .wezterm.lua
 6622  exit
 6623  ls
 6624  exit
 6625  ll
 6626  exit
 6627  ls
 6628  \n\n\n\n\n\nexit
 6629  mkdir ~/.config/awesome
 6630  cp /etc/xdg/awesome/rc.lua ~/.config/awesome
 6631  exit
 6632  logout
 6633  top
 6634  ls ~/.config/awesome
 6635  exit
 6636  eix
 6637  exit
 6638  ls
 6639  nvim .config/awesome/rc.lua
 6640  cp /usr/share/awesome/themes/default/theme.lua ~/.config/awesome
 6641  cd ~/.config/awesome
 6642  nvim
 6643  exit
 6644  sudo pacman -S volumeicon
 6645  exit
 6646  sudo pacman -S demenu
 6647  sudo pacman -S dmenu
 6648  exit
 6649  ll
 6650  exit
 6651  nvim .config/awesome/rc.lua
 6652  sudo pacman -S compton nitrogen
 6653  sudo pacman -S picom nitrogen
 6654  picom
 6655  nitrogen --restore
 6656  compton 
 6657  nvim .config/awesome/rc.lua
 6658  picom
 6659  nitrogen --restore
 6660  nitrogen --sync
 6661  nitrogen
 6662  sudo pacman -Rs nitrogen
 6663  sudo pacman -S nitrogen
 6664  nitrogen
 6665  sudo pacman -Rs nitrogen
 6666  sudo pacman -S feh
 6667  feh
 6668  ranger
 6669  feh -bg-scale ~/Downloads/vi
 6670  feh -bg-scale ~/Downloads/victoria.jpg
 6671  z down
 6672  cd 
 6673  z Down
 6674  ranger
 6675  volumeicon
 6676  pulseaudio -v
 6677  alsamixer
 6678  man volumeicon
 6679  volumeicon -h
 6680  volumeicon
 6681  alsamixer
 6682  dmenu-run
 6683  dmenu_run
 6684  awesome-client 'return awesome.keybindings'
 6685  awk '/^[^#]/ && $NF {print $NF}' ~/.config/awesome/rc.lua | sed -n '/^awful./p'
 6686  grep -E '^[^#].*(globalkeys|clientkeys)' ~/.config/awesome/rc.lua | awk 'NF && !/^[^"]*"([^"]|\\")*$/ {print $0}'
 6687  grep -E '^[^#].*(globalkeys|clientkeys)' ~/.config/awesome/rc.lua | awk 'NF && !/^[^"]*"([^"]|\\")*$/ {print $0}' | grep -Eo '([^"]*|"[^"]*")+'
 6688  grep -E '^[^#].*(globalkeys|clientkeys)' ~/.config/awesome/rc.lua | awk '/^[^#].*key(.*)$/{ print $3 }'
 6689  grep -E '^[^#].*(globalkeys|clientkeys)' ~/.config/awesome/rc.lua | awk 'NF && $1 ~ /key/ { print $3 }'
 6690  grep -E '^[^#].*(globalkeys|clientkeys)' ~/.config/awesome/rc.lua | awk 'NF && /key/ { gsub(/[^"]+|"(.*)"/, "\\1"); print }'
 6691  grep -E '^[^#].*(globalkeys|clientkeys)' ~/.config/awesome/rc.lua | awk 'NF && /key/ { gsub(/[^"]+|"(.*)"/, "\\1"); print $3 }'
 6692  rep -E '^[^#].*(globalkeys|clientkeys)' ~/.config/awesome/rc.lua | awk 'NF && /key/ { gsub(/[^"]+|"(.*)"/, "\\1"); print $3 }'
 6693  grep -E '^[^#].*(globalkeys|clientkeys)' ~/.config/awesome/rc.lua | awk 'NF && /key/ { gsub(/[^"]+|"(.*)"/, "\\1"); print $3 }'
 6694  grep -riI "awful" ~/.config/awesome/rc.lua
 6695  awesome-client 
 6696  awesome-client\nawesome# local keys = root.keys()\nawesome# for i, key in ipairs(keys) do\n   if key.command then\n      print("Keybinding " .. i .. ": " .. key.key .. " => " .. key.mod .. " => " .. key.command)\n   end\nawesome# end\n
 6697  awesome-client\n
 6698  ls
 6699  grep -ril "awful.key" ~/.config/awesome/rc.lua
 6700  grep -ril "awful" ~/.config/awesome/rc.lua
 6701  grep -riI "awful.key" ~/.config/awesome/rc.lua
 6702  grep -riI '"s' ~/.config/awesome/rc.lua
 6703  grep -riI '"s"' ~/.config/awesome/rc.lua
 6704  grep -riI '"b"' ~/.config/awesome/rc.lua
 6705  grep -riI '"f"' ~/.config/awesome/rc.lua
 6706  grep -riI '"f"' ~/.config/awesome/rc.lua | awk '{print $3}'
 6707  grep -riI "awful.key" ~/.config/awesome/rc.lua | awk '{print $3}'
 6708  grep -riI "awful.key" ~/.config/awesome/rc.lua | awk '{print $4}'
 6709  grep -riI "awful.key" ~/.config/awesome/rc.lua | awk '{print $4, $5}'
 6710  grep -riI "awful.key" ~/.config/awesome/rc.lua | awk '{print $4, $6}'
 6711  grep -riI "awful.key" ~/.config/awesome/rc.lua | awk '{print $4, ,$5, $6}'
 6712  grep -riI "awful.key" ~/.config/awesome/rc.lua | awk '{print $4, $5, $6}'
 6713  grep -riI "awful.key" ~/.config/awesome/rc.lua
 6714  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep | "*"
 6715  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "*"
 6716  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "\*"
 6717  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "."
 6718  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "(.)"
 6719  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "\(.\)"
 6720  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6721  grep -roiI "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6722  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6723  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6724  echo "lol" | grep -o "o"
 6725  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\")"
 6726  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6727  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "(\".\")"
 6728  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\")\"
 6729  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "(\".\")"
 6730  grep -riI  "awful.key" ~/.config/awesome/rc.lua | grep "(\".\")"
 6731  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6732  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6733  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "(\".\")"
 6734  grep -EriI "awful.key" ~/.config/awesome/rc.lua | grep "(\".\")"
 6735  grep -EriI "awful.key" ~/.config/awesome/rc.lua | grep "\".\""
 6736  grep -EriIo "awful.key" ~/.config/awesome/rc.lua | grep "\".\""
 6737  grep -EriI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "\".\""
 6738  echo "lol" | grep --only-matching "o"
 6739  grep riI "awful.key" ~/.config/awesome/rc.lua | grep -E "\".\""
 6740  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "(\".\")"
 6741  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6742  grep -riI --only-matching "awful.key" ~/.config/awesome/rc.lua | grep "(\".\")"
 6743  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6744  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -E "\(\".\"\)"
 6745  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -E ".\"\"
 6746  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -E "\.\""
 6747  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -E "\.\
 6748  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -E "\."
 6749  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -E "."
 6750  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo "."
 6751  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '"."'
 6752  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -o '"."'
 6753  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6754  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -o '".".'
 6755  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -o '".".*'
 6756  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep "\(\".\"\)"
 6757  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -o '\{".".*'
 6758  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -o '{".".*'
 6759  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -o '".".*'
 6760  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{".".*'
 6761  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '{".".*'
 6762  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '{.*".".*'
 6763  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*'
 6764  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* end'
 6765  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* e'
 6766  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* '
 6767  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*'
 6768  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*!e'
 6769  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end,'
 6770  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end, \1'
 6771  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end, 1'
 6772  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end, \1'
 6773  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end, /1'
 6774  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end\, /1'
 6775  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end\, \1'
 6776  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end, \1'
 6777  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '(\{.*".".*) end, /1'
 6778  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*!e'
 6779  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*'
 6780  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*' (?
 6781  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?!end,)
 6782  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?!end,)'
 6783  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* ^(?!end,)'
 6784  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?!end\,)'
 6785  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?!end,)'D
 6786  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?!end,)'
 6787  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?!end)'
 6788  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?end)'
 6789  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (!end)'
 6790  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?end)'
 6791  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (?end,)'
 6792  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".* (!?end,)'
 6793  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\k.*?(?=end$|$)''
 6794  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\k.*?(?=end$|$)'
 6795  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\k(end)'
 6796  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*'
 6797  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\kend'
 6798  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\k (end)'
 6799  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*
 6800  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*'
 6801  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=xyz$|$)''
 6802  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=xyz$|$)'
 6803  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=end$|$)'
 6804  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=end,$|$)'
 6805  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=end\,$|$)'
 6806  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=e$|$)'
 6807  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=$|$)'
 6808  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K\n
 6809  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K'\n
 6810  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*'\n
 6811  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K(end)'\n
 6812  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=$)'
 6813  man grep | grep "\-K"
 6814  man grep | grep "\-k"
 6815  man grep | grep -i "\-k"
 6816  man grep | grep "\\k"
 6817  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*\K.*?(?=end$|$)'
 6818  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*?(?=end$|$)'
 6819  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*(?=end$|$)'
 6820  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*(?=end)'
 6821  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{(?=modkey).*".".*(?=end)'
 6822  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{(?=m).*".".*(?=end)'
 6823  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{(?= modkey).*".".*(?=end)'
 6824  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{(?= ).*".".*(?=end)'
 6825  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{(?= m).*".".*(?=end)'
 6826  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{(?=m).*".".*(?=end)'
 6827  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*(?=end)'
 6828  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+".".*(?=end)'
 6829  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+(?=m)".".*(?=end)'
 6830  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+".".*(?=end)'
 6831  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*(?=end)'
 6832  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '(?=\{).*".".*(?=end)'
 6833  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '(?=\{.modkey).*".".*(?=end)'
 6834  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+".".*(?=end)'
 6835  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+"k".*(?=end)'
 6836  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+"f".*(?=end)'
 6837  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+"l".*(?=end)'
 6838  nvim .config/awesome/rc.lua
 6839  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+"l".*(?=end)'
 6840  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+"f".*(?=end)'
 6841  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+"l".*(?=end)'
 6842  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.+".".*(?=end)'
 6843  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -oP '\{.*".".*(?=end)'
 6844  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*'
 6845  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*"flo".*'
 6846  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*'
 6847  nvim .config/awesome/rc.lua
 6848  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*'
 6849  ll
 6850  ls
 6851  nvim .config/awesome/rc.lua
 6852  exit
 6853  kill -s kill $(ps -C "picom" -o pid=)
 6854  man picom
 6855  man picom | grep animation
 6856  man picom | grep time
 6857  man picom
 6858  man picom | grep time
 6859  man picom
 6860  man picom | grep fading
 6861  kill -s kill $(ps -C "picom" -o pid=)
 6862  picom --fade-in-step=1 --fade-out-step=1 --fade-delta=0
 6863  kill -s kill $(ps -C "picom" -o pid=)
 6864  picom --no-fading-openclose
 6865  kill -s kill $(ps -C "picom" -o pid=)
 6866  picom --fade-in-step=1 --fade-out-step=1 --fade-delta=0
 6867  kill -s kill $(ps -C "picom" -o pid=)
 6868  rm .xinitrc
 6869  l
 6870  ll
 6871  setxkbmap -layout us -variant intl
 6872  kill -s kill $(ps -C "volumeicon" -o pid=)
 6873  setxkbmap -layout us -variant altgr-intl -option nodeadkeys
 6874  kill -s kill $(ps -C "volumeicon" -o pid=)
 6875  xrandr
 6876  xrandr --output DP-0 --set TearFree on
 6877  xrandr --output DisplayPort-0 --set TearFree on
 6878  xrandr
 6879  xrandr --output DP-0 --set TearFree on
 6880  man xrandr | grep -i "tearfree"
 6881  man xrandr | grep "tearfree"
 6882  man xrandr | grep -i tearfree
 6883  man xrandr
 6884  xrandr --output DP-0 --set "TearFree" on
 6885  nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }"
 6886  z .config
 6887  cd ..
 6888  ls
 6889  cd volumeicon
 6890  ls
 6891  nvr -l volumeicon
 6892  man xterm
 6893  kill -s kill $(ps -C "volumeicon" -o pid=)
 6894  volumeicon
 6895  kill -s kill $(ps -C "volumeicon" -o pid=)
 6896  volumeicon&
 6897  cd /usr/share/volumeicon/icons
 6898  ls
 6899  cd Black\ Gnome
 6900  ls
 6901  kill -s kill $(ps -C "volumeicon" -o pid=)
 6902  volumeicon&
 6903  kill -s kill $(ps -C "volumeicon" -o pid=)
 6904  volumeicon&
 6905  z volumeicon
 6906  ls
 6907  nvr -l volumeicon
 6908  nvim .config/awesome/rc.lua
 6909  z volumeicon
 6910  nvr -l volumeicon
 6911  kill -s kill $(ps -C "volumeicon" -o pid=)
 6912  volumeicon&
 6913  nvr -l restart && chmod o+x restart
 6914  chmod o+x restart
 6915  ./restart
 6916  ls
 6917  restart
 6918  /bin/bash restart
 6919  ./restart
 6920  ls -l
 6921  chmod o-x restart
 6922  chmod u+x restart
 6923  ./restart
 6924  ls
 6925  z ter
 6926  ls
 6927  z nvim
 6928  ls
 6929  cd lua
 6930  ls
 6931  cd config/
 6932  ls
 6933  nvr -l keybindings.lua
 6934  ./restart
 6935  ls
 6936  cd ../..
 6937  ls
 6938  cd ..
 6939  ls
 6940  cd ..
 6941  ls
 6942  z ter
 6943  ls
 6944  cd .dotfiles
 6945  ls
 6946  mkdir volumeicon
 6947  mkdir awesome
 6948  cp ~/.config/awesome/rc.lua awesome
 6949  ls ~/.config/awesome
 6950  cp ~/.config/awesome/theme awesome
 6951  cp ~/.config/awesome/theme.lua awesome
 6952  cp ~/.config/volumeicon/volumeicon volumeicon
 6953  rm -rf ~/.config/awesome
 6954  stow awesome -t ~/
 6955  ls ~/.config/volumeicon
 6956  cp ~/.config/volumeicon/restart volumeicon
 6957  ls -la
 6958  ls -la ~/.config/volumeicon
 6959  ls -la /etc/xdg/awesome
 6960  rm ~/.config/volumeicon -rf
 6961  stow volumeicon -t ~/.config
 6962  stow -D aweseome -t ~/
 6963  ls
 6964  stow -D awesome -t ~/
 6965  stow awesome -t ~/.config
 6966  ls
 6967  cd ~/.config
 6968  ls
 6969  ls awesome
 6970  ls volumeicon
 6971  cd volumeicon
 6972  cat volumeicon
 6973  z ter
 6974  ls
 6975  stow awesome -t ~/.config
 6976  ;s
 6977  ls
 6978  c .dotfiles
 6979  cd .dotfiles
 6980  ls
 6981  stow awesome -t ~/.config
 6982  ls awesome
 6983  ls volumeicon
 6984  stow volumeicon -t ~/.config
 6985  z config
 6986  cd ..
 6987  ls
 6988  rm volumeicon rc.lua theme.lua restart
 6989  z dot
 6990  ls
 6991  stow -h
 6992  ls
 6993  mkdir ~/.config/awesome ~/.config/volumeicon
 6994  stow -t ~/.config/awesome awesome 
 6995  stow -t ~/.config/volumeicon volumeicon
 6996  /bin/bash ~/.config/volumeicon/restart
 6997  ls
 6998  cd awesome
 6999  touch script && chmod u+x script && nvr -l script
 7000  script
 7001  ./script
 7002  jq '.[] | select(.tab_id==2) | .pane_id' $(wezterm cli list --format json)
 7003  ./script
 7004  reboot
 7005  ls
 7006  z awesome
 7007  nvim
 7008  nvr -s
 7009  ./script
 7010  script
 7011  ./script
 7012  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7013  ./script
 7014  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7015  ./script
 7016  exec awesome
 7017  ./script
 7018  ls
 7019  nvr -s .wezterm.lua
 7020  wezterm cli split-pane --right
 7021  wezterm cli split-pane --bottom
 7022  sudo pacman -Rs awesome
 7023  ls
 7024  cd builds
 7025  ls
 7026  sudo pacman -S --needed base-devel git
 7027  git clone https://aur.archlinux.org/awesome-git.git
 7028  cd awesome-git
 7029  make package
 7030  ls
 7031  makepkg -fsri
 7032  nvr -l PKGBUILD
 7033  nvim
 7034  nvr -s
 7035  z awesome
 7036  nvr -l script
 7037  awesome-client 'naughty.notify{text='test'}\n
 7038  awesome-client 'naughty.notify{text='test'}'\n
 7039  awesome-client 'local naughty = require(naughty) naughty.notify{text='test'}'\n
 7040  awesome-client 'local naughty = require('naughty') naughty.notify{text='test'}'\n
 7041  awesome-client 'local naughty = require("naughty") naughty.notify{text='test'}'\n
 7042  awesome-client 'local naughty = require("naughty") naughty.notify{text='SALE PUTE'}'\n
 7043  awesome-client 'local naughty = require("naughty") naughty.notify{text="SALE PUTE"}'\n
 7044  ./script
 7045  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7046  notify-send -t 3000 -i "The First Notification" "Hello <b>World</b>"
 7047  awesome-client 'local naughty = require("naughty") naughty.notify{text="SALE PUTE"}'\n
 7048  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7049  exit
 7050  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7051  kill -s kill $(ps -C "volumeicon" -o pid=)
 7052  sudo pacman -S dunst
 7053  dunst
 7054  notify-send "oh oui"
 7055  dunst -print
 7056  notify-send "oh oui"
 7057  dunst
 7058  dunst&
 7059  notify-send "oh oui"
 7060  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7061  cd ..
 7062  ls
 7063  mkdir dunst
 7064  cp /etc/dunst/dunstrc dunst
 7065  cd dunst
 7066  nvr -l dunstrc
 7067  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7068  chmod u+x restart
 7069  ls
 7070  nvr -s
 7071  z dunst
 7072  ls
 7073  mv ~/restart .
 7074  chmod u+x restart
 7075  nvr -s
 7076  restart
 7077  ./restartr
 7078  ./restart
 7079  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7080  kill -s kill $(ps -C "dunst" -o pid=)
 7081  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7082  dunst&
 7083  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7084  ./restart
 7085  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7086  ./restart
 7087  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7088  ./restart
 7089  notify-send --hint=string:desktop-entry:TelegramDesktop -i dialog-information -t 3000 "hello world 💗💗💗💗💗"
 7090  killall dunst; notify-send "some text"
 7091  killall dunst; notify-send "Hello there" "Text text test"
 7092  dunst&
 7093  killall dunst; notify-send "Hello there" "Text text test"
 7094  killall dunst
 7095  notify-send "Hello there" "Text text test"
 7096  dunst&
 7097  notify-send "Hello there" "Text text test"
 7098  killall dunst
 7099  notify-send "Hello there" "Text text test"
 7100  dunst&
 7101  notify-send "Hello there" "Text text test"
 7102  nvr -l restart
 7103  restart
 7104  ./restart
 7105  ls
 7106  cd ..
 7107  ls
 7108  mkdir ~/.config/dunst
 7109  stow -t ~/.config/dunst dunst
 7110  ./restart
 7111  cd dunst
 7112  ./restart
 7113  notify-send "Help" -u critical
 7114  notify-send "Help" -u normal
 7115  dunstify "Hello" -u normal
 7116  dunstify "Hello" -u low -i
 7117  dunstify "Hello" -u low
 7118  dunstify "Hello" -u high
 7119  dunstify "Hello" -u critical
 7120  ~/.config/volumeicon/restart
 7121  dunstctl history-pop
 7122  dunstctl close
 7123  dunstctl close--all
 7124  dunstctl close-all
 7125  dunstctl context
 7126  dunstctl -h
 7127  dunstctl --context
 7128  dunstctl context
 7129  dunstctl history
 7130  dunstctl -h
 7131  dunstctl history-pop
 7132  dunstctl close-all
 7133  dunstctl history-pop
 7134  dunstctl close
 7135  ls
 7136  cd ..
 7137  ls
 7138  nvim
 7139  kill -s kill $(ps -C "volumeicon" -o pid=)
 7140  volumeicon&
 7141  ls
 7142  ls *lua*
 7143  ls ~/*lua*
 7144  nvim ~/layouts.lua
 7145  ll
 7146  z awesome
 7147  nvim rc.lua
 7148  z awesome
 7149  nvim
 7150  ls
 7151  mv systray.lua sys.lua
 7152  mkdir my_modules
 7153  mv sys.lua my_modules
 7154  cd ..
 7155  stow -t ~/.config/awesome awesome
 7156  ~/.config/volumeicon/restart
 7157  dunstctl history-pop
 7158  dunst&
 7159  dunstctl history-pop
 7160  git clone https://github.com/pltanton/net_widgets.git awesome
 7161  git clone https://github.com/pltanton/net_widgets.git awesome/
 7162  cd awesome
 7163  git clone https://github.com/pltanton/net_widgets.git
 7164  ls
 7165  stow -t ~/.config/awesome awesome
 7166  cd ..
 7167  stow -t ~/.config/awesome awesome
 7168  /bin/bash ~/.config/volumeicon/restart
 7169  ifconfig
 7170  ipconfig 
 7171  sudo pacman -S nm-applet
 7172  sudo pacman -S networkmanager
 7173  nmcli
 7174  nmcli connection show
 7175  nm-applet
 7176  sudo systemctl start networkmanager
 7177  sudo systemctl start NetWorkManager
 7178  sudo systemctl start NetworkManager.service
 7179  sudo systemctl stop NetworkManager.service
 7180  network-manager-applet
 7181  NetworkManager
 7182  sudo pacman -S network-manager-applet
 7183  nm-applet
 7184  sudo systemctl start NetworkManager.service
 7185  nm-applet
 7186  /bin/bash ~/.config/volumeicon/restart
 7187  stow -t ~/.config/awesome awesome
 7188  nmcli connection show
 7189  /bin/bash ~/.config/volumeicon/restart
 7190  sudo systemctl
 7191  jM4ng3P4s20x 
 7192  sudo systemctl
 7193  ls
 7194  ll
 7195  sudo systemctl
 7196  ls
 7197  z dot
 7198  l
 7199  nvim
 7200  nvr -s
 7201  ls awesome
 7202  ls awesome/my_modules
 7203  dunst&
 7204  exit
 7205  /bin/bash ~/.config/volumeicon/restart
 7206  exit
 7207  /bin/bash ~/.config/volumeicon/restart
 7208  ll
 7209  exit
 7210  ls
 7211  z dot
 7212  nvim
 7213  logout
 7214  ls
 7215  z dot
 7216  nvim
 7217  z dot
 7218  nvim
 7219  exit
 7220  /bin/bash ~/.config/volumeicon/restart
 7221  exit
 7222  ls
 7223  exit
 7224  ls
 7225  ll
 7226  la
 7227  kitty +kitten panel --edge right -o startup_session=none --lines=10 sh -c "echo moooo; read"
 7228  history | grep kitty
 7229  kitty +kitten panel --edge bottom sh -c 'printf "\n\n\nHello, world."; sleep 5s'
 7230  kitty +kitten panel --edge top sh -c 'printf "\n\n\nHello, world."; sleep 5s'
 7231  kitty +kitten right --edge top sh -c 'printf "\n\n\nHello, world."; sleep 5s'
 7232  kitty +kitten panel --edge right sh -c 'printf "\n\n\nHello, world."; sleep 5s'
 7233  exit
 7234  kitty +kitten panel --edge left sh -c 'printf "\n\n\nHello, world."; sleep 5s'
 7235  kitty +kitten panel --edge left sh -c 'printf "\n\n\nHello, world."; sleep 5s' > ~/.local/bin/ki
 7236  cat ~/.local/bin/ki
 7237  echo "kitty +kitten panel --edge left sh -c 'printf "\n\n\nHello, world."; sleep 5s'" > ~/.local/bin/ki
 7238  cat ~/.local/bin/ki
 7239  nvim ~/.local/bin/ki
 7240  chmod u+x ~/.local/bin/ki
 7241  ki
 7242  echo $path
 7243  kill -s kill $(ps -C "dmenu" -o pid=)
 7244  kill -s kill $(ps -C "dmenu_run" -o pid=)
 7245  kill -s kill $(ps -C "volumeicon" -o pid=)
 7246  /bin/bash ~/.config/volumeicon/restart
 7247  ps aux | grep dmenu
 7248  dmenu_run
 7249  kitty +kitten panel --edge left sh -c 'printf ("\n\n\nHello, world. %s",4); sleep 5s'
 7250  man printf
 7251  /bin/bash ~/.config/volumeicon/restart
 7252  exit
 7253  kitty +kitten panel --edge left sh -c 'printf ("\n\n\nHello, world. %s",4); sleep 5s'
 7254  kitty +kitten panel --edge bottom sh -c 'printf ("\n\n\nHello, world. %s",4); sleep 5s'
 7255  kitty +kitten panel --edge top sh -c 'printf ("\n\n\nHello, world. %s",4); sleep 5s'
 7256  exit
 7257  stow -t ~/.config/awesome awesome
 7258  /bin/bash ~/.config/volumeicon/restart
 7259  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*'
 7260  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*"b".*'
 7261  /bin/bash ~/.config/volumeicon/restart
 7262  awesome-client 'logout'\n
 7263  logout
 7264  exit
 7265  ls
 7266  cd .config/awesome
 7267  ls
 7268  cd my_modules/
 7269  ls
 7270  nvim 
 7271  cd ..
 7272  nvim 
 7273  exit
 7274  ls
 7275  z dot
 7276  nvim awesome
 7277  exit
 7278  git status
 7279  git commit -am "awesomewm ricing"
 7280  git push origin master
 7281  z dot
 7282  nvim awesome
 7283  awesome-client 'local naughty = require("naughty") naughty.notify{text='test'}'\n
 7284  dunst
 7285  awesome-client 'local naughty = require("naughty") naughty.notify{text="SALE PUTE"}'\n
 7286  /bin/bash ~/.config/volumeicon/restart
 7287  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*"b".*'
 7288  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*"alt".*'
 7289  grep -riI "awful.key" ~/.config/awesome/rc.lua | grep -Eo '\{.*".".*'
 7290  /bin/bash ~/.config/volumeicon/restart
 7291  exit
 7292  ls
 7293  exit
 7294  ls
 7295  ll
 7296  exit
 7297  /bin/bash ~/.config/volumeicon/restart
 7298  ls
 7299  wezterm cli move-pane-to-new-tab
 7300  wezterm cli list
 7301  z tuto
 7302  ls
 7303  cd parcel
 7304  ls
 7305  cd src
 7306  bt
 7307  cd ..
 7308  ls
 7309  cd ..
 7310  l
 7311  cd basics
 7312  ls
 7313  bt
 7314  ll
 7315  exit
 7316  top
 7317  ls
 7318  nvim
 7319  exit
 7320  ls
 7321  top
 7322  ls
 7323  ll
 7324  ls
 7325  ll
 7326  exit
 7327  ll
 7328  exit
 7329  ls
 7330  cd ../wezterm
 7331  ls
 7332  git status
 7333  git commit -am "wezterm layouts working 2 layouts available top and right"
 7334  git status
 7335  git add --all
 7336  git status
 7337  git commit -am "preparing wezterm layouts refactoring to make new layouts easier"
 7338  git status
 7339  git checkout -b wezterm_layouting
 7340  exit
 7341  ls
 7342  top
 7343  ls
 7344  kitty +kitten panel --edge top sh -c 'printf ("\n\n\nHello, world. %s",4); sleep 5s'
 7345  kitty +kitten panel --edge bottom sh -c 'printf ("\n\n\nHello, world. %s",4); sleep 5s'
 7346  kitty --config NONE +kitten panel --edge=right bash -c 'echo "lolooooooooooooooooooooooooooooooooooooo"; sleep 5s'
 7347  kitty +kitten panel --class kittypanel --edge=right sh -c 'printf "\n\n\nHello, world."; sleep 100s'
 7348  kitty +kitten panel --class kittypanel --edge=right sh -c 'printf "\n\n\nHello, world."; sleep 5'
 7349  kitty +kitten panel --class kittypanel --edge=top sh -c 'printf "\n\n\nHello, world."; sleep 5'
 7350  kitty +kitten panel --class kittypanel --edge=bottom sh -c 'printf "\n\n\nHello, world."; sleep 5'
 7351  ll
 7352  ~/.local/bin/ki
 7353  kitty +kitten panel --class kittypanel --edge=bottom sh -c 'while1 printf "\n\n\nHello, world."'
 7354  exit
 7355  ls
 7356  fg
 7357  ll
 7358  ls
 7359  wezterm show-keys --lua
 7360  ls
 7361  lla
 7362  nvim test
 7363  ls
 7364  ll
 7365  ls
 7366  wezterm cli split-pane --bottom
 7367  wezterm cli split-pane --right --equal
 7368  wezterm cli split-pane --right -- --equal
 7369  wezterm cli split-pane --right -- --percent 25
 7370  wezterm cli split-pane --right --percent 25
 7371  exit
 7372  wezterm cli split-pane --right --percent 25
 7373  wezterm cli split-pane --left --percent 25
 7374  exit
 7375  wezterm cli split-pane --right --percent 25
 7376  wezterm cli split-pane --right --cells 25
 7377  wezterm cli split-pane --right --cells 50
 7378  wezterm cli split-pane --right --cells
 7379  wezterm cli split-pane --right --cells 1000
 7380  wezterm cli split-pane --right --cells 30
 7381  exit
 7382  wezterm cli split-pane --right --cells 100
 7383  exit
 7384  wezterm cli split-pane --right --cells 100
 7385  wezterm cli split-pane --right --cells 10
 7386  exit
 7387  wezterm cli split-pane --right --cells 200
 7388  exit
 7389  wezterm cli split-pane --right --cells 150
 7390  exit
 7391  wezterm cli split-pane --right --cells 110
 7392  exit
 7393  wezterm cli split-pane --right --cells 105
 7394  exut
 7395  exit
 7396  wezterm cli split-pane --right --cells 100
 7397  wezterm cli split-pane --right --cells 20
 7398  exit
 7399  wezterm
 7400  exit
 7401  wezterm cli
 7402  wezterm cli split-pane --right --percent 50
 7403  exit
 7404  wezterm cli split-pane --right --percent 33
 7405  exit
 7406  wezterm cli split-pane --right --percent 33
 7407  exit
 7408  wezterm cli split-pane --right --percent 33
 7409  exit
 7410  wezterm cli split-pane --right --percent 50
 7411  exit
 7412  wezterm cli split-pane --right --percent 33
 7413  wezterm cli split-pane --right --percent 50
 7414  exit
 7415  wezterm cli split-pane --right --percent 20
 7416  wezterm cli split-pane --right --percent 50
 7417  exit
 7418  wezterm cli split-pane --right --percent 20
 7419  wezterm cli split-pane --right --percent 50
 7420  exit
 7421  wezterm cli split-pane --right --percent 50
 7422  wezterm cli split-pane --right --percent 20
 7423  exit
 7424  wezterm cli split-pane --right --percent 30
 7425  exit
 7426  wezterm cli split-pane --bottom
 7427  wezterm cli split-pane --bottom --percent 33
 7428  exit
 7429  wezterm cli split-pane --right --percent 33
 7430  wezterm cli split-pane --right --percent 22
 7431  wezterm cli split-pane --right --percent 100/1
 7432  wezterm cli split-pane --right --percent $(echo "100/1" | bc)
 7433  wezterm cli split-pane --right --percent $(echo "100/2" | bc)
 7434  exit
 7435  WEZTERM_LOG=debug wezterm
 7436  exit
 7437  ls
 7438  exit
 7439  wezterm cli split-pane --bottom --cells 256
 7440  wezterm cli split-pane --bottom --cells 100
 7441  wezterm cli split-pane --bottom --cells 20
 7442  exit
 7443  wezterm cli split-pane --bottom --cells $(echo "35/2" | bc)
 7444  exit
 7445  wezterm cli split-pane --bottom --cells $(echo "71/2" | bc)
 7446  exit
 7447  wezterm cli split-pane --bottom --cells $(echo "71/2" | bc)
 7448  wezterm cli split-pane --right --cells $(echo "256/2" | bc)
 7449  wezterm cli split-pane --right --cells $(echo "256/2/2" | bc)
 7450  wezterm cli split-pane --right --cells $(echo "256/2/2/2" | bc)
 7451  exit
 7452  wezterm cli split-pane --right --cells $(echo "256/2" | bc)
 7453  exit
 7454  wezterm cli split-pane --right --cells $(echo "256/3" | bc)
 7455  exit
 7456  wezterm cli split-pane --right --cells $(echo "256/1" | bc)
 7457  wezterm cli split-pane --right --cells 171
 7458  wezterm cli split-pane --right --cells 171-83
 7459  wezterm cli split-pane --right --cells 88
 7460  exit
 7461  wezterm cli split-pane --right --cells 85
 7462  wezterm cli split-pane --bottom --percent 50
 7463  wezterm cli split-pane --right --percent 67
 7464  wezterm cli split-pane --right --percent 34
 7465  exit
 7466  wezterm cli split-pane --right --percent 33
 7467  exit
 7468  wezterm cli split-pane --right --percent 35
 7469  exit
 7470  wezterm cli split-pane --right --percent 50
 7471  wezterm cli split-pane --right --percent 80
 7472  wezterm cli split-pane --right --percent 53
 7473  wezterm cli split-pane --right --percent 50
 7474  exit
 7475  wezterm cli split-pane --right --percent 73
 7476  wezterm cli split-pane --right --percent 50
 7477  exit
 7478  wezterm cli split-pane --right --percent 53
 7479  exit
 7480  wezterm cli split-pane --right --percent 75
 7481  wezterm cli split-pane --right --percent 50
 7482  exit
 7483  wezterm cli split-pane --right --percent 27
 7484  exit
 7485  wezterm cli split-pane --right --percent 75
 7486  exit
 7487  wezterm cli split-pane --right --cells 192
 7488  wezterm cli split-pane --right --cells 128
 7489  wezterm cli split-pane --right --cells 64
 7490  exit
 7491  wezterm cli split-pane --right --percent $(echo "100/4" bc)
 7492  wezterm cli split-pane --right --percent $(echo "100/4" | bc)
 7493  exit
 7494  wezterm cli split-pane --right --percent $(echo "100-100/4" | bc)
 7495  wezterm cli split-pane --right --percent 50
 7496  exit
 7497  wezterm cli split-pane --right --percent 34
 7498  exit
 7499  wezterm cli split-pane --right --percent 67
 7500  wezterm cli split-pane --right --percent 50
 7501  exit
 7502  wezterm cli split-pane --right --percent $(echo "100-25" | bc)
 7503  wezterm cli split-pane --right --percent $(echo "100-33" | bc)
 7504  wezterm cli split-pane --right --percent $(echo "100-50" | bc)
 7505  exit
 7506  wezterm cli split-pane --right --percent $(echo "100-50" | bc)
 7507  exit
 7508  wezterm cli split-pane --right --percent $(echo "100-17" | bc)
 7509  wezterm cli split-pane --right --percent $(echo "100-20" | bc)
 7510  wezterm cli split-pane --right --percent $(echo "100-25" | bc)
 7511  wezterm cli split-pane --right --percent $(echo "100-33" | bc)
 7512  wezterm cli split-pane --right --percent $(echo "100-50" | bc)
 7513  wezterm cli split-pane --right --percent 67
 7514  wezterm cli split-pane --right --percent 50
 7515  wezterm cli split-pane --right --percent 67
 7516  exit
 7517  wezterm cli split-pane --right --percent 67
 7518  wezterm cli split-pane --right --percent 50
 7519  git status
 7520  git add --all
 7521  git commit -am "refactored and addition of automatic and dynamic layouting fitting the space automatically correctly with three layouts available on wezterm"
 7522  git status
 7523  wezterm cli split-pane --right --percent 67
 7524  wezterm cli split-pane --right --percent 50
 7525  exit
 7526  wezterm cli split-pane --right --percent 75
 7527  wezterm cli split-pane --right --percent 67
 7528  wezterm cli split-pane --right --percent 50
 7529  exit
 7530  wezterm cli split-pane --right --percent 50
 7531  exit
 7532  wezterm cli split-pane --right --percent 33
 7533  exit
 7534  wezterm cli split-pane --right --percent 33
 7535  exit
 7536  wezterm cli split-pane --right --percent 67
 7537  wezterm cli split-pane --right --percent 50
 7538  exit
 7539  wezterm cli split-pane --right --percent 75
 7540  wezterm cli split-pane --right --percent 67
 7541  wezterm cli split-pane --right --percent 50
 7542  wezterm cli list
 7543  wezterm cli move-pane-to-new-tab
 7544  wezterm cli move-pane-to-new-tab 0
 7545  wezterm cli move-pane-to-new-tab --pane-id 0
 7546  ls
 7547  htop
 7548  wezterm cli list
 7549  wezterm cli move-pane-to-new-tab --pane-id 0
 7550  wezterm cli split-pane --bottom --percent 50 --pane-id 2548
 7551  exit
 7552  wezterm show-keys | grep -i move
 7553  wezterm cli split-pane --bottom --percent 50 --pane-id 2548
 7554  exit
 7555  wezterm cli -h
 7556  wezterm cli split-pane -h
 7557  wezterm cli split-pane --bottom --percent 50 --pane-id 2548
 7558  exit
 7559  wezterm cli split-pane --bottom --percent 50 --move-pane-id 2548
 7560  wezterm cli split-pane --right --percent 50 --move-pane-id 2549
 7561  exit
 7562  wezterm cli list
 7563  wezterm cli move-pane-to-new-tab --pane-id 0
 7564  wezterm cli split-pane --bottom --percent 50 --move-pane-id 2561
 7565  wezterm cli split-pane --right --percent 67 --move-pane-id 2562
 7566  wezterm cli split-pane --right --percent 50 --move-pane-id 2562
 7567  wezterm cli list
 7568  wezterm cli split-pane --right --percent 67 --move-pane-id 2563
 7569  wezterm cli split-pane --right --percent 50 --move-pane-id 2564
 7570  nvim
 7571  z lebon
 7572  ls
 7573  npm run dev
 7574  z mongo
 7575  ls
 7576  docker compose up
 7577  sudo systemctl start docker.service
 7578  docker compose up
 7579  sudo docker compose up
 7580  wezterm cli list
 7581  wezterm cli move-pane-to-new-tab --pane-id 2559
 7582  wezterm cli split-pane --bottom --percent 50 -move-pane-id 2570
 7583  wezterm cli split-pane --bottom --percent 50 --move-pane-id 2570
 7584  wezterm cli split-pane --right --percent 50 --move-pane-id 2571
 7585  ll
 7586  ls
 7587  ll
 7588  ls
 7589  cd .config/kitty/
 7590  ls
 7591  ls -la
 7592  sudo find / -iname "*kitten*" 2>/dev/null
 7593  cd /usr/lib/kitty/kittens
 7594  ls
 7595  exit
 7596  cd /usr/lib/kitty/kittens
 7597  ls
 7598  cp -r /usr/lib/kitty/kittens/panel ~/.config/kitty
 7599  ls
 7600  cd ~/.config/kitty
 7601  ls
 7602  cd panel
 7603  ls
 7604  cp main.py ../panel.py
 7605  ls
 7606  cd ..
 7607  ls
 7608  cd ..
 7609  ls
 7610  cd kiten
 7611  cd kitty/
 7612  ls
 7613  rm panel.py panel
 7614  rm -r panel.py panel
 7615  rm -r panel
 7616  ls
 7617  ki
 7618  cd ~/.local/bin/
 7619  ls
 7620  cp ki ki1
 7621  nvim ki
 7622  kitty +kitten panel --edge bottom -o startup_session=none --lines=10 sh -c "echo moooo; read"
 7623  kitty +kitten panel --edge top -o startup_session=none --lines=10 sh -c "echo moooo; read"
 7624  kitty +kitten panel --edge top -o startup_session=none  sh -c "echo moooo; read"
 7625  ll
 7626  ls
 7627  ~/.local/bin/ki
 7628  ls
 7629  kitty +kitten panel --edge bottom ki&
 7630  kitty +kitten panel --edge bottom --lines=10 ki&
 7631  kitty +kitten panel --edge bottom --lines=10 cat ki
 7632  kitty +kitten panel --edge bottom --lines=10 less ki
 7633  kitty +kitten panel --edge bottom --lines=10 less ki&
 7634  kitty +kitten panel --edge bottom --lines=10 nohup ki&
 7635  jobs
 7636  nohup kitty +kitten panel --edge bottom --lines=10 ki&
 7637  ll
 7638  jobs
 7639  kill %1
 7640  jobs
 7641  killall ki
 7642  kitty +kitten panel --edge bottom --lines=10 lazygit
 7643  kitty +kitten panel --edge bottom --lines=100 lazygit
 7644  kitty +kitten panel --edge bottom --lines=90 lazygit
 7645  kitty +kitten panel --edge bottom --lines=50 lazygit
 7646  kitty +kitten panel --edge bottom --lines=50 ranger
 7647  ranger
 7648  nvim ~/.zshrc
 7649  nvim ~/.config/ranger/rc.conf
 7650  ranger
 7651  exit
 7652  z pictu
 7653  ranger
 7654  nvim ~/.config/ranger/rc.conf
 7655  z pictures
 7656  ranger
 7657  nvim ~/.config/ranger/rc.conf
 7658  ranger
 7659  nvim ~/.config/ranger/rc.conf
 7660  ranger
 7661  z pictures
 7662  ranger
 7663  curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin\n\n
 7664  kitty -v
 7665  sudo curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin\n\n
 7666  kitty -v
 7667  exit
 7668  ranger
 7669  nvim ~/.zshrc
 7670  zsh
 7671  rawnger
 7672  ranger
 7673  z ranger
 7674  z pic
 7675  ranger
 7676  ls
 7677  ll
 7678  ranger
 7679  lla
 7680  ranger
 7681  nvim ~/.wezterm.lua
 7682  z dot
 7683  nvim wezterm/.wezterm.lua
 7684  nvim
 7685  exit
 7686  ls
 7687  z /home/oxhart/Documents/builds/terminalConfigs/.dotfiles
 7688  nvim wezterm/.wezterm.lua
 7689  ls
 7690  nvim ~/.config/dunst/dunstrc
 7691  exit
 7692  z /home/oxhart/Documents/builds/terminalConfigs/.dotfiles 
 7693  nvim wezterm/.wezterm.lua
 7694  cht.sh linux fonts
 7695  cd /etc/fonts
 7696  ls
 7697  cd conf.d
 7698  ls
 7699  cd ~/.local/fonts
 7700  cd ~/.local
 7701  ls
 7702  cd share
 7703  ls
 7704  cd fonts
 7705  ls
 7706  cat all-the-icons.ttf
 7707  ls
 7708  cd ~/.local/share/fonts
 7709  ls
 7710  cat all-the-icons.ttf
 7711  ls
 7712  cd ..
 7713  ls
 7714  sudo find / -iname "*fira*" 2>/dev/null
 7715  killall wine
 7716  ls
 7717  exit
 7718  z /home/oxhart/Documents/builds/terminalConfigs/.dotfiles 
 7719  nvim wezterm/.wezterm.lua
 7720  exit
 7721  z fonts
 7722  ls
 7723  nvim wezterm/.wezterm.lua
 7724  z dt
 7725  z dot
 7726  nvim wezterm/.wezterm.lua
 7727  wezterm ls-fonts --list-system
 7728  wezterm ls-fonts --list-system | grep -ri fira
 7729  wezterm ls-fonts --list-system | grep i fira
 7730  wezterm ls-fonts --list-system | grep -i fira
 7731  nvim wezterm/.wezterm.lua
 7732  ls
 7733  vi
 7734  nvim wezterm/.wezterm.lua
 7735  exit
 7736  nvim wezterm/.wezterm.lua
 7737  vi
 7738  nvim
 7739  z wezterm
 7740  nvim .wezterm.lua
 7741  ll
 7742  ls
 7743  ll
 7744  exit
 7745  ls
 7746  nvim
 7747  kitty + list-fonts --psnames | grep "Fira Code Regular"\n    Fira Code Regular (FiraCode-Regular)
 7748  exit
 7749  ls
 7750  kitty + list-fonts --psnames | grep "Fira Code Regular"\n    Fira Code Regular (FiraCode-Regular)
 7751  nvim
 7752  ll
 7753  >= 
 7754  ls
 7755  ll
 7756  z pic
 7757  ranger
 7758  ls
 7759  nvim ~/.wezterm.lua
 7760  ranger
 7761  z pictures
 7762  ls
 7763  ranger
 7764  nvim ~/.wezterm.lua
 7765  z pic
 7766  ls
 7767  wezterm -h
 7768  wezterm imgcat element.png
 7769  ll
 7770  wezterm imgcat deo.jpg
 7771  ll
 7772  >=
 7773  nvim
 7774  ll
 7775  kitty -h
 7776  kitty -v
 7777  sudo curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin\n\n
 7778  ls
 7779  kitty -v
 7780  neofetch
 7781  neofetch -h
 7782  neofetch --help
 7783  ls
 7784  cd .local
 7785  kitt
 7786  cd kitty.app
 7787  ls
 7788  cd share
 7789  ls
 7790  cd ../
 7791  ls
 7792  cd ../bin
 7793  ls
 7794  whereis kitty
 7795  cd /usr/bin
 7796  ls
 7797  ls *kitty*
 7798  cat kitty
 7799  ls -la kitty
 7800  ls
 7801  sudo pacman -S kitty
 7802  kitty -v
 7803  ll
 7804  sudo pacman -Syyu
 7805  kitty -h
 7806  kitty -v
 7807  ls
 7808  z kitty
 7809  cd 
 7810  ls
 7811  cd .local/bin
 7812  ls
 7813  cd kitty.app
 7814  ls
 7815  cd ..
 7816  ls
 7817  cd kitty.app
 7818  ls
 7819  cd bin
 7820  ls
 7821  ./kitty
 7822  ll
 7823  nvim
 7824  nvim ~/.wezterm.lua
 7825  nohup ./kitty&
 7826  ll
 7827  kitty -v
 7828  ~/.local/kitty.app/bin/kitty&
 7829  ll
 7830  exit
 7831  sl
 7832  ls
 7833  nvim ~/.wezterm.lua
 7834  ls
 7835  bash -c "sensors | grep Tdie | cut -f 10 -d \' \' | cut -c 2-"', 5
 7836  bash -c "sensors | grep temp1"', 15\n
 7837  sensors | grep temp1', 15\n
 7838  sensors | grep temp1, 15\n
 7839  ps aux | grep rsync | grep -v grep
 7840  ps aux | grep kitty | grep -v grep
 7841  ps aux | grep kitty 
 7842  ps aux | grep kitty | grep -v grep
 7843  ps -C "wezterm" -o pid=
 7844  ps -C "kitty" -o pid=
 7845  awesome-client 'awful.widget.watch("ps aux | grep rsync | grep -v grep", 30, function(widget, stdout)\nend'\n
 7846  awesome-client 'awful.widget.watch("ps aux | grep kitty | grep -v grep", 30, function(widget, stdout)\nend'\n
 7847  awesome-client 'awful.widget.watch("ps aux | grep kitty | grep -v grep", 30, function(widget, stdout)\nend)'\n
 7848  awesome-client 'local awful require awful awful.widget.watch("ps aux | grep kitty | grep -v grep", 30, function(widget, stdout)\nend)'\n
 7849  awesome-client 'local awful require awful; awful.widget.watch("ps aux | grep kitty | grep -v grep", 30, function(widget, stdout)\nend)'\n
 7850  awesome-client 'local awful require('awful'); awful.widget.watch("ps aux | grep kitty | grep -v grep", 30, function(widget, stdout)\nend)'\n
 7851  awesome-client 'local awful require('awful'); awful.widget.watch("sh -c 'ps aux | grep kitty | grep -v grep", 30, function(widget, stdout)'\nend)'\n\n
 7852  awesome-client 'local awful require('awful'); awful.widget.watch("sh -c 'ps aux | grep kitty | grep -v grep"', 30, function(widget, stdout)\nend)'\n\n
 7853  awesome-client 'local awful require('awful'); awful.widget.watch("sh -c 'ps aux | grep kitty | grep -v grep'", 30, function(widget, stdout)\nend)'\n\n
 7854  awesome-client 'local awful require('awful'); awful.widget.watch("sh -c [[ ps aux | grep kitty | grep -v grep ]] ", 30, function(widget, stdout)\nend)'\n\n
 7855  awesome-client 'local awful require('awful'); awful.widget.watch([[ sh -c "ps aux | grep kitty | grep -v grep" ]], 30, function(widget, stdout)\nend)'\n\n
 7856  awesome-client 'local awful require('awful'); awful.widget.watch("sh -c 'ps aux | grep kitty | grep -v grep'", 30, function(widget, stdout)\nend)'\n\n
 7857  awesome-client 'local awful require('awful'); awful.widget.watch([[ sh -c "ps aux | grep kitty | grep -v grep" ]], 30, function(widget, stdout)\nend)'\n\n
 7858  awesome-client 'local awful require('awful'); awful.widget.watch([[ sh -c 'ps aux | grep kitty | grep -v grep' ]], 30, function(widget, stdout)\nend)'\n\n
 7859  ll
 7860  awesome-client 'local awful require('awful'); awful.widget.watch([[ sh -c 'ps aux | grep kitty | grep -v grep' ]], 30, function(widget, stdout)\nend)'\n\n
 7861  ls
 7862  z awesome
 7863  ls
 7864  nvim rc
 7865  nvim rc.lua
 7866  z ter
 7867  nvim
 7868  bash -c "sensors | grep temp1"', 15\n\n
 7869  sensors | grep temp1\n\n
 7870  sensors | grep temp2\n\n
 7871  sensors | grep temp1\n\n
 7872  nvim .wezterm.lua
 7873  ls
 7874  /bin/bash ~/.config/volumeicon/restart
 7875  ls
 7876  wezterm show-keys | grep -i move
 7877  wezterm show-keys | grep -i [pane
 7878  wezterm show-keys | grep -i pane
 7879  wezterm show-keys | grep -i swap
 7880  history | grep kitty
 7881  find . -iname "*kitty.conf*" 2>/dev/null | xargs nvim
 7882  find . -name "kitty.conf" 2>/dev/null | xargs nvim
 7883  fg
 7884  ll
 7885  ls
 7886  nvr -s
 7887  find . -name "kitty.conf" 2>/dev/null | xargs nvim
 7888  find . -name "kitty.conf" 2>/dev/null | xargs nvr -l
 7889  find ~ -name "kitty.conf" 2>/dev/null | xargs nvr -l
 7890  exit
 7891  ll
 7892  nvr -s
 7893  exit
 7894  fg
 7895  /bin/bash ~/.config/volumeicon/restart
 7896  nmcli connection show
 7897  /bin/bash ~/.config/volumeicon/restart
 7898  killall nm-applet
 7899  systemctl | grep Net
 7900  sudo systemctl stop NetworkManager.service
 7901  su
 7902  sudo pacman -Rs network-manager-applet
 7903  su
 7904  /bin/bash ~/.config/volumeicon/restart
 7905  sudo systemctl stop NetworkManager.service
 7906  killall nm-applet
 7907  sudo pacman -S network-manager-applet
 7908  /bin/bash ~/.config/volumeicon/restart
 7909  ps -C "picom" -o pid=
 7910  /bin/bash ~/.config/volumeicon/restart
 7911  kill -s kill $(ps -C "volumeicon" -o pid=)
 7912  /bin/bash ~/.config/volumeicon/restart
 7913  jq '.[] | select(.tab_id==2) | .pane_id' $(wezterm cli list --format json)
 7914  jq -r '.name' day.json
 7915  jq -r '.name' ~/scripts/fete/day.json
 7916  find ~ -name "kitty.conf" 2>/dev/null | xargs nvr -l
 7917  ll
 7918  nvr -s
 7919  z dot
 7920  nvr -s awesome
 7921  ls
 7922  /bin/bash ~/.config/volumeicon/restart
 7923  z buil
 7924  ls
 7925  cd ..
 7926  ls
 7927  cd ..
 7928  ls
 7929  git clone https://github.com/Seirdy/term-dmenu.git
 7930  cd term-dmenu
 7931  ls
 7932  ./dmenu-runner
 7933  ./term-dmenu
 7934  sudo pacman -S j4-dmenu-desktoip
 7935  sudo pacman -S j4-dmenu-desktop
 7936  ./term-dmenu
 7937  sudo pacman -S dash
 7938  ./term-dmenu
 7939  ./dmenu-runner
 7940  ./term-dmenu
 7941  dmenu_run
 7942  cd ..
 7943  ln -s $(pwd)/term-dmenu/* $HOME/.local/bin
 7944  term-dmenu
 7945  dmenu-runner
 7946  dmenu-runner&
 7947  ls
 7948  term-dmenu
 7949  term-dmenu&
 7950  jobs
 7951  kill -s kill $(ps -C "dmenu-runner" -o pid=)
 7952  jobs
 7953  kill %4
 7954  term-dmenu
 7955  ls
 7956  kill %1
 7957  ls
 7958  dmenu-runner
 7959  jobs
 7960  ls
 7961  dmenu-runner
 7962  sudo pacman -S j4-dmenu-desktop
 7963  /bin/bash ~/.config/volumeicon/restart
 7964  jobs
 7965  kitty --class=launcher -e $@
 7966  exit
 7967  kitty --class=launcher -e ki
 7968  dmenu-runner
 7969  fzf -e | xargs kitty --class=launcher -e
 7970  exit
 7971  z .local
 7972  fzf -e | xargs kitty --class=launcher -e
 7973  exit
 7974  z bin
 7975  fzf -e | xargs kitty --class=launcher -e
 7976  find ~/.local/bin -name "ki" | xargs kitty --class=launcher -e
 7977  dmenu-runner
 7978  nohup dmenu-runner&
 7979  jobs
 7980  crontab -l
 7981  /bin/bash /home/oxhart/scripts/fete/fete
 7982  jobs
 7983  kill %1
 7984  ls
 7985  z /home/oxhart/Documents/builds/terminalConfigs/.dotfiles/awesome
 7986  nvr -s
 7987  dmenu-runner
 7988  ll
 7989  ls
 7990  exit
 7991  sudo dmenu-runner
 7992  cd ..
 7993  nvr -s
 7994  sudo pacman -Syyu
 7995  ls
 7996  kitty -v
 7997  ranger
 7998  ll
 7999  ls
 8000  z /home/oxhart/Documents/builds/terminalConfigs/.dotfiles/awesome
 8001  nvim rc.lua
 8002  ls
 8003  nvim rc.lua
 8004  ls
 8005  cd ..
 8006  nvim
 8007  ls
 8008  ls *png
 8009  kitty -h
 8010  ranger
 8011  ls
 8012  z pic
 8013  ranger
 8014  ls *.png
 8015  ls
 8016  z pic
 8017  ls *lua
 8018  nvim test.lua
 8019  ranger
 8020  nvim test.lua
 8021  z nvim
 8022  ls
 8023  nvim
 8024  ls
 8025  z dot
 8026  nvim
 8027  ls
 8028  cd tridactyl
 8029  ls
 8030  lla
 8031  nvim .tridactylrc
 8032  cd
 8033  curl -fsSl https://raw.githubusercontent.com/tridactyl/native_messenger/master/installers/install.sh -o /tmp/trinativeinstall.sh && sh /tmp/trinativeinstall.sh 1.23.0
 8034  ls
 8035  cat tridactylrc
 8036  find . -name "native_main" 2>/dev/null/
 8037  find . -name "native_main" 2>/dev/null
 8038  cat .local/share/tridactyl/native_main
 8039  cat /home/oxhart/.local/share/tridactyl/native_main
 8040  z dot
 8041  stow -t ~/.local/share/tridactyl tridactyl
 8042  ll
 8043  nvr -s
 8044  nvr -l ~/Pictures/deoooo.png
 8045  nvr -l ~/Pictures/test.lua
 8046  ls deo*
 8047  ls ~/Pictures/deo*
 8048  nvim test.lua
 8049  exit
 8050  nvr -h
 8051  nvr --serverlist
 8052  nvr --servername kitty
 8053  nvr --serverlist
 8054  ls
 8055  cd
 8056  ls
 8057  z pic
 8058  nvr -h
 8059  nvr test.lua --servername kitty
 8060  nvr -l test.lua
 8061  nvr --servername kitty
 8062  nvr -l test.lua
 8063  nvr -h
 8064  nvr --serverlist
 8065  nvr -l test.lua
 8066  nvr test.lua
 8067  nvr --servername kitty
 8068  nvr --servername /tmp/kitty
 8069  nvr --serverlist
 8070  nvr test.lua
 8071  nvr -l test.lua
 8072  nvr --servername /tmp/kitty test.lua
 8073  nvr -l test.md
 8074  ls
 8075  nvr -l test.md
 8076  ls
 8077  nvr -l image.lua
 8078  nvr -l test.md
 8079  nvr -l test1.md
 8080  z dot
 8081  cd nvim/.config
 8082  ls
 8083  cd nvim
 8084  ls
 8085  nvr -l init.lua
 8086  ls
 8087  nvim test.sh
 8088  ll
 8089  nvr --servername /tmp/kitty test.lua
 8090  ranger
 8091  z dot
 8092  find . -name ".zshrc" 2>/dev/null
 8093  find . -name ".zshrc" 2>/dev/null | xargs nvr -l
 8094  find . -name "rc.conf" 2>/dev/null | xargs nvr -l
 8095  z ranger
 8096  ranger
 8097  z pic
 8098  ranger
 8099  z pic
 8100  nvim
 8101  ranger
 8102  z pic
 8103  ranger
 8104  ls
 8105  nvr test.lua
 8106  nvr test.md
 8107  z awesome
 8108  nvr -r rc.lua
 8109  nvr -l rc.lua
 8110  cd ..
 8111  fzf -e | xargs nvr -l
 8112  (cd nvim/.config/nvim/ fzf -e | xargs nvr -l
 8113  (cd nvim/.config/nvim/) fzf -e | xargs nvr -l
 8114  (cd nvim/.config/nvim/) && fzf -e | xargs nvr -l
 8115  (cd nvim/.config/nvim/ && fzf -e) | xargs nvr -l
 8116  cd nvim/.config/nvim
 8117  fzf -e | xargs nvr -l
 8118  exit
 8119  kill -s kill $(ps -C "volumeicon" -o pid=)
 8120  xprop WM_CLASS
 8121  kill -s kill $(ps -C "volumeicon" -o pid=)
 8122  z volumeicon
 8123  ls
 8124  cd ..
 8125  ls
 8126  cd ..
 8127  ls
 8128  z dot
 8129  ls
 8130  cd volumeicon
 8131  ls
 8132  nvr -l volumeicon
 8133  nvr -l restart
 8134  ps -C "grocaca" -o pid=
 8135  ps -C "volumeicon" -o pid=
 8136  ./restart
 8137  mv restart restart_volumeicon && nvr -l restart_volumeicon
 8138  z volumeicon
 8139  cd ~/.config/volumeicon
 8140  ls
 8141  rm restart
 8142  cd --
 8143  z dot
 8144  cd volumeicon
 8145  ls
 8146  cd ../..
 8147  ls
 8148  cd .dotfiles
 8149  stow -t ~/.config/volumeicon volumeicon
 8150  stow -D volumeicon
 8151  stow -t ~/.config/volumeicon volumeicon
 8152  stow -t ~/.config/volumeicon volumeicon --adopt
 8153  cd ~/.config/volumeicon
 8154  ls
 8155  cd --
 8156  kill -s kill $(ps -C "volumeicon" -o pid=)
 8157  cd -
 8158  pushd ~
 8159  popd ~
 8160  pushd 
 8161  popd
 8162  cd ~/.config
 8163  cd ~/Documents
 8164  cd -
 8165  z dot
 8166  cd -
 8167  dirs -v
 8168  pushd +10
 8169  dirs -v
 8170  pushd +4
 8171  dirs -v
 8172  dirs -h
 8173  dirs --help
 8174  man dirs
 8175  dirs -c
 8176  dirs -v
 8177  z dot
 8178  dirs -v
 8179  popd
 8180  z -h
 8181  z dot
 8182  z config
 8183  dirs -v
 8184  popd -2
 8185  dirs -v
 8186  z nvim
 8187  dirs -v
 8188  popd -3
 8189  popd -2
 8190  dirs -v
 8191  popd
 8192  ls
 8193  dirs -v
 8194  pushd /etc
 8195  pushd /var
 8196  dirs -v
 8197  pushd +2
 8198  dirs -v
 8199  pushd +1
 8200  dirs -v
 8201  popd
 8202  dirs -v
 8203  pushd +1
 8204  popd
 8205  cd
 8206  pushd ~/.config
 8207  pushd /etc
 8208  dirs -v
 8209  cd -
 8210  dirs -v
 8211  cd -
 8212  pushd +3
 8213  dirs -v
 8214  pushd +2
 8215  dirs -v
 8216  pushd +1
 8217  dirs -v
 8218  pushd +1
 8219  cd -
 8220  dirs -v
 8221  pushd +1
 8222  dirs -c
 8223  ls
 8224  dirs -v
 8225  pushd ~/.config
 8226  pushd /etc
 8227  pushd /var
 8228  dirs -v
 8229  pushd +1
 8230  dirs -v
 8231  history
 8232  dirs -v
 8233  pushd +0
 8234  pushd +1
 8235  pushd +0
 8236  pushd +1
 8237  dirs -v
 8238  pushd +1
 8239  dirs -v
 8240  pushd /etc
 8241  pushd /var
 8242  dirs -v
 8243  pushd +1
 8244  dirs -v
 8245  pushd -1
 8246  pushd +1
 8247  pushd ~/Documents
 8248  pushd ~/scripts
 8249  dirs -v
 8250  pushd +4
 8251  dirs -v
 8252  pushd +1
 8253  dirs -v
 8254  pushd +1
 8255  dirs -v
 8256  pushd +3
 8257  dirs -v
 8258  pushd +2
 8259  dirs -v
 8260  pushd +3
 8261  dirs -v
 8262  pushd +2
 8263  dirs -v
 8264  pushd +3
 8265  dirs -v
 8266  pushd +1
 8267  dirs -v
 8268  pushd +1
 8269  dirs -v
 8270  pushd -0
 8271  dirs -v
 8272  pushd -0
 8273  pushd -1
 8274  dirs -v
 8275  pushd -1
 8276  dirs -v
 8277  pushd -2
 8278  dirs -v
 8279  pushd -2
 8280  pushd -1
 8281  pushd +1
 8282  dirs -v
 8283  pushd +0
 8284  dirs -v
 8285  pushd -0
 8286  pushd 1
 8287  pushd ~1
 8288  pushd ~4
 8289  dirs -v
 8290  pushd ~3
 8291  pushd ~4
 8292  pushd -0
 8293  pushd +0
 8294  pushd ~4
 8295  popd
 8296  bash
 8297  pushd -0
 8298  pushd +3
 8299  pushd +1
 8300  pushd +0
 8301  popd
 8302  sudo pacman -Syyu
 8303  ls
 8304  exi
 8305  exit
 8306  nvim
 8307  pushd dot
 8308  dirs -v
 8309  z dot
 8310  dirs -v
 8311  popd
 8312  ll
 8313  nvim ~/.zshrc
 8314  zsh
 8315  zz
 8316  dirs -v
 8317  zsh
 8318  zz
 8319  dirs -v
 8320  zz dot
 8321  dirs -v
 8322  popd
 8323  ls
 8324  ll
 8325  z awesome
 8326  dirs -v
 8327  nvim
 8328  ls
 8329  cd net_widgets
 8330  ls
 8331  nvim
 8332  z awesome
 8333  nvim
 8334  logout
 8335  z awesome
 8336  nvim
 8337  ls -l /proc/$(pidof awesome)/fd/2
 8338  nvim ~/.xinitrc
 8339  ls
 8340  sudo systemctl stop gdm.service
 8341  pushd /etc/pacman.d/mirrorlist
 8342  pushd /etc/pacman.d/
 8343  ls
 8344  nvim mirrorlist
 8345  sudo pacman -Syyuu
 8346  nvim mirrorlist
 8347  ls
 8348  history
 8349  pushd /etc/pacman.d/
 8350  nvim mirrorlist
 8351  sudo pacman -Syyuu
 8352  nvim 
 8353  nvim ~/.xinitrc
 8354  startx
 8355  start xorg
 8356  startxorg
 8357  history xorg
 8358  history | grep xorg
 8359  z dot
 8360  ls
 8361  mv awesome/rc.lua rc.lua.bak
 8362  cp /etc/xdg/awesome/rc.lua ~/.config/awesome
 8363  rm /home/oxhart/.config/awesome/rc.lua
 8364  cp /etc/xdg/awesome/rc.lua ~/.config/awesome
 8365  ls
 8366  nvim ~/.xinitrc
 8367  ls
 8368  z awesome
 8369  ls
 8370  ls -la
 8371  cd my_modules
 8372  ls
 8373  z ~/.config/awesome
 8374  ls
 8375  popd
 8376  ls
 8377  popd
 8378  ls
 8379  history
 8380  cd ..
 8381  ls
 8382  cd ..
 8383  ls
 8384  cd dot
 8385  s
 8386  ls
 8387  cd .dotfiles
 8388  ls
 8389  mv rc.lua.bak awesome
 8390  ls
 8391  cd awesome
 8392  nvim
 8393  ls
 8394  cp ~/.config/awesome/rc.lua ~/.config/awesome/rc.lua.bak
 8395  z dot
 8396  cp awesome/rc.lua.bak ~/.config/awesome/rc.lua
 8397  ls
 8398  z awesome
 8399  ls
 8400  nvim rc.lua.bak
 8401  startx
 8402  sudo pacman -S xorg-xinit
 8403  startx
 8404  sudo systemctl stop gdm.service
 8405  sudo systemctl disable gdm.service
 8406  sudo systemctl enable sddm.service
 8407  sudo systemctl disable gdm.service
 8408  sudo systemctl enable sddm.service
 8409  sudo systemctl stop gdm.service
 8410  getty@tty2.service
 8411  sudo systemctl getty@tty2.service
 8412  nvim /etc/default/grub
 8413  sudo grub-mkconfig -o /boot/grub/grub.cfg
 8414  reboot
 8415  nvim /etc/default/grub
 8416  sudo grub-mkconfig -o /boot/grub/grub.cfg
 8417  nvim /etc/default/grub
 8418  reboot
 8419  nvim /etc/default/grub
 8420  ls
 8421  sudo grub-mkconfig -o /boot/grub/grub.cfg
 8422  sudo mkinitcpio -p linux
 8423  nvim /etc/default/grub
 8424  reboot
 8425  nvim /etc/default/grub
 8426  history | grep mir
 8427  pushd /etc/pacman.d/
 8428  nvim mirrorlist
 8429  su
 8430  ls
 8431  sudo mkinitcpio -p linux
 8432  journalctl -b | grep cron
 8433  journalctl -b | 
 8434  journalctl -b
 8435  ls
 8436  nvim /etc/default/grub
 8437  sudo grub-mkconfig -o /boot/grub/grub.cfg
 8438  sudo mkinitcpio -p linux
 8439  reboot
 8440  ls
 8441  nvim /etc/default/grub
 8442  sudo systemctl stop gdm.service
 8443  sudo systemctl stop sddm.service
 8444  ls
 8445  journalctl -b
 8446  ls
 8447  z dot
 8448  nvim awesome/rc.lua.bak
 8449  ls
 8450  pushd ~/.config/awesome
 8451  ls
 8452  mv rm rc.lua
 8453  rm rc.lua
 8454  mv rc.lua.bak rc.lua
 8455  sudo grub-mkconfig -o /boot/grub/grub.cfg
 8456  sudo mkinitcpio -p linux
 8457  reboot
 8458  ls
 8459  z awesome
 8460  nvim awesome/rc.lua.bak
 8461  ls
 8462  nvim ~/.config/awesome/rc.lua
 8463  logout
 8464  z awesome
 8465  nvim ~/.config/awesome/rc.lua
 8466  volumeicon&
 8467  exit
 8468  nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }"
 8469  ls
 8470  z awesome
 8471  nvim ~/.config/awesome/rc.lua
 8472  nvim /etc/default/grub
 8473  sudo grub-mkconfig -o /boot/grub/grub.cfg
 8474  sudo mkinitcpio -p linux
 8475  reboot
 8476  nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }"
 8477  nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = Of }"
 8478  nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = Off }"
 8479  ls
 8480  xrandr
 8481  htop
 8482  ll
 8483  nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 {rotation=left}"
 8484  nvidia-settings --assign CurrentMetaMode="nvidia-auto-select +0+0 { ForceFullCompositionPipeline = On }"
 8485  nvidia-settings --assign CurrentMetaMode="DP-0 +0+0 { ForceFullCompositionPipeline = On }"
 8486  xrandr
 8487  nvidia-settings --assign CurrentMetaMode="DP-0: +0+0 { ForceFullCompositionPipeline = On }"
 8488  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8489  ls
 8490  nvim
 8491  nvim ~/.config/awesome/rc.lua
 8492  exit
 8493  ls
 8494  exit
 8495  nvim
 8496  cd doudou
 8497  ls
 8498  cd doudou
 8499  ls
 8500  cat passwd
 8501  nvr -s ~/.config/awesome/rc.lua
 8502  z dot
 8503  pushd awesome
 8504  ls
 8505  dirs -v
 8506  pushd ~2
 8507  dirs -v
 8508  pushd -1
 8509  cd my_modules
 8510  dirs -v
 8511  popd -1
 8512  dirs -v
 8513  popd -1
 8514  ls
 8515  nvr -l toggle_all_tags.lua
 8516  bt
 8517  ls
 8518  z pic
 8519  ranger
 8520  term-dmenu
 8521  ls
 8522  ll
 8523  ls
 8524  nvim
 8525  ll
 8526  ls
 8527  l
 8528  ll
 8529  ls
 8530  ranger
 8531  ls
 8532  z awesome
 8533  z config
 8534  popd
 8535  pushd ~/.config/awesome
 8536  nvim rc.lua
 8537  ls
 8538  z awesome
 8539  ls
 8540  popd
 8541  cd ~/.config/awesome
 8542  ls
 8543  z awesome
 8544  ls
 8545  mv rc.lua ~/Documents/builds/terminalConfigs/.dotfiles/awesome
 8546  ls
 8547  cd ..
 8548  stow -t ~/.config/awesome awesome
 8549  ls
 8550  ll
 8551  find ~ -name "kitty.conf" 2>/dev/null | xargs nvr -l
 8552  nvr -s
 8553  ls
 8554  ls ~/tridactylrc
 8555  ls tridactylrc
 8556  ls
 8557  cat tridactylrc
 8558  cat .tridactylrc
 8559  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8560  exit
 8561  l
 8562  z tuto
 8563  ls
 8564  nvim sync
 8565  cd basics
 8566  ls
 8567  nvim app.js
 8568  cd ..
 8569  ls
 8570  .. 
 8571  cd tutoReact
 8572  l;s
 8573  cd recette
 8574  ls
 8575  cd front
 8576  ls
 8577  dirs -v
 8578  popd -3
 8579  ls
 8580  nvim index.html
 8581  cd src
 8582  ls
 8583  nvim index.jsx
 8584  ls
 8585  find ~ -name "kitty.conf" 2>/dev/null | xargs nvr -l
 8586  kitty + list-fonts --psnames | grep "Fira Code Regular"\n    Fira Code Regular (FiraCode-Regular)
 8587  ls
 8588  nvim index.jsx
 8589  ls
 8590  nvim
 8591  exit
 8592  nvim
 8593  ls
 8594  nvim
 8595  exit
 8596  kitty --config=NONE -o 'font_family Fira Code' -o 'font_features FiraCode-Regular +cv01 +cv06' -o font_size=24 --debug-font-fallback\n\nYou must be logged in to vote\n4 replies\n@zzhaolei\nComment options\nzzhaolei\nDec 3, 2021\nAuthor\n\nThis one doesn't work for me.\n\nkitty version: 0.23.1\nmacOS version: macOS Monterey 12.0.1\nFira Code font: v6\n\noutput log:\n\n[337 14:10:51.795283] Preloaded font faces:\n[337 14:10:51.795316] normal face: /Users/zzhaolei/Library/Fonts/FiraCode-VF.ttf\n[337 14:10:51.795328] bold face: /Users/zzhaolei/Library/Fonts/FiraCode-VF.ttf\n[337 14:10:51.795338] italic face: /Users/zzhaolei/Library/Fonts/FiraCode-VF.ttf\n[337 14:10:51.795348] bi face: /Users/zzhaolei/Library/Fonts/FiraCode-VF.ttf\nU+276f bold Face(family=Menlo, full_name=Menlo Regular, postscript_name=Menlo-Regular, path=/System/Library/Fonts/Menlo.ttc, units_per_em=2048, ascent=22.3, descent=5.7, leading=0.0, point_sz=0.0, scaled_point_sz=24.0, underline_position=-1.5 underline_thickness=1.1) (new face)\n\n@zzhaolei\nComment options\nzzhaolei\nDec 3, 2021\nAuthor\n\nThis is working fine:\n\nkitty --config=NONE -o 'font_family Fira Code' -o 'font_features FiraCodeRoman-Regular +cv01 +cv06' -o font_size=24 --debug-font-fallback\n\n@page-down\nComment options\npage-down\nDec 3, 2021\n\nI have static fonts installed on macOS, no wonder they work fine. The PostScript name of the variable font is not even the same as the static font.\n\nkitty +list-fonts --psnames | grep Fira\n\nmacOS\n\n# static font: FiraCode-Regular.ttf, FiraCode-Bold.ttf, ...\nFira Code\n    Fira Code Bold (FiraCode-Bold)\n    Fira Code Light (FiraCode-Light)\n    Fira Code Medium (FiraCode-Medium)\n    Fira Code Regular (FiraCode-Regular)\n    Fira Code Retina (FiraCode-Retina)\n    Fira Code SemiBold (FiraCode-SemiBold)\n\n# variable font: FiraCode-VF.ttf\nFira Code\n    Fira Code Bold (FiraCodeRoman-Bold)\n    Fira Code Light (FiraCode-Light)\n    Fira Code Medium (FiraCodeRoman-Medium)\n    Fira Code Regular (FiraCodeRoman-Regular)\n    Fira Code SemiBold (FiraCodeRoman-SemiBold)\n\nSeveral font weights are invalid under Linux. Even if these are from the exact same TTF files. Does this seem to be an issue with the font itself?\n\nLinux\n\n# static font: FiraCode-Regular.ttf, FiraCode-Bold.ttf, ...\nFira Code\n    Fira Code Bold (FiraCode-Bold)\n    Fira Code Light (FiraCode-Light)\n\n# variable font: FiraCode-VF.ttf\nFira Code\n    Fira Code Light ()\n    Fira Code Light (FiraCodeRoman_700wght)\n    Fira Code Light (FiraCode-Light)\n\n@zzhaolei\nComment options\nzzhaolei\nDec 3, 2021\nAuthor\n\nI guess, yes.\nAnswer selected by zzhaolei\nComment options\nzzhaolei\nDec 3, 2021\nAuthor\n\nNow, this issue has been solved for me.\n\nThank you.\nYou must be logged in to vote\n0 replies\nto join this conversation on GitHub. Already have an account? Sign in to comment\nCategory\npray\nQ&A\nLabels\nNone yet\n2 participants\n@zzhaolei\n@page-down\n\n
 8597  kitty --config=NONE -o 'font_family Fira Code' -o 'font_features FiraCode-Regular +cv01 +cv06 +ss08' -o font_size=24 --debug-font-fallback
 8598  nvim
 8599  exit
 8600  kitty --config=NONE -o 'font_family Fira Code' -o 'font_features FiraCode-Regular +cv01 +cv06 +ss08 +ss02' -o font_size=24 --debug-font-fallback
 8601  ls
 8602  nvim
 8603  exit
 8604  ls
 8605  ll
 8606  exit
 8607  ls
 8608  kitty --debug-font-fallback
 8609  llll
 8610  ls
 8611  kitty list-fonts
 8612  ls
 8613  >= ls
 8614  <= ll
 8615  nvim test
 8616  exit
 8617  ls
 8618  exit
 8619  kitty list-fonts
 8620  kitty --debug-font-fallback
 8621  llllllls
 8622  ls
 8623  kitty --debug-font-fallback
 8624  ls
 8625  FiraCodeNerdFontComplet-Regular
 8626  ls
 8627  ll
 8628  ls
 8629  nvim
 8630  exit
 8631  nvim
 8632  exit
 8633  history | grep nerd
 8634  ls
 8635  exit
 8636  ls
 8637  ?02
 8638  >= 
 8639  exit
 8640  find ~/Documents/builds/terminalConfigs -iname "*settings*" | xargs nvr -l
 8641  nvr -s
 8642  find ~/Documents/builds/terminalConfigs -iname "*keybinding*" | xargs nvr -l
 8643  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8644  man stow
 8645  stow -h
 8646  find ~/Documents/builds/terminalConfigs -name "keybindings.lua" | xargs nvr -l
 8647  exit
 8648  find ~/Documents/builds/terminalConfigs -name "keybindings.lua" | xargs nvr -l
 8649  awesome-client 'naughty.notify {\n    text = "Notification List:",\n    title = "Notifications",\n    timeout = 5,\n    position = "top_right",\n    screen = screen[1],\n    width = 300,\n    font = "Monospace 14",\n    icon = "/path/to/icon.png",\n    fg = "#ffffff",\n    bg = "#000000",\n    border_color = "#777777",\n    border_width = 2,\n    ontop = true,\n    shape = gears.shape.rounded_rect\n}\n'
 8650  awesome-client 'local naughty = require('naughty');naughty.notify {\n    text = "Notification List:",\n    title = "Notifications",\n    timeout = 5,\n    position = "top_right",\n    screen = screen[1],\n    width = 300,\n    font = "Monospace 14",\n    icon = "/path/to/icon.png",\n    fg = "#ffffff",\n    bg = "#000000",\n    border_color = "#777777",\n    border_width = 2,\n    ontop = true,\n    shape = gears.shape.rounded_rect\n}\n'
 8651  awesome-client 'local naughty = require('naughty'); naughty.notify {\n    text = "Notification List:",\n    title = "Notifications",\n    timeout = 5,\n    position = "top_right",\n    screen = screen[1],\n    width = 300,\n    font = "Monospace 14",\n    icon = "/path/to/icon.png",\n    fg = "#ffffff",\n    bg = "#000000",\n    border_color = "#777777",\n    border_width = 2,\n    ontop = true,\n    shape = gears.shape.rounded_rect\n}\n'
 8652  awesome-client 'local naughty = require("naughty"); naughty.notify {\n    text = "Notification List:",\n    title = "Notifications",\n    timeout = 5,\n    position = "top_right",\n    screen = screen[1],\n    width = 300,\n    font = "Monospace 14",\n    icon = "/path/to/icon.png",\n    fg = "#ffffff",\n    bg = "#000000",\n    border_color = "#777777",\n    border_width = 2,\n    ontop = true,\n    shape = gears.shape.rounded_rect\n}\n'
 8653  awesome-client 'local naughty = require("naughty");  local gears = require ("gears"); naughty.notify {\n    text = "Notification List:",\n    title = "Notifications",\n    timeout = 5,\n    position = "top_right",\n    screen = screen[1],\n    width = 300,\n    font = "Monospace 14",\n    icon = "/path/to/icon.png",\n    fg = "#ffffff",\n    bg = "#000000",\n    border_color = "#777777",\n    border_width = 2,\n    ontop = true,\n    shape = gears.shape.rounded_rect\n}\n'
 8654  awesome-client 'local naughty = require("naughty") naughty.notify{text='test'}'\n
 8655  awesome-client 'local naughty = require("naughty") naughty.notify{text="SALE PUTE"}'\n
 8656  awesome-client 'local naughty = require("naughty") naughty.notify{text=naughty.active}'\n
 8657  awesome-client 'local naughty = require("naughty") naughty.notify{text=naughty.active.title}'\n
 8658  awesome-client 'local naughty = require("naughty") print(naughty.active)'\n
 8659  awesome-client 'local naughty = require("naughty") print(naughty.active.title)'\n
 8660  awesome-client 'local naughty = require("naughty") naughty.notify{text=naughty.active.title}'\n
 8661  awesome-client 'local naughty = require("naughty") naughty.notify{text="SALE PUTE"}'\n
 8662  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite, timeout=0}'\n
 8663  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=0}'\n
 8664  z awesome
 8665  ls
 8666  nvim rc.lua.bak
 8667  awesome-client 'local naughty = require("naughty") for i,9 do naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8668  awesome-client 'local naughty = require("naughty") for i,9 do; naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8669  awesome-client 'local naughty = require("naughty"); for i,9 do; naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8670  awesome-client 'local naughty = require("naughty"); for 1,9 do; naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8671  awesome-client 'local naughty = require("naughty"); for 1,9 do naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8672  awesome-client 'local naughty = require("naughty"); for i=1,9 do naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8673  exit
 8674  eixt
 8675  7;10u
 8676  nvim
 8677  nvr -s
 8678  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8679  awesome-client 'local naughty = require("naughty"); for i=1,9 do naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8680  ls
 8681  nvr -s
 8682  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8683  lynx 
 8684  lynx www.google.fr
 8685  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8686  find ~/Documents/builds/terminalConfigs -name "theme.lua" | xargs nvr -l
 8687  bash
 8688  find ~/Documents/builds/terminalConfigs -name "statusbar.lua" | xargs nvr -l
 8689  find ~/Documents/builds/terminalConfigs -iname "statusbar.lua" | xargs nvr -l
 8690  z awesome
 8691  ls
 8692  cd my_modules
 8693  ls
 8694  cat statusbar.lua
 8695  ls
 8696  z awesome
 8697  nvr -l
 8698  nvr
 8699  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8700  ls
 8701  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8702  awesome-client 'local naughty = require("naughty"); for i=1,9 do naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8703  z awesome;nvr
 8704  awesome-client 'local naughty = require("naughty"); for i=1,9 do naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=1}end'\n
 8705  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite, timeout=0}'\n
 8706  awesome-client 'awesome.quit()'
 8707  ls
 8708  z awesome;nvr rc.lua
 8709  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite, timeout=0}'\n
 8710  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=0}'\n
 8711  ls
 8712  nvim ~/.zshrc
 8713  zsh
 8714  sshe
 8715  zsh
 8716  ls
 8717  z awesome;nvr rc.lua
 8718  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8719  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=3}'\n
 8720  z awesome;nvr rc.lua
 8721  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=3}'\n
 8722  awesome-client 'local gears = require("gears"); gears.debug.print_warning("YE NA PLEIN")"'
 8723  awesome-client 'local gears = require("gears"); gears.debug.print_warning("YE NA PLEIN")'
 8724  awesome-client 'local gears = require("gears"); gears.debug.print_error("YE NA PLEIN")'
 8725  awesome-client 'local gears = require("gears"); gears.debug.dump("YE NA PLEIN")'
 8726  awesome-client 'local gears = require("gears"); gears.debug.dump("YE NA PLEIN",2)'
 8727  awesome-client 'local gears = require("gears"); gears.debug.dump("YE NA PLEIN",1)'
 8728  awesome-client 'local gears = require("gears"); gears.debug.dump("YE NA PLEIN",0)'
 8729  awesome-client 'local gears = require("gears"); gears.debug.dump_return("YE NA PLEIN",0)'
 8730  awesome-client 'local gears = require("gears"); gears.debug.dump_return("YE NA PLEIN")'
 8731  awesome-client 'local gears = require("gears"); return gears.debug.dump_return("YE NA PLEIN")'
 8732  awesome-client 'local gears = require("gears"); return gears.debug.dump("YE NA PLEIN",0)'
 8733  nvim debug
 8734  nvr -l debug
 8735  chmod u+x debug
 8736  ./debug
 8737  reboot
 8738  ll
 8739  ls
 8740  z awesome
 8741  ./debug
 8742  nvim debug
 8743  ./debug
 8744  ls
 8745  z awesome
 8746  nvim debug
 8747  ./debug
 8748  ls
 8749  ./debug
 8750  cat debug
 8751  mv debug bugd
 8752  ./bugd
 8753  /bin/bash bugd
 8754  awesome-client 'local gears = require("gears"); return gears.debug.dump_return("YE NA PLEIN")'
 8755  awesome-client 'local gears = require("gears"); local naughty = require("naughty"); naughty.connect_signal("added", function(notification) return gears.debug.dump_return(tostring(notification.title)end); naughty.notification{title="debug", message="MEGA TEST"}'
 8756  awesome-client 'local gears = require("gears"); local naughty = require("naughty"); naughty.connect_signal("added", function(notification); return gears.debug.dump_return(tostring(notification.title)end); naughty.notification{title="debug", message="MEGA TEST"}'
 8757  awesome-client 'local gears = require("gears"); local naughty = require("naughty"); naughty.connect_signal("added", function(notification) return gears.debug.dump_return(tostring(notification.title);end); naughty.notification{title="debug", message="MEGA TEST"}'
 8758  awesome-client 'local gears = require("gears"); local naughty = require("naughty"); naughty.connect_signal("added", function(notification) return gears.debug.dump_return(tostring(notification.title)end); naughty.notification{title="debug", message="MEGA TEST"}'
 8759  awesome-client 'local gears = require("gears"); local naughty = require("naughty"); naughty.connect_signal("added", function(notification) return gears.debug.dump_return(tostring(notification.title)end); naughty.notification{title="debug", message="MEGA TEST", timeout=3}'
 8760  /bin/bash bugd
 8761  awesome-client 'local gears = require("gears"); local naughty = require("naughty"); naughty.connect_signal("added", function(notification) return gears.debug.dump_return(tostring(notification.title)end) naughty.notification{title="debug", message="MEGA TEST", timeout=3}'
 8762  awesome-client 'local gears = require("gears"); local naughty = require("naughty"); naughty.connect_signal("added", function(notification) return gears.debug.dump_return(tostring(notification.title))end) naughty.notification{title="debug", message="MEGA TEST", timeout=3}'
 8763  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite, timeout=3}'\n
 8764  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="suce ma bite", timeout=3}'\n
 8765  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="test", timeout=3}'\n
 8766  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="tests", timeout=3}'\n
 8767  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="test", timeout=3}'\n
 8768  awesome-client 'local naughty = require("naughty") naughty.notification{title="SALE PUTE", message="tests", timeout=3}'\n
 8769  awesome-client 'local naughty = require("naughty") naughty.notification{title="debug", message="tests", timeout=3}'\n
 8770  awesome-client 'local naughty = require("naughty") naughty.notification{title="debugs", message="tests", timeout=3}'\n
 8771  awesome-client 'local naughty = require("naughty") naughty.notification{title="debug", message="tests", timeout=3}'\n
 8772  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8773  z awesome
 8774  ls
 8775  nvr -s rc.lua
 8776  awesome-client 'local naughty = require("naughty") naughty.notification{title="debug", message="tests", timeout=3}'\n
 8777  /bin/bash $HOME/scripts/fete/fete
 8778  ll
 8779  exit
 8780  sudo pacman -Syyuu
 8781  nvr -s 
 8782  ls
 8783  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l'
 8784  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8785  nvr -s
 8786  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l\
 8787  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8788  z lebonmot
 8789  ls
 8790  cd ../mongo_docker
 8791  ls
 8792  docker compose up
 8793  sudo docker compose up
 8794  luarocks install gobo-awesome-bluetooth
 8795  sudo pacman -Sy luarocks
 8796  luarocks install gobo-awesome-bluetooth
 8797  sudo luarocks install gobo-awesome-bluetooth
 8798  nvr -s
 8799  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8800  luarocks uninstall gobo-awesome-bluetooth
 8801  luarocks remove gobo-awesome-bluetooth
 8802  sudo luarocks remove gobo-awesome-bluetooth
 8803  nvr -s
 8804  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8805  sudo pacman -S bluez
 8806  sudo pacman -S bluez-utils
 8807  sudo systemctl start bluetooth.service
 8808  nvr -s
 8809  find ~/Documents/builds/terminalConfigs -name "rc.lua" | xargs nvr -l
 8810  sudo luarocks install gobo-awesome-bluetooth
 8811  sudo systemctl start bluetooth.service
 8812  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8813  ll
 8814  ls
 8815  z ter
 8816  ls
 8817  cd ..
 8818  ls
 8819  git statu
 8820  git status
 8821  git commit -am "bluetooth management, begining of notifications handling for awesomewm"
 8822  git push origin master
 8823  ls
 8824  git branch master
 8825  git checkout master
 8826  git merge wezterm_layouting
 8827  git status
 8828  git add --all
 8829  git status
 8830  git commit -am "useless commit, will dissapear after a rebase"
 8831  git push origin master
 8832  git status
 8833  exit
 8834  ls
 8835  z awesome
 8836  nvr -s
 8837  ip show
 8838  ip link show
 8839  lspci -k
 8840  lspci -k | grep -i network
 8841  ip link set interface up
 8842  ip link set interface down
 8843  ip link set wlp8s0 up
 8844  sudo ip link set wlp8s0 up
 8845  sudo rfkill unblock wifi
 8846  sudo ip link set wlp8s0 up
 8847  dmesg | grep firmware
 8848  sudo dmesg | grep firmware
 8849  iw 
 8850  sudo pacman -S wpa_supplicant 
 8851  nvim /etc/wpa_supplicant/wpa_supplicant.conf
 8852  wpa_supplicant -B -i interface -c /etc/wpa_supplicant/wpa_supplicant.conf
 8853  sudo wpa_supplicant -B -i interface -c /etc/wpa_supplicant/wpa_supplicant.conf
 8854  wpa-cli
 8855  wpa_cli
 8856  nvim /etc/wpa_supplicant/wpa_supplicant.conf
 8857  wpa_supplicant -B -i interface -c /etc/wpa_supplicant/wpa_supplicant.conf
 8858  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8859  sudo dmesg | grep iwlwifi
 8860  wpa_supplicant -B -i interface -c /etc/wpa_supplicant/wpa_supplicant.conf
 8861  nvim /etc/wpa_supplicant/wpa_supplicant.conf
 8862  wpa_supplicant -B -i interface -c /etc/wpa_supplicant/wpa_supplicant.conf
 8863  nvim /etc/wpa_supplicant/wpa_supplicant.conf
 8864  wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 8865  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 8866  wpa-cli
 8867  wpa_cli
 8868  sudo wpa_cli
 8869  wpa_passphrase Hiden @wifi3799
 8870  wpa_supplicant -B -i wlp8s0 -c <(487Y0ush4llN0tp4ss687 Hiden @wifi3799)
 8871  sudo wpa_supplicant -B -i wlp8s0 -c <(487Y0ush4llN0tp4ss687 Hiden @wifi3799)
 8872  su
 8873  sudo wpa_supplicant -B -i interface -c /etc/wpa_supplicant/hiden.conf
 8874  sudo nvim /etc/wpa_supplicant/hiden.conf
 8875  sudo wpa_supplicant -B -i interface -c /etc/wpa_supplicant/hiden.conf
 8876  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8877  sudo nvim /etc/wpa_supplicant/hiden.conf
 8878  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8879  sudo nvim /etc/wpa_supplicant/hiden.conf
 8880  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8881  sudo rm /run/wpa_supplicant/wlp8s0
 8882  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8883  sudo rm /run/wpa_supplicant/wlp8s0
 8884  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8885  dhcpcd wlp8s0
 8886  ip address add address/prefix_len broadcast + dev wlp8s0
 8887  sudo ip address add address/prefix_len broadcast + dev wlp8s0
 8888  ip address show
 8889  sudo ip address add 192.168.0.80/prefix_len broadcast + dev wlp8s0
 8890  sudo ip address add 192.168.0.80/24/prefix_len broadcast + dev wlp8s0
 8891  sudo ip address add 192.168.0.80/24 broadcast + dev wlp8s0
 8892  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8893  sudo rm /run/wpa_supplicant/wlp8s0
 8894  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8895  sudo ip address add 192.168.0.80/24 broadcast + dev wlp8s0
 8896  sudo ip adress del 192.168.0.80/24 dev wlp8s0
 8897  sudo ip address del 192.168.0.80/24 dev wlp8s0
 8898  sudo pacman -S dhcpcd
 8899  dhcpcd wlp8s0
 8900  sudo dhcpcd wlp8s0
 8901  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8902  sudo rm /run/wpa_supplicant/wlp8s0
 8903  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8904  sudo dhcpcd wlp8s0
 8905  sudo wpa_supplicant -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8906  sudo rm /run/wpa_supplicant/wlp8s0
 8907  sudo wpa_supplicant -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8908  sudo dhcpcd wlp8s0
 8909  sudo ip address add 192.168.0.80/24 broadcast + dev wlp8s0
 8910  sudo rm /run/wpa_supplicant/wlp8s0
 8911  sudo ip adress del 192.168.0.80/24 dev wlp8s0
 8912  sudo ip address del 192.168.0.80/24 dev wlp8s0
 8913  sudo ip address add 192.168.0.80/24 broadcast + dev wlp8s0
 8914  sudo ip address del 192.168.0.80/24 dev wlp8s0
 8915  sudo ip address add 192.168.0.2o2/24 broadcast + dev wlp8s0
 8916  sudo ip address del 192.168.0.80/24 dev wlp8s0
 8917  sudo ip address del 192.168.0.202/24 dev wlp8s0
 8918  sudo ip address add 192.168.0.2o3/24 broadcast + dev wlp8s0
 8919  sudo ip address add 192.168.0.80/24 broadcast + dev wlp8s0
 8920  ls
 8921  sudo wpa_supplicant -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8922  sudo dhcpcd
 8923  sudo dhcpcd enp6s0
 8924  sudo dhcpcd wlp8s0
 8925  sudo wpa_supplicant -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8926  sudo rm /run/wpa_supplicant/wlp8s0
 8927  sudo ip adress del 192.168.0.80/24 dev wlp8s0
 8928  sudo ip address del 192.168.0.80/24 dev wlp8s0
 8929  sudo dhcpcd wlp8s0
 8930  sudo ip address add 192.168.0.80/24 broadcast + dev wlp8s0
 8931  sudo dhcpcd wlp8s0
 8932  sudo wpa_supplicant -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8933  sudo dhcpcd wlp8s0
 8934  sudo ip link wlp8so up
 8935  sudo ip link wlp8s0 up
 8936  sudo ip link set wlp8s0 up
 8937  sudo rfkill unblock wifi
 8938  sudo ip link set wlp8s0 up
 8939  sudo wpa_supplicant -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8940  sudo dhcpcd wlp8s0
 8941  sudo wpa_supplicant -i -B wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8942  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8943  sudo dhcpcd wlp8s0
 8944  sudo dhcpcd enp6s0\
 8945  sudo dhcpcd enp6s0
 8946  sudo dhcpcd wlp8s0
 8947  ip link
 8948  sudo dhcpcd wlp8s0
 8949  sudo ip address del 192.168.0.80/24 dev wlp8s0
 8950  sudo ip address add 192.168.0.230/24 broadcast + dev wlp8s0
 8951  sudo dhcpcd wlp8s0
 8952  ip adress wlp8s0
 8953  ip address wlp8s0
 8954  sudo rm /run/wpa_supplicant/wlp8s0
 8955  wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 8956  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 8957  wpa
 8958  sudo wpa_cli
 8959  nvim /etc/wpa_supplicant/hiden.conf
 8960  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8961  sudo rm /run/wpa_supplicant/wlp8s0
 8962  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8963  sudo rm /run/wpa_supplicant/wlp8s0
 8964  nvim /etc/wpa_supplicant/hiden.conf
 8965  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 8966  sudo dhcpcd wlp8s0
 8967  ll
 8968  cd /dev
 8969  ls
 8970  lsblk
 8971  mount /dev/sdf /mnt
 8972  sudo mount /dev/sdf /mnt
 8973  ls
 8974  cd /mnt
 8975  ls
 8976  cd usb
 8977  ls
 8978  cd ..
 8979  ls
 8980  cd /run/media/oxhart/PATOU\ DOME
 8981  ls
 8982  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 8983  syslinux 
 8984  sudo pacman -S syslinux
 8985  syslinux 
 8986  ls
 8987  mkdir -p boot/syslinux 
 8988  cp ~/Downloads/ipxe-arch.7db2ebf431ea.lkrn boot/ipxe.lkrn
 8989  nvim boot/syslinux/syslinux.cfg
 8990  umount /mnt
 8991  umount /run/media/oxhart/PATOU\ DOME
 8992  sudo umount /run/media/oxhart/PATOU\ DOME
 8993  dd bs=440 count=1 conv=notrunc if=/usr/lib/syslinux/bios/mbr.bin of=/dev/sdf
 8994  sudo dd bs=440 count=1 conv=notrunc if=/usr/lib/syslinux/bios/mbr.bin of=/dev/sdf
 8995  syslinux --directory /boot/syslinux/ --install /dev/sdf1
 8996  sudo syslinux --directory /boot/syslinux/ --install /dev/sdf1
 8997  ls
 8998  cd boot
 8999  ls
 9000  cd syslinux
 9001  ls
 9002  cd ./..
 9003  ls
 9004  cd ..
 9005  ls
 9006  cd ..
 9007  ls
 9008  cd
 9009  nvim arch
 9010  chmod u+x arch
 9011  ./arch
 9012  kill -s kill $(ps -C "wpa" -o pid=)
 9013  ps aux | grep wpa
 9014  kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9015  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9016  sudo wpa_cli
 9017  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 9018  sudo wpa_cli
 9019  sudo dhcpcd wlp8s0
 9020  dhcpcd
 9021  sudo dhcpcd
 9022  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 9023  sudo rm /run/wpa_supplicant/wlp8s0
 9024  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 9025  ls
 9026  ping www.google.fr
 9027  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 9028  sudo wpa_cli
 9029  sudo dhpcd
 9030  sudo dhcpcd
 9031  dhcpcd
 9032  sudo dhcpcd
 9033  sudo dhcpcd -h
 9034  sudo dhcpcd wlp8s0
 9035  sudo dhcpcd wlp8s0 -v
 9036  sudo dhcpcd -x wlp8s0
 9037  ls
 9038  cd Downloads
 9039  ls
 9040  ls arch
 9041  ls *arch*
 9042  lsblk
 9043  dd bs=4M if=archlinux32-2021.02.25-i686.iso of=/dev/sdd conv=fsync oflag=direct status=progress
 9044  sudo dd bs=4M if=archlinux32-2021.02.25-i686.iso of=/dev/sdd conv=fsync oflag=direct status=progress
 9045  ls
 9046  rm archlinux32-2021.02.25-i686.iso
 9047  cht.sh dd format
 9048  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9049  sudo dhcpcd -x wlp8s0
 9050  sudo dhcpcd enp6s0
 9051  ls
 9052  ping www.google.fr
 9053  sudo dhcpcd -x
 9054  exit
 9055  sudo kill -s kill $(ps -C "dhcpcd" -o pid=)
 9056  ping www.google.fr
 9057  sudo pacman -R dhcpcd
 9058  sudo pacman -S dhcpcd
 9059  sudo dhcpcd enp6s0
 9060  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 9061  pacman-key -v archlinux-version-x86_64.iso.sig
 9062  sudo pacman-key -v archlinux-version-x86_64.iso.sig
 9063  gpg --keyserver-options auto-key-retrieve --verify archlinux-version-x86_64.iso.sig
 9064  cd Downloads
 9065  gpg --keyserver-options auto-key-retrieve --verify archlinux-version-x86_64.iso.sig
 9066  gpg --keyserver-options auto-key-retrieve --verify archlinux-2023.02.01-x86_64.iso.sig
 9067  pacman-key -v archlinux-2023.02.01-x86_64.iso.sig
 9068  lsblk
 9069  cp archlinux-2023.02.01-x86_64.iso /dev/sdd
 9070  sudo cp archlinux-2023.02.01-x86_64.iso /dev/sdd
 9071  ls
 9072  z awesome
 9073  nvim rc.lua
 9074  sudo systemctl start bluetooth.service
 9075  bluetoothctl scan on
 9076  bluetoothctl discoverable on
 9077  bluetoothctl pair 40:45:DA:28:54:3A
 9078  bluetoothctl scan on
 9079  bluetoothctl pair 40:45:DA:28:54:3A
 9080  bluetoothctl scan on
 9081  bluetoothctl pair 40:45:DA:28:54:3A
 9082  bluetoothctl connect 40:45:DA:28:54:3A
 9083  bluetoothctl scan on
 9084  bluetoothctl connect 40:45:DA:28:54:3A
 9085  bluetoothctl discoverable on
 9086  bluetoothctl connect 40:45:DA:28:54:3A
 9087  bluetoothctl helo
 9088  bluetoothctl help
 9089  bluetoothctl pairable on
 9090  bluetoothctl connect 40:45:DA:28:54:3A
 9091  z awesine
 9092  z awesome
 9093  nvr -s rc.lua
 9094  history | grep pamac
 9095  history | grep yay
 9096  yay -S ventoy-bin
 9097  ls
 9098  cd /run/media/oxhart/2067-6B18
 9099  ls
 9100  /opt/ventoy/Ventoy2Disk.sh
 9101  lsblk
 9102  cd ..
 9103  lsblk
 9104  umount /dev/sdd1
 9105  umount /dev/sdd
 9106  /opt/ventoy/Ventoy2Disk.sh -i /dev/sdd
 9107  /opt/ventoy/Ventoy2Disk.sh
 9108  sudo /opt/ventoy/Ventoy2Disk.sh -i /dev/sdd
 9109  ls
 9110  cp ~/Downloads/archlinux-2023.02.01-x86_64.iso Ventoy
 9111  lsblk
 9112  ventoy -i /dev/sdd
 9113  sudo ventoy -i /dev/sdd
 9114  sudo ventoy -iu /dev/sdd
 9115  sudo ventoy -u /dev/sdd
 9116  ks
 9117  ls
 9118  lsblk
 9119  mount /dev/sdd /run/media/ventoy
 9120  mount /dev/sdd1 /run/media/ventoy
 9121  cd /mnt
 9122  ls
 9123  mkdir ventoy
 9124  cd -
 9125  ls
 9126  cp ~/Downloads/archlinux-2023.02.01-x86_64.iso Ventoy
 9127  cd Ventoy
 9128  ls
 9129  sudo cp ~/Downloads/archlinux-2023.02.01-x86_64.iso .
 9130  cd ..
 9131  ls
 9132  sudo cp ~/Downloads/archlinux-2023.02.01-x86_64.iso Ventoy
 9133  ls
 9134  cd Ventoy
 9135  ls
 9136  ls -la
 9137  sudo ventoy -i /dev/sdd
 9138  lsblk
 9139  sudo ventoy -I /dev/sdf
 9140  sudo ventoy -i /dev/sdf
 9141  sudo ventoy -I /dev/sdf
 9142  rm ~/Downloads/archlinux-2023.02.01-x86_64.iso
 9143  sudo ventoy -I /dev/sdf
 9144  z down
 9145  z Down
 9146  cd torrent
 9147  ls
 9148  cd ..
 9149  ls
 9150  cd
 9151  cd /run/media/oxhart
 9152  ls
 9153  cd Ventoy
 9154  ls
 9155  ls -la
 9156  cp archlinux-2023.02.01-x86_64.iso /run/media/oxhart/Ventoy
 9157  ls
 9158  cd 
 9159  cd /run/media/oxhart
 9160  ls
 9161  cd Ventoy
 9162  ls
 9163  mkdir iso
 9164  cp archlinux-2023.02.01-x86_64.iso /run/media/oxhart/Ventoy/iso
 9165  ls
 9166  cd iso
 9167  ls
 9168  ls -la
 9169  cd
 9170  reboot
 9171  ls
 9172  cd /run/media/oxhart
 9173  ls
 9174  cd Ventoy
 9175  ls
 9176  cd iso
 9177  ls
 9178  rm archlinux-2023.02.01-x86_64.iso
 9179  ls
 9180  cd ..
 9181  ls
 9182  ls -la
 9183  rm -rf .Trash-1000
 9184  lsblk
 9185  mount /dev/sde1
 9186  mount /dev/sde1 /mnt
 9187  sudo mount /dev/sde1 /mnt
 9188  ls
 9189  cd /mnt
 9190  ls
 9191  cd iso
 9192  ls
 9193  cd ..
 9194  ls
 9195  cp ~/Downloads/torrent/archlinux-2023.02.01-x86_64.iso iso
 9196  umount /mnt
 9197  sudo umount /mnt
 9198  cd ..
 9199  sudo umount /mnt
 9200  lsblk
 9201  sudo mount /dev/sde1 /mnt
 9202  ls /mnt
 9203  cp ~/Downloads/CentOS-7-x86_64-DVD-2009.iso /mnt/iso
 9204  sudo cp ~/Downloads/CentOS-7-x86_64-DVD-2009.iso /mnt/iso
 9205  ls
 9206  sudo umount /mnt
 9207  sudo mount /dev/sde1 /mnt
 9208  ls
 9209  cd /mnt
 9210  ls
 9211  cd iso
 9212  ls
 9213  mkdir arch
 9214  sudo mkdir arch
 9215  mv archlinux-2023.02.01-x86_64.iso arch
 9216  sudo mv archlinux-2023.02.01-x86_64.iso arch
 9217  ls
 9218  cd arch
 9219  ls
 9220  sudo mkdir -p boot/syslinux
 9221  nvim boot/syslinux/syslinux.cfg
 9222  ls
 9223  rm -rf boot
 9224  sudo rm -rf boot
 9225  ls
 9226  cd ..
 9227  ls
 9228  cd arch
 9229  ls
 9230  md5sum archlinux-2023.02.01-x86_64.iso
 9231  ls
 9232  rm archlinux-2023.02.01-x86_64.iso
 9233  sudo rm archlinux-2023.02.01-x86_64.iso
 9234  cd ..
 9235  ls
 9236  rm arch
 9237  rmdir arch
 9238  sudo rmdir arch
 9239  ls
 9240  cd ..
 9241  sudo cp ~/Downloads/torrent/archlinux-2023.02.01-x86_64.iso iso
 9242  sha256sum iso/archlinux-2023.02.01-x86_64.iso
 9243  cd ..
 9244  sudo umount /mnt
 9245  sudo mount /dev/sde1 /mnt
 9246  lsblk
 9247  sudo cp ~/Downloads/ubuntu-22.04.1-desktop-amd64.iso /mnt/iso
 9248  sha256sum /mnt/iso/ubuntu-22.04.1-desktop-amd64.iso
 9249  echo "c396e956a9f52c418397867d1ea5c0cf1a99a49dcf648b086d2fb762330cc88d /mnt/iso/ubuntu-22.04.1-desktop-amd64.iso" | shasum -a 256 --check
 9250  cd /mnt/iso
 9251  echo "c396e956a9f52c418397867d1ea5c0cf1a99a49dcf648b086d2fb762330cc88d *ubuntu-22.04.1-desktop-amd64.iso" | shasum -a 256 --check
 9252  cd /
 9253  sudo umount /mnt
 9254  sudo mount /dev/sde1 /mnt
 9255  sudo cp -r ~/Downloads/torrent/tails-amd64-5.9-img /mnt/iso
 9256  ls
 9257  cd /mnt/iso
 9258  ls
 9259  cd tails-amd64-5.9-img
 9260  ls
 9261  sha256sum tails-amd64-5.9.img
 9262  cd /
 9263  sudo umount /mnt
 9264  sudo systemctl start bluetooth.service
 9265  z awesome
 9266  nvr -s rc.lua
 9267  ls
 9268  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9269  sudo dhcpcd wlp8s0
 9270  sudo rfkill unblock wifi
 9271  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9272  sudo dhcpcd wlp8s0
 9273  sudo rm /run/wpa_supplicant/wlp8s0
 9274  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9275  sudo dhcpcd wlp8s0
 9276  sudo dhcpcd enp6s0
 9277  sudo dhcpcd wlp8s0
 9278  sudo ip address add 192.168.0.230/24 broadcast + dev wlp8s0
 9279  sudo dhcpcd wlp8s0
 9280  sudo rm /run/wpa_supplicant/wlp8s0
 9281  sudo ip address add 192.168.0.230/24 broadcast + dev wlp8s0
 9282  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9283  sudo dhcpcd wlp8s0
 9284  sudo dhcpcd
 9285  dhcpcd wlp8s0
 9286  sudo dhcpcd wlp8s0
 9287  nvim /etc/wpa_supplicant/hiden.conf
 9288  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9289  sudo rm /run/wpa_supplicant/wlp8s0
 9290  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9291  sudo dhcpcd wlp8s0
 9292  sudo rm /run/wpa_supplicant/wlp8s0
 9293  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9294  sudo kill -s kill $(ps -C "dhcpcd" -o pid=)
 9295  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9296  sudo rm /run/wpa_supplicant/wlp8s0
 9297  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9298  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9299  sudo dhcpcd wlp8s0
 9300  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9301  sudo kill -s kill $(ps -C "dhcpcd" -o pid=)
 9302  sudo rm /run/wpa_supplicant/wlp8s0
 9303  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 9304  sudo wpa_cli
 9305  sudo dhcpcd wlp8s0
 9306  sudo wpa_cli
 9307  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9308  sudo rm /run/wpa_supplicant/wlp8s0
 9309  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9310  sudo rm /run/wpa_supplicant/wlp8s0
 9311  sudo kill -s kill $(ps -C "dhcpcd" -o pid=)
 9312  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9313  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9314  sudo rm /run/wpa_supplicant/wlp8s0
 9315  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9316  sudo dhcpcd enp6s0
 9317  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 9318  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9319  sudo ip address add 192.168.0.230/24 broadcast + dev wlp8s0
 9320  sudo ip address del 192.168.0.80/24 dev wlp8s0
 9321  sudo ip address del 192.168.0.230/24 dev wlp8s0
 9322  sudo ip address add 192.168.0.230/24 broadcast + dev wlp8s0
 9323  sudo dhcpcd wlp8s0
 9324  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9325  sudo kill -s kill $(ps -C "dhcpcd" -o pid=)
 9326  sudo rm /run/wpa_supplicant/wlp8s0
 9327  sudo ip address del 192.168.0.230/24 dev wlp8s0
 9328  sudo ip address add 192.168.0.230/24 broadcast + dev wlp8s0
 9329  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9330  sudo rm /run/wpa_supplicant/wlp8s0
 9331  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9332  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 9333  sudo wpa_cli
 9334  sudo dhcpcd wlp8s0
 9335  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9336  sudo rm /run/wpa_supplicant/wlp8s0
 9337  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 9338  sudo wpa_cli
 9339  wpa_supplicant -h
 9340  sudo cp /etc/wpa_supplicant/hiden.conf /etc/wpa_supplicant/phantom.conf
 9341  nvim /etc/wpa_supplicant/phantom.conf
 9342  ls
 9343  su
 9344  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9345  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/phantom.conf
 9346  kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9347  sudo kill -s kill $(ps -C "wpa_supplicant" -o pid=)
 9348  nvim /etc/wpa_supplicant/hiden.conf
 9349  su
 9350  dhcpcd wlp8s0
 9351  sudo dhcpcd wlp8s0
 9352  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9353  ls
 9354  cd .wine/dosdevices/c:
 9355  cd ~
 9356  cd .wine/dosdevices/c:
 9357  ls
 9358  cd swsetup
 9359  ls
 9360  cd SP73863
 9361  ls
 9362  cd ..
 9363  ls
 9364  sudo mount /dev/sde1 /mnt
 9365  sudo cp -r SP73863 /mnt
 9366  sudo umount /mnt
 9367  ls
 9368  cd SP73863
 9369  ls
 9370  cat How\ to\ Use.txt
 9371  ls
 9372  cp ~/.wine/dosdevices/c:/swsetup/SP738638/* .
 9373  cp ~/.wine/dosdevices/c:/swsetup/SP738638/** .
 9374  cd ..
 9375  cp ~/.wine/dosdevices/c:/swsetup/SP738638/* 64D5-E1DC
 9376  cd ~/.wine/dosdevices/c:/swsetup
 9377  ls
 9378  cd SP73863
 9379  ls
 9380  cp * /run/media/oxhart/64D5-E1DC
 9381  cp -r * /run/media/oxhart/64D5-E1DC
 9382  sudo umount /run/media/oxhart/64D5-E1DC
 9383  sudo mount /dev/sde1 /mnt
 9384  su
 9385  cd Downloads
 9386  ls
 9387  unzip DOS\ Flash.zip -d dos_flash
 9388  cd dos_flash
 9389  ls
 9390  z dot
 9391  ls
 9392  cd tridactyl
 9393  ls
 9394  ls -la
 9395  cat .tridactylrc
 9396  z awesome
 9397  nvr -s rc.lua
 9398  z builds
 9399  ls
 9400  cd ..
 9401  ls
 9402  cd ..
 9403  ls
 9404  git clone https://github.com/streetturtle/awesome-wm-widgets.git
 9405  ls
 9406  cd awesome-wm-widgets
 9407  ls
 9408  cp -r volume-widget ../terminalConfigs/.dotfiles/awesome/
 9409  cd ../terminalConfigs/.dotfiles
 9410  ls
 9411  stow -h
 9412  stow -R ~/.config/awesome awesome
 9413  stow -R -t ~/.config/awesome awesome
 9414  cd awesome
 9415  ls
 9416  kill -s kill $(ps -C "volumeicon" -o pid=)
 9417  cp -r ../../../awesome-wm-widgets 
 9418  cp -r ../../../awesome-wm-widgets .
 9419  ls
 9420  stow -R -t ~/.config/awesome awesome
 9421  cd ../..
 9422  ls
 9423  cd .dotfiles
 9424  stow -R -t ~/.config/awesome awesome
 9425  cd awesome
 9426  ls
 9427  cd awesome-wm-widgets
 9428  ls
 9429  cd volume-widget
 9430  ls
 9431  cat volume.lua
 9432  nvim volume.lua
 9433  cd ..
 9434  ls
 9435  cd ..
 9436  ls
 9437  rm -rf awesome-wm-widgets
 9438  mkdir awesome-wm-widgets
 9439  cp -r ../../../awesome-wm-widgets/volume-widget awesome-wm-widgets
 9440  sudo pacman -S pacmd
 9441  pulseaudio 
 9442  history | grep pulse
 9443  pulseaudio
 9444  pipewire-pulse -v
 9445  pipewire-pacmd
 9446  ls
 9447  nvr -s rc.lua
 9448  ls
 9449  cd awesome-wm-widgets
 9450  ls
 9451  pactl info
 9452  history | grep sink
 9453  pacmd list-sinks
 9454  wpctl status
 9455  nvim
 9456  wpctl status
 9457  wpctl -h
 9458  pactl list
 9459  pactl list sinks
 9460  pactl list sources
 9461  pactl list-sources
 9462  ls
 9463  rm -rf volume-widget
 9464  cp -r ../../../../awesome-wm-widgets/pactl-widget .
 9465  stow -R -t ~/.config/awesome awesome
 9466  cd ..
 9467  stow -R -t ~/.config/awesome awesome
 9468  ls
 9469  z /home/oxhart/Documents/builds/terminalConfigs/.dotfiles
 9470  ls
 9471  stow -R -t ~/.config/awesome awesome
 9472  cd awesome
 9473  cp -r ../../../awesome-wm-widgets/volume-widget awesome-wm-widgets
 9474  cd ..
 9475  stow -R -t ~/.config/awesome awesome
 9476  git status
 9477  git add --all
 9478  git  commit -am "change volumeicon for a native lua widget to manage sound on awesomewm "
 9479  git push origin master
 9480  ls
 9481  visudo
 9482  sudo visudo
 9483  ls
 9484  lsblk
 9485  mkdir ~/mount
 9486  mount /dev/sde1 ~/mount
 9487  sudo mount /dev/sde1 ~/mount
 9488  cd ~/mount
 9489  ls
 9490  rm -rf SP73863
 9491  ls
 9492  visudo
 9493  sudo visudo
 9494  sudo rm -rf SP73863
 9495  ls
 9496  cd ..
 9497  umount -R ~/mount
 9498  sudo umount -R ~/mount
 9499  rmdir mount
 9500  yay -S nerds-fonts-meta
 9501  yay -S nerd-fonts-meta
 9502  ls
 9503  htop
 9504  z dot
 9505  ls
 9506  nvim ~/.zshrc
 9507  cd .oh-my-zsh
 9508  ls
 9509  cd ~/.oh-my-zsh
 9510  ls
 9511  cd plugins
 9512  ls
 9513  cd ..
 9514  ls
 9515  cd emacs
 9516  ls
 9517  cd plugins
 9518  ls
 9519  cd ..
 9520  ls
 9521  cd ..
 9522  zip -r oh-my-zsh.zip .oh-my-zsh
 9523  cd .oh-my-zsh
 9524  ls
 9525  cd test
 9526  mkdir test
 9527  test.js
 9528  nvim test.js
 9529  ls
 9530  z awesome
 9531  nvr -s
 9532  vim
 9533  nvim ~/.zshrc
 9534  source ~/.zshrc
 9535  vim
 9536  nvim
 9537  nvim ~/.zshrc
 9538  source ~/.zshrc
 9539  nvim
 9540  nvr -s
 9541  source ~/.zshrc
 9542  nvim ~/.zshrc
 9543  nvim
 9544  nvr -l theme.lua
 9545  ls
 9546  nvim
 9547  ls
 9548  z nvim
 9549  nvim
 9550  ls
 9551  nvim test.js
 9552  nvim
 9553  nvim ~/.zshrc
 9554  ls
 9555  nvr -s rc.lua
 9556  awesome-client 'local naughty = require("naughty") naughty.notification{title="debug", message="tests", timeout=3}'\n
 9557  printf "\x1b[38;2;255;100;0mTRUECOLOR\x1b[0m\n"
 9558  printf '\x1b]99;i=1:d=1:p=body;This is cool\x1b\\'
 9559  jprintf '\x1b]99;;Hello world\x1b\\'\n
 9560  printf '\x1b]99;;Hello world\x1b\\'\n
 9561  notify-send "Help" -u normal
 9562  lol
 9563  \x1afg;printf done\r
 9564  printf done
 9565  printf done\r
 9566  \x1
 9567  find / -iname *kitty*
 9568  find / -iname "*kitty*"
 9569  fg;printfdone\r
 9570  find ~/.config -iname "*kitty*" | xargs nvr -l
 9571  nvr -s rc.lua
 9572  find ~/.config -iname "*kitty*" | xargs nvr -l
 9573  nvr -s rc.lua
 9574  find ~/.config -iname "kitty.conf" | xargs nvr -l
 9575  nvr rc.lua
 9576  find ~/.config -iname "kitty.conf" | xargs nvr -l
 9577  find ~ -name "kitty.conf" 2>/dev/null | xargs nvr -l
 9578  find / -iname "*kitty*"
 9579  lol9;5ufg;printf done
 9580  fg;printf done
 9581  9;5ufg;printf done
 9582  find ~ -name "kitty.conf" 2>/dev/null | xargs nvr -l
 9583  find / -iname "*kitty*"
 9584  fg;printf done
 9585  kitty send
 9586  kitty -h
 9587  nvim test
 9588  ls
 9589  cd scripts
 9590  ls
 9591  cat test1
 9592  nvim test2
 9593  chmod u+x test2
 9594  ./test2
 9595  find / -iname "*kitty*"
 9596  fg;printf done
 9597  find / -iname "*kitty*"
 9598  fg;printf done
 9599  bash
 9600  tmux
 9601  z awesome
 9602  nvim rc.lua
 9603  ls
 9604  tmux
 9605  z awesome
 9606  nvim rc.lua
 9607  exit
 9608  tmux
 9609  z awesome
 9610  nvim rc.lua
 9611  ls
 9612  ll
 9613  cd /home/oxhart/.emacs.d/.local/cache
 9614  ls
 9615  cat lsp-session
 9616  mkdir ~/broken_emacs_files
 9617  mv session* ~/broken_emacs_files
 9618  ls
 9619  mv autosave eshell games image-dired lsp-session profiles.@.el recentf saveplace tramp-autosave undo-fu-session url ~/broken_emacs_files
 9620  ls
 9621  z dot
 9622  nvim awesome
 9623  cd awesome
 9624  nvim rc.lua
 9625  z pic
 9626  ranger
 9627  exit
 9628  ls
 9629  cd ../
 9630  ls
 9631  cd ../
 9632  ls
 9633  cd bin
 9634  ls
 9635  ./doom update
 9636  ./doom upgrade
 9637  ./doom sync
 9638  ls
 9639  ============================================
 9640  nvim rc.lua
 9641  tmux 
 9642  nvim
 9643  nvim test.lua
 9644  exit
 9645  ls
 9646  tmux
 9647  nvim test.lua
 9648  exit
 9649  tmux
 9650  nvim test.lua
 9651  nvim go.lua
 9652  ls
 9653  z nvim
 9654  ls
 9655  z dot
 9656  cd nvim/.config/nvim
 9657  nvim
 9658  nvim go.lua
 9659  nvim test.lua
 9660  z -r nvim
 9661  z -h
 9662  z -t nvim
 9663  popd
 9664  z -t nvim
 9665  popd
 9666  z dot
 9667  z nvim -c
 9668  ls
 9669  dirs -v
 9670  popd -2
 9671  dirs -v
 9672  popd -1
 9673  nvim
 9674  nvim test
 9675  nvim
 9676  tmux
 9677  nvim
 9678  nvim ~/.zshrc
 9679  zsh
 9680  nvim ~/.zshrc
 9681  tmux
 9682  nvim ~/.zshrc
 9683  exit
 9684  nvim ~/.tmux.conf
 9685  ls
 9686  tmux -
 9687  tmux -v
 9688  tmux --version
 9689  tmux -h
 9690  tmux -help
 9691  tmux --help
 9692  man tmux
 9693  tmux -V
 9694  nvim test.lua
 9695  nvim lol.lua
 9696  nvim ~/.tmux.conf
 9697  tmux
 9698  nvim ~/.tmux.conf
 9699  nvim test.lua
 9700  tmux
 9701  z nvim -t
 9702  nvim test.lua
 9703  ls
 9704  z pic
 9705  ranger
 9706  ls
 9707  find ~/ -iname "rc.conf" | xargs nvim
 9708  z pic
 9709  ranger
 9710  tmux
 9711  ls
 9712  z pic
 9713  ranger
 9714  exit
 9715  ranger
 9716  ls
 9717  tmux
 9718  zsh
 9719  nvim ~/.zshrc
 9720  zsh
 9721  nvim ~/.zshrc
 9722  zsh
 9723  exit
 9724  ls
 9725  zsh
 9726  nvim ~/.zshrc
 9727  zsh
 9728  ls
 9729  zsh
 9730  nvim ~/.zshrc
 9731  zsh
 9732  nvim ~/.zshrc
 9733  zsh
 9734  ll
 9735  ls
 9736  z pic
 9737  ranger
 9738  ls
 9739  nvim ~/.p10k.zsh
 9740  ls
 9741  z tuto
 9742  lls
 9743  ls
 9744  zsh
 9745  ll
 9746  zsh
 9747  nvim ~/.p10k.zsh
 9748  zsh
 9749  ll
 9750  ls
 9751  ll
 9752  ls
 9753  z pic
 9754  ranger
 9755  vimfm
 9756  sudo pacman -S vimfm
 9757  ls
 9758  z downloads
 9759  ls
 9760  z Down
 9761  dirs -v
 9762  dirs -c
 9763  dirs -v
 9764  ls
 9765  ls *app*
 9766  vifm
 9767  ls
 9768  ./vifm-v0.12.1-x86_64.AppImage
 9769  chmod u+x vifm-v0.12.1-x86_64.AppImage
 9770  ./vifm-v0.12.1-x86_64.AppImage
 9771  vifm
 9772  z pic
 9773  vifm
 9774  sudo pacman -Qs vifm
 9775  popd
 9776  rm vifm-v0.12.1-x86_64.AppImage
 9777  vifm
 9778  nvim vifmrc
 9779  nvim ~/vifmrc
 9780  find ~/ -iname "vifmrc" | xargs nvim
 9781  sudo pacman -S vifm
 9782  find ~/ -iname "vifmrc" | xargs nvim
 9783  ls
 9784  ll
 9785  vifm
 9786  cd ~/Documents/builds/terminalConfigs/.dotfiles/awesome
 9787  nvim rc.lua
 9788  ls
 9789  z -t awesome
 9790  ls
 9791  dirs -v
 9792  popd -1
 9793  ls
 9794  cd awesome-wm-widgets
 9795  ls
 9796  cd volume-widget
 9797  ls
 9798  cd icons
 9799  ls
 9800  ranger
 9801  free
 9802  free | awk '/Mem:/ {print $3}'
 9803  virsh
 9804  man virsh
 9805  man virsh | grep net
 9806  virsh list
 9807  ls
 9808  cd ../..
 9809  ls
 9810  cd ..
 9811  ls
 9812  nvim rc.lua
 9813  xprop WM_CLASS
 9814  exit
 9815  tmux a -t
 9816  la
 9817  ls
 9818  ll
 9819  nvim ~/.p10k.zsh
 9820  fg;printf done
 9821  find ~/ -iname "kitty.conf" | xargs nvim
 9822  ls
 9823  fg;printf done
 9824  bash
 9825  cd scripts && nvim notif && chmod u+x notif
 9826  ./notif
 9827  nvim notif
 9828  ./notif
 9829  nvim notif
 9830  ./notif
 9831  nvim notif
 9832  ./test2
 9833  PPPPP
 9834  ~/scripts/test2
 9835  find / -iname "*kitty*"
 9836  find / -iname "*kitty*" 2> /dev/null
 9837  ~/scripts/test2
 9838  rm notif && mv test2 notif && nvim notif
 9839  nvim notif
 9840  rm /home/oxhart/.local/state/nvim/lsp.log
 9841  nvim notif
 9842  ls
 9843  nvim notif && chmod u+x notif && nvim notif -c 'set filetype=bash'
 9844  man nvim
 9845  nvim -c 'set filetype=bash' test
 9846  find / -iname "*kitty*" 2> /dev/null
 9847  ~/scripts/test2
 9848  find / -iname "*kitty*" 2> /dev/null
 9849  nvim notif
 9850  ~/scripts/notif
 9851  nvim notif
 9852  ~/scripts/notif
 9853  ls
 9854  ~/scripts/notif
 9855  nvim notif
 9856  ~/scripts/notif
 9857  ls
 9858  ~/scripts/notif
 9859  nvim notif
 9860  ~/scripts/notif
 9861  ls
 9862  printf ls
 9863  bash
 9864  ~/scripts/notif
 9865  bash
 9866  history
 9867  ./notif
 9868  ~/scripts/notif
 9869  zsh -ic 'fc -ln -1' | awk '{$1=""; print substr($0,2)}'
 9870  bash
 9871  nvim notif
 9872  ~/scripts/notif
 9873  ls
 9874  ~/scripts/notif
 9875  ls
 9876  ~/scripts/notif
 9877  ll
 9878  ~/scripts/notif
 9879  ls
 9880  ~/scripts/notif
 9881  ls
 9882  ~/scripts/notif
 9883  ls
 9884  ~/scripts/notif
 9885  ll
 9886  ~/scripts/notif
 9887  sl
 9888  ls
 9889  ~/scripts/notif
 9890  ll
 9891  ~/scripts/notif
 9892  ls
 9893  ~/scripts/notif
 9894  find / -iname "*kitty*" 2> /dev/null
 9895  ~/scripts/notif
 9896  find / -iname "*kitty*" 2> /dev/null
 9897  ~/scripts/notif
 9898  awesome-client 'local naughty = require("naughty") naughty.notification{title="debug", message="tests", timeout=3}'\n
 9899  exit
 9900  ls
 9901  grep -riI "awful.client.tiled"
 9902  cd /
 9903  sudo grep -riI "awful.client.tiled"
 9904  sudo grep -riI "awful.client.tiled" 2> /dev/null
 9905  wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/wpa_supplicant.conf
 9906  wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9907  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9908  sudo rm /run/wpa_supplicant/wlp8s0
 9909  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9910  nvim /usr/share/awesome/lib/awful/client.lua
 9911  sudo nvim /usr/share/awesome/lib/awful/client.lua
 9912  su
 9913  ~/scripts/notif
 9914  su
 9915  sudo systemctl disable sddm.service
 9916  sudo systemctl stop sddm.service
 9917  ls
 9918  ping www.google.fr
 9919  wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9920  sudo 1!
 9921  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9922  dhcpcd wlp8s0
 9923  sudo dhcpcd wlp8s0
 9924  history | grep rfkill
 9925  sudo rfkill unblock wifi
 9926  sudo dhcpcd wlp8s0
 9927  ls
 9928  sudo nvim /usr/share/awesome/lib/awful/client.lua
 9929  nvim /usr/share/awesome/lib/awful/client.lua
 9930  sudo nvim /etc/default/grub
 9931  nvim /etc/default/grub
 9932  grub-mkconfig -o /boot/grub/grub.cfg
 9933  sudo grub-mkconfig -o /boot/grub/grub.cfg
 9934  ls
 9935  sudo dhcpcd wlp8s0
 9936  sudo rfkill unblock wifi
 9937  sudo dhcpcd wlp8s0
 9938  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9939  sudo dhcpcd wlp8s0
 9940  sudo nvim /usr/share/awesome/lib/awful/client.lua
 9941  nvim /usr/share/awesome/lib/awful/client.lua
 9942  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 9943  la
 9944  ls
 9945  z awesome
 9946  nvim rc.lua
 9947  wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9948  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9949  ls
 9950  sudo rfkill unblock wifi
 9951  sudo wpa_supplicant -B -i wlp8s0 -c /etc/wpa_supplicant/hiden.conf
 9952  sudo dhcpcd wlp8s0
 9953  sudo nvim /usr/share/awesome/lib/awful/client.lua
 9954  nvim /usr/share/awesome/lib/awful/client.lua
 9955  cd /usr/share/awesome/lib
 9956  grep -riI "is_immobilized"
 9957  cd ..
 9958  grep -riI "is_immobilized"
 9959  z -t awesome
 9960  z awesome
 9961  nvim rc.lua
 9962  cd /
 9963  sudo grep -riI "is_immobilized_" 2> /dev/null
 9964  ~/scripts/notif
 9965  history | grep bluew
 9966  history | grep blue
 9967  sudo systemctl start bluetooth.service
 9968  z awesome
 9969  ls
 9970  nvim rc.lua
 9971  nvidia-settings --assign CurrentMetaMode="DP-0: 2560x1600+0+0 { ForceFullCompositionPipeline = On }"
 9972  man pacman
 9973  pacman -Qu
 9974  sudo pacman -Syy
 9975  pacman -Qu
 9976  pacman -Qu | wc -l
 9977  sudo pacman -Syyuu
 9978  vim
 9979  exit
 9980  sudo pacman -S st
 9981  ls
 9982  z lib
 9983  ls
 9984  cd awful
 9985  ls
 9986  cd ..
 9987  ls
 9988  grep -RiI "screen.tiled_clients"
 9989  nvim awful/tag.lua
 9990  fg
 9991  exit
 9992  ll
 9993  exit
 9994  ll
 9995  exit
 9996  ll
 9997  exut]
 9998  exit
 9999  ll
10000  exit
10001  nvim ~/.zshrc
10002  ls
10003  cd .local/bin
10004  ls
10005  ki
10006* exit
10007  nvr
10008  ll
10009  mv .zshenv ~/Documents/builds/terminalConfigs/.dotfiles/zsh
10010  z awesome
10011  ls
10012  cd ..
10013  ls
10014  stow -R -t ~/ zsh
10015  ls zsh
10016  ls -la zsh
10017  cat .zsh_history
10018  cat zsh/.zsh_history
10019  ls -la ~
10020  ls -la ~ *history*
10021  ls -la ~
10022  rm zsh/.zsh_history
10023  mv ~/.zsh_history zsh
10024  stow -R -t ~/ zsh
10025  ls -la ~
10026  ls
10027  ls -la zsh
10028  rm zsh/.zsh_history
10029  ls -la zsh
10030* wpa_supplicant 
10031* ls
10032* extundelete
10033* cat history
10034  history
10035  ls
