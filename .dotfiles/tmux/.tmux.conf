# Allow to launch the make command from tmux in the next window for vim c dev
bind-key v run-shell "~/scripts/bin/compile"
# set-option -g prompt "(%|\$|#) "
# set-option -g prompt "^[^❯\n]*[❯] *"

# bind -T copy-mode C-z send -X search-backward "^❯"
# bind -T copy-mode C-x send -X search-forward "^❯"
bind C-z copy-mode \; send -X search-forward "^❯[ ]+[^ ].+"
bind C-x copy-mode \; send -X search-backward "^❯[ ]+[^ ].+"
#set-option -ga terminal-overrides ",xterm-256color:Tc"
# Bind a key to run the custom script to enter Vim mode

set -g default-terminal "tmux-256color"
set -gq allow-passthrough on
#set -g default-terminal "xterm-256color:Tc"
#set -g default-terminal "screen-kitty"
#set -ga default-terminal "xterm-256color"
#set -ga default-terminal "xterm-256color"
#set-option -sa terminal-overrides ",xterm*:Tc"
#set-option -ga terminal-overrides ",screen-256color:Tc"
#set-option -ga terminal-overrides ",xterm-kitty:Tc"
#remove escape latency
set -sg escape-time 0

#set window and pane index to 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

#rebinding moving around panes
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

#rebinding command prefix
#unbind C-a
#set-option -g prefix C-a
#bind-key C-a send-prefix

#activate VI mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
#bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
set-option -s set-clipboard off
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -in"

bind -n M-w run -b "tmux show-buffer | clip.exe" #Needed for tmux through wsl2

#going back to last window
unbind space
bind space last-window

# Automatically renumber window numbers on closing a pane
set -g renumber-windows on

# Highlight active window
set -w -g window-status-current-style bg=red

#Enable focus event
set -g focus-events on
set-option -g allow-passthrough on #For image.nvim
#Enable mouse event
set -g mouse on

#enabple copy past for macOS
if "which pbcopy" \
   {bind -T copy-mode-vi y "send -X copy-pipe 'pbcopy' \; send -X cancel"}

if "which xsel" \
   {bind -T copy-mode-vi y "send -X copy-pipe 'xsel -ib' \; send -X cancel"}
#if-shell '[[ $(uname -s) == "Darwin" ]]' "set -g default-command 'reattach-to-user-namespace -l $SHELL'"
#set -g default-command "reattach-to-user-namespace -l $SHELL"
#status bar
set -g status-bg '#343d46'
set -g status-fg white
set -g status-left-length 40
set -g status-left '#[fg=yellow]#S '
# in .tmux.conf
#set -g status-right '#{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M '
#set -g status-right "#[fg=yellow]$USER@h #[fg=magenta]%l:%M %p"
set -g status-right-length 100
#set -g status-right "#(uname -a | cut -d' ' -f2,3) #[fg=yellow]$USER #[fg=magenta]%a %h-%d %H:%M #[fg=grey]Bonne fête aux #(jq -r '.name' $HOME/scripts/fete/day.json)"
set -g status-right "#[fg=magenta]%a %h-%d %H:%M #[fg=grey]Bonne fête aux #(jq -r '.name' $HOME/scripts/fete/day.json)"
set -g status-interval 60 # default is 15.

#set-option -ga terminal-overrides ",xterm-256color:Tc"
#set -as terminal-overrides ",screen*:RGB"
set-option -sa terminal-features ',tmux-256color:RGB'
#set-option -sa terminal-overrides ',xterm-256color:Tc'


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# allow fzf auto completion inside tmux
#set -g @plugin 'laktak/extrakto'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-capture-pane-contents 'on'
 # for neovim ressurection  sessions
set -g @resurrect-strategy-nvim 'session'

#cpu/gpu monitoring
#set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-yank'

# set -g @plugin 'catppuccin/tmux'
# set -g @catppuccin_flavour "cyberdream"

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
